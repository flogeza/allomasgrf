


//******************************************************************************************************************************************************//
//																																						//
//																	TESZT2																				//
//																																						//
//******************************************************************************************************************************************************//


 1169 * 544	 00 04 03 01 01 08 "PKST"
		0B 02
		1A				// Advanced Sprite layout
		02				// number of layouts

		42				// number of sprites (40 + count)
		F4 03 00 00		// ground sprites
		00 00			// flags, word size
//		10				// from register

		2D 04 00 80		// building sprite
		00 00			// flags, ha 0, akkor mindenkeppen rajzolunk
		00 00 00 10 10 30
//		03				// register

		2E 04 00 80		// building sprite
		01 00			// flags
		00 00 00 10 10 30
//		00 00 80		// <xpixeloffset> <ypixeloffset> 80
		13				// register



		42
		F3 03 00 00		// ground sprites
		00 00			// flags, word size
//		10				// from register

		2F 04 00 80		// building sprite
		00 00			// flags
		00 00 80		// <xpixeloffset> <ypixeloffset> 80
//		00 00 00 10 10 30
//		03				// register

		30 04 00 80		// building sprite
		01 00			// flags
		00 00 80		// <xpixeloffset> <ypixeloffset> 80
		13				// register


//45													// number of sprites (40 + count)
//F4 03 00 00			02 00					10			// 10-es registerbol kirajzolas
//47 04 00 80		02 00		00 00 80	03			// harmas registerbol kirajzolas
//37 04 00 80		00 00 00 00 00 10 05 15				// utolso hat biztos, hogy bounding box, nincs register
//43 04 00 80		01 00		06 00 80	02			// 02-es registerbol kirajzolas
//39 04 00 80		00 00 00 0B 00 10 05 22				// utolso hat biztos, hogy bounding box, nincs register
//45 04 00 80		01 00		00 00 80	02			// regiszter, value, talan ebben taroljak ezt el???


//45													// number of sprites (40 + count)
//F3 03 00 00			02 00 10
//48 04 00 80		02 00 00 00 80 03
//38 04 00 80		00 00 00 00 00	05 10 15
//44 04 00 80		01 00 00 00 80 02
//3A 04 00 80		00 00 0B 00 00 05 10 22
//46 04 00 80		01 00 00 00 80 02



	0 * 4	 01 04 01 04
	0 sprites_grafika/teszt1.png 8bpp 0  0  44 55 -32 -34 normal chunked	// peron
	0 sprites_grafika/teszt1.png 8bpp 0  56 44 55 -32 -34 normal chunked	// lampa
	0 sprites_grafika/teszt1.png 8bpp 45 0  44 55 -11 -34 normal chunked	// peron
	0 sprites_grafika/teszt1.png 8bpp 45 56 44 55 -11 -34 normal chunked	// lampa

	00 * 00	02 04 00 00 01 00 00
//	00 * 00	02 04 01 00 01 01 00

//@@WARNING DISABLE 100
//@@WARNING DISABLE 170

	00 * 00	02 04 04
		85 42						// (81 lowest byte, 1 bajt), (85 lowest word, 2 bajt), (89 lowest doubleword, 4 bajt) type, 42 variable: azaz Terrain and track type
		08							// azaz shift, ez mindenkeppen byte
		FF FF						// azaz mindket szam kell..., ez olyan tipusu, mint a type
		01							// 1 variacio van
		00 00	01 00	01 00		// peron
		01 00						// fa

-1 * -1    02 04 04 85
		7E 04	20 FF FF                          // Get slope offset from procedure 40
		\2sto  1A    00   13 00                     // Store in register 0x03, 1A mindenkepp, 00, azaz mar nem 20, 03 00 pedig akkor, ha word kell
		\b 1
		\wx 00     00 00 00 00                           // always procede at 00
		\wx 00


// callback handler for build menu
// switch between callback and graphics branches
   00 * 00	02 04 C0					// Set-ID C0
			85 0C 00 FF FF				// get word, check if callback
			01							// one range
//			FA 00 13 00 13 00			// lekerdezzuk, hogy elerheto-e, tehat a 13 callback az elerhetoseg???
			00 80 14 00 14 00			// use layouts 06/07 during callback 14
			04 00						// menu grafika....

//   00 * 00	03 04 01 00 00 A0 00		// igy nincs cargo azonositas, hanem azonnal ugrunk a A0 action2-re
   00 * 00	03 04 01 01
   01									// hany darab kulonbozo cargo
   FF C0 00								// FF elvileg a menu hivasa, ezt olvastam...
//   FE 00 00							// FE, ez a kozepe mezore vagy a kozepehez kepest eszakra levo mezore a grafikat hivja meg...
   04 00								// ha nem menu, akkor AA action2-re


//@AssignOneGraphicsSetForAllCargo: action2id: 4, stationid: 1

//*************************************//
//				Strings			//
//************************************//

@StationNames
Station: stationid: 1, language: default, name: "Teszt 2"
//	Station: stationid: 1, language: default, name: "Teszt 1"
@EndStationNames


// Animation frame - maybe stop at open
// 4516 * 14	 02 04 54 // ID
// 81 10 // extra callback info - random bits
// 00 FF
// 01
// \wx80FF 00 3F // 25% chance of stop
// \wx80FE // continue

// Animation frame
// 4517 * 14	 02 04 55 // ID
// 81 4A // animation frame
// 00 FF
// 01
// \wx0054 04 04 // maybe stop at open
// \wx80FE // continue

// Animation control - at frame 9 - maybe start animation
// 4518 * 14	 02 04 56 // ID
// 81 10 // extra callback info - random bits
// 00 FF
// 01
// \wx8000 00 3F // 25% chance of start (from frame 0)
// \wx80FD // do nothing

// Animation control - at frame 4 - maybe restart animation
// 4519 * 14	 02 04 57 // ID
// 81 10 // extra callback info - random bits
// 00 FF
// 01
// \wx80FE 00 3F // 25% chance of start (from current frame)
// \wx80FD // do nothing

// Animation control - start animation
// 4520 * 18	 02 04 58 // ID
// 81 4A // animation frame
// 00 FF
// 02
// \wx0056 09 09 // frame 9, the animation has finished maybe start from 0
// \wx0057 04 04 // frame 4, the animation is stopped at open, maybe restart
// \wx80FD // do nothing

// Animation control start/stop
// 4521 * 18	 02 04 59 // ID
// 81 18 // extra callback info - reason for call
// 00 FF
// 02
// \wx8000 00 00 // build station - set frame 0 - will also start animation
// \wx0058 01 01 // cargo arrives - start
// \wx80FD // do nothing







// Action0 properties:
// General flags
// 13 04 // give callback 141 random bits in variable 10

// 16 \wx0009 // animation info 10 frames
// 17 04 // animation speed 2^4 ticks per frame
// 18 \wx0003 // animation triggers - build (1), cargo arrives (2)



// Callback handler
// 4545 * 29	 02 04 02 // ID
// 85 0C // callback
// 00 \wxFFFF
// 03
// \wx8000 \wx0014 \wx0014 // sprite layout
// \wx0059 \wx0140 \wx0140 // animation control
// \wx0055 \wx0141 \wx0141 // animation frame
// \wx0015 // real sprites

// // For purchase list
// 4546 * 17	 02 04 03 // ID
// 85 0C // callback
// 00 \wxFFFF
// 01
// \wx8000 \wx0014 \wx0014 // sprite layout
// \wx0016 // real sprites

// 4547 * 10	 03 04
// 01 6F
// 01
// FF \wx0003 // purchase
// \wx0002




//**************************************//
//				Strings					//
//**************************************//

//   00 * 00	04 04 FF 01 F1 C5 "TESZT2" 00
//   00 * 00	04 04 FF 01 F2 C5 "TESZT3" 00