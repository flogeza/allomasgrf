


//******************************************************************************************************************************************************//
//																																						//
//																	NYUGATI																				//
//																																						//
//******************************************************************************************************************************************************//


//**************************************//
//				Elulso epulet			//
//**************************************//

    00 * 00	00 04															// action0, feature 4, azaz allomas
			05 01 00														// 05, azaz hany darab propertit irunk felul es ebben a reszben hany allomast irunk felul, utolso szam a az elso station ID
			08 "PKS0"														// 08 a station class azonositoja, a "PKS0" pedig a sajat definialt station csoport ID-ja
			11 00 14 FF 15 FF												// 11 villanyoszlop, 14 felso vezetek, es a 15, hogy bejohet-e a vonat... elvileg
//			0C FE es 0D FE													// 0C es 0D ezek az allomas lehetseges kiterjedese valami bitmask formaban. egyik egyik forgatas, masik masik forgatas
   			09 02	// ez mar a konkret tile-okat jelenti

//0000042D+X (00 00 04 2D + x)	Sima, company color nelkuli valtozat....
//0000842D+X (00 00 84 2D + x)	Company color valtozat
//0322442D+X (03 22 44 2D + x)	transparent color valtozat

			// a sprite layoutok informacioi, 02 hany darab nezetet definialunk
    		0C E3 00 00														// EC 03 00 00 a fekete teglalap kodja, de F4 03 fuves sines egyenes, F3 03 szinten fuves sines egyenes, csak masik forgatasban
    		00 00 00	10 10 46	2D 04 00 00								// utolso negy a sprite szama, elotte levo harom a bounding box merete, ami majdnem a sprite merete, x,y,z; ha 322-t adunk meg az utolso ket helyen (22 03), akkor atlatszo, glass lesz
//    		00 00 00	05 10 03	2E 04 00 00
    		80
																			// sprite leiras lezaro resz
			0C E3 00 00
			00 00 00	10 10 46	2E 04 00 00
//			00 00 00	05 10 03	30 04 00 00
			80

    00 * 00	 01 04 01 02													// 01 action, 04 allomas feature, 01 hany station ID-t hatarozunk meg, 04 ID-nkent hany darab sprite van
//    00 spiretes_grafika/nyugati.pcx 8bpp 167 2 68 35 -32 -1 normal chunked
	00 spiretes_grafika/nyugati.pcx 8bpp 85 5 68 79 -34 -46 normal chunked
//   00 spiretes_grafika/nyugati.pcx 8bpp 167 2 68 35 -33 -2 normal chunked
    00 spiretes_grafika/nyugati.pcx 8bpp 3 3 75 84 -37 -50 normal chunked

   00 * 00  02 04															// 02 action, 04 allomas feature
			00 01															// 00 mi legyen az action ID-ja, 01 hany kulonbozo spriteot/cargot kezel vagy ha jol ertem akkor hany kulonbozo lekerdezest hajtson vegre es keressen ra talalatot
			01 00 00														// ha jol gondolom, akkor annyiszor ez a sor, ahanyat megadtunk elozoleg
//																			// 01 az erteke a lekerdezesnek, 00 00 forditott bytesorrend az elozohoz tartozik, ha ervenyes ra, akkor ezt a spritot tolti be, marmint ezt az azonositoju sprite-ot
			00 00															// utolso ket 00 00 az alapertelmezett spritot tolti be, ha az elozoekre nem talalt megoldast, ez is forditott bytesorrendu

   00 * 00	02 04 01 01 01 00 00 00 00

   00 * 00  03 04															// 03 action, 04 allomas feature
			01 00															// 01 hany darab 3-as action azonositot akarunk, 00 - (n) itt az azonositok jonnek felsorolva, annyi, amennyit elotte megadtunk, ez utobbi allomast ID-t jelent
//																			// minden egyes uj 00 action utan ujrakezdodik ay allomas es a sprite azonositoja
			01																// 01 hany kulon cargo fajtat akarunk meghatarozni, hogy milyen allomas reszt toltson be
			FF 01 00														// annyiszor ez a sor, ahanyat megadtunk elozoleg, FF cargo azonositoja, talan az FF az osszes cargot jelenti (vagyis az FF talan a menut jelenti)..., 01 00 pedig a forditott bytesorrendu action2 azonositot jelent
			00 00															// utolso ket 00 00 ha nincs talalat a megadott cargokra, akkor ezt az azonositoju action2-t fogja betolteni, ez is forditott bytesorrendu


//**************************************//
//				Kistorony 1				//
//**************************************//

   00 * 00  00 04 05 01 01 08 "PKS0"
			11 00 14 FF 15 FF
   			09 02

    		0C E3 00 00
    		00 00 00	05 10 03	2D 04 00 00
//    		00 00 00	05 10 03	2E 04 00 00
    		80

			0C E3 00 00
			00 00 00	05 10 03	2E 04 00 00
//			00 00 00	05 10 03	30 04 00 00
			80

   00 * 00	 01 04 01 02
//   00 spiretes_grafika/nyugati.pcx 8bpp 167 2 68 35 -32 -1 normal chunked
   00 spiretes_grafika/nyugati.pcx 8bpp 5 92 66 90 -33 -59 normal chunked
//   00 spiretes_grafika/nyugati.pcx 8bpp 167 2 68 35 -33 -2 normal chunked
   00 spiretes_grafika/nyugati.pcx 8bpp 78 92 67 78 -33 -45 normal chunked

   00 * 00	02 04 00 01 01 00 00 00 00
   00 * 00	02 04 01 01 01 00 00 00 00
   00 * 00	03 04 01 01 01 FF 01 00 00 00



//**************************************//
//				Kistorony 2				//
//**************************************//

   00 * 00	00 04 05 01 02 08 "PKS0"
			11 00 14 FF 15 FF
			09 02

			0C E3 00 00
			00 00 00	05 10 03	2D 04 00 00
//			00 00 00	05 10 03	2E 04 00 00
			80

			0C E3 00 00
			00 00 00	05 10 03	2E 04 00 00
//			00 00 00	05 10 03	30 04 00 00
			80

   00 * 00	01 04 01 02
//   00 spiretes_grafika/nyugati.pcx 8bpp 167 2 68 35 -32 -1 normal chunked
   00 spiretes_grafika/nyugati.pcx 8bpp 151 92 67 78 -33 -45 normal chunked
//   00 spiretes_grafika/nyugati.pcx 8bpp 167 2 68 35 -33 -2 normal chunked
   00 spiretes_grafika/nyugati.pcx 8bpp 225 95 66 65 -33 -32 normal chunked

   00 * 00	02 04 00 01 01 00 00 00 00
   00 * 00	02 04 01 01 01 00 00 00 00
   00 * 00	03 04 01 02 01 FF 01 00 00 00



//**************************************//
//			Oldalso epulet				//
//**************************************//

   00 * 00  00 04 07 01 03 08 "PKS0"
			11 00 14 FF 15 FF
			0D FE
			09 06

			0C E3 00 00
//			00 00 00	05 10 03	2D 04 00 00
//			00 00 00	05 10 03	2E 04 00 00
			00 00 00	05 10 03	2D 04 17 03
			80

			0C E3 00 00
//			00 00 00	05 10 03	2F 04 00 00
//			00 00 00	05 10 03	30 04 00 00
			00 00 00	05 10 03	2E 04 17 03
			80

			0C E3 00 00
//			00 00 00	05 10 03	31 04 00 00
//			00 00 00	05 10 03	32 04 00 00
			00 00 00	05 10 03	2F 04 17 03
			80

			0C E3 00 00
//			00 00 00	05 10 03	33 04 00 00
//			00 00 00	05 10 03	34 04 00 00
			00 00 00	05 10 03	30 04 17 03
			80

			0C E3 00 00
//			00 00 00	05 10 03	35 04 00 00
//			00 00 00	05 10 03	36 04 00 00
			00 00 00	05 10 03	31 04 17 03
			80

			0C E3 00 00
//			00 00 00	05 10 03	37 04 00 00
//			00 00 00	05 10 03	38 04 00 00
			00 00 00	05 10 03	32 04 17 03
			80

			0B 02	# custom sprite layout


   00 * 00	01 04 03 02

//   00 spiretes_grafika/nyugati.pcx 8bpp 168 44 66 34 -33 -1 normal chunked
   00 spiretes_grafika/nyugati.pcx 8bpp 9 199 58 64 -24 -36 normal chunked		// 1 eleje
//   00 spiretes_grafika/nyugati.pcx 8bpp 168 44 66 34 -33 -1 normal chunked
   00 spiretes_grafika/nyugati.pcx 8bpp 251 198 58 64 -32 -36 normal chunked		// 2 eleje

//   00 spiretes_grafika/nyugati.pcx 8bpp 168 44 66 34 -33 -1 normal chunked
   00 spiretes_grafika/nyugati.pcx 8bpp 118 199 38 64 -28 -38 normal chunked		// 1 kozepso
//   00 spiretes_grafika/nyugati.pcx 8bpp 168 44 66 34 -33 -1 normal chunked
   00 spiretes_grafika/nyugati.pcx 8bpp 162 198 38 64 -8 -38 normal chunked		// 2 kozepso

//   00 spiretes_grafika/nyugati.pcx 8bpp 168 44 66 34 -33 -1 normal chunked
   00 spiretes_grafika/nyugati.pcx 8bpp 73 199 41 53 -35 -29 normal chunked		// 1 hatulja
//   00 spiretes_grafika/nyugati.pcx 8bpp 168 44 66 34 -33 -1 normal chunked
   00 spiretes_grafika/nyugati.pcx 8bpp 204 198 41 53 -4 -29 normal chunked		// 2 hatulja


   00 * 00	02 04 00 00 01 00 00
   00 * 00	02 04 01 00 01 01 00
   00 * 00	02 04 02 00 01 02 00

// ezzel a sorral valasztunk ki veletlenszeruen egy Action 2-t,
// hatulrol az 5. hogy hany kozul es utana kettessevel forditott byte sorrendben a lehetseges valtozatok
// 00 * 00	 02 04 00 01 01 00 00 01 00
// 00 * 00	 02 04 01 01 01 02 00 03 00
// 00 * 00	 02 04 02 80 00 10 02 00 00 01 00


   00 * 00	02 04 10
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			08							// shift eltolas, hany bittel arrebb szerenem lekerdezni, pl 0C az 12 bit, azaz Lc bitek
			F0							// maszkolas, ha F, akkor az erdekel minket
			01							// hany darab variacio van
//			02 00 02 02					// 02 00 action2-re ugorjon, ha 02 es 02 range kozott van
//			01 00 01 01					// 01 00 action2-re ugorjon, ha 01 es 01 range kozott van
			00 00 00 00					// 00 00 actione-re ugorjon, ha 00 es 00 range kozott van
			01 00						// ha nincs egyezes, akkor ide ugorjon

   00 * 00	02 04 11
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			08							// shift eltolas
			0F							// maszkolas
			01							// hany darab variacio van
			02 00 00 00					// 02 00 actione-re ugorjon, ha 00 min es 00 max range kozott van
			10 00						// ha nincs egyezes, akkor ide ugorjon

   00 * 00	02 04 12
			85							// get word
			0C							// check if callback
			00
			FF FF
			01							// hany range
//			02 80 13 00 13 00
			00							// ennyi legyen, ha 14-es callback van
			80							// elvalaszto
			14 00	14 00				// Set to use during callback 14, tehat ha 14-es min es 14-es max callback van.
			11 00						// else graphics Set

   00 * 00	03 04 01 03 00 12 00		// igy nincs cargo azonositas, hanem azonnal ugrunk a 05 action2-re




//**************************************//
//				Csarnok					//
//**************************************//
   00 * 00  00 04 08 01 04 08 "PKS0"
			11 00 14 FF 15 FF
			0C FD
			0D 03
			09 08


//	00		elso oszlopos elemek deli sarokhoz kozelebbi oldala
			0C E3 00 00
			00 00 00	10 10 20	2D 04 00 00
			00 00 00	10 10 20	2E 04 00 00
			80

			0C E3 00 00
			00 00 00	10 10 20	2F 04 00 00
			00 00 00	10 10 20	30 84 00 00
			80

//	01		elso oszlopos elemek eszaki sarokhoz kozelebbi oldala
			0C E3 00 00
			00 00 00	10 10 20	2D 04 00 00
			00 00 00	10 10 20	2E 04 00 00
			80

			0C E3 00 00
			00 00 00	10 10 20	2F 04 00 00
			00 00 00	10 10 20	30 04 00 00
			80



//	02		bejarati uveges ajtok deli sarokhoz kozelebbi oldala
			0C E3 00 00
			00 00 00	05 10 03	2D 04 00 00
			00 00 00	05 10 03	2E 04 00 00
			80

			0C E3 00 00
			00 00 00	05 10 03	2F 04 00 00
			00 00 00	05 10 03	30 04 00 00
			80

//	03		bejarati uveges ajtok eszaki sarokhoz kozelebbi oldala
			0C E3 00 00
			00 00 00	05 10 03	2D 04 00 00
			00 00 00	05 10 03	2E 04 00 00
			80

			0C E3 00 00
			00 00 00	05 10 03	2F 04 00 00
			00 00 00	05 10 03	30 04 00 00
			80

   0B 02	# custom sprite layout



   00 * 00	01 04 04 04

//	00		elso oszlopos elemek deli sarokhoz kozelebbi oldala
   00 spiretes_grafika/nyugati.pcx 8bpp 168 44 66 34 -33 -1 normal chunked
   00 spiretes_grafika/nyugati.pcx 8bpp 6 400 66 100 -32 -36 normal chunked

   00 spiretes_grafika/nyugati.pcx 8bpp 168 44 66 34 -33 -1 normal chunked
   00 spiretes_grafika/nyugati.pcx 8bpp 263 4  46 39 -31 -17 normal chunked

//	01		elso oszlopos elemek eszaki sarokhoz kozelebbi oldala
   00 spiretes_grafika/nyugati.pcx 8bpp 168 44 66 34 -33 -1 normal chunked
   00 spiretes_grafika/nyugati.pcx 8bpp 6 400 66 100 -32 -36 normal chunked

   00 spiretes_grafika/nyugati.pcx 8bpp 168 44 66 34 -33 -1 normal chunked
   00 spiretes_grafika/nyugati.pcx 8bpp 263 44 46 39 -31 -17 normal chunked



//	02		bejarati uveges ajtok deli sarokhoz kozelebbi oldala
   00 spiretes_grafika/nyugati.pcx 8bpp 168 44 66 34 -33 -1 normal chunked
   00 spiretes_grafika/nyugati.pcx 8bpp 6 400 66 100 -32 -36 normal chunked

   00 spiretes_grafika/nyugati.pcx 8bpp 168 44 66 34 -33 -1 normal chunked
   00 spiretes_grafika/nyugati.pcx 8bpp 310 1 66 81 -32 -49 normal chunked

//	03		bejarati uveges ajtok eszaki sarokhoz kozelebbi oldala
   00 spiretes_grafika/nyugati.pcx 8bpp 168 44 66 34 -33 -1 normal chunked
   00 spiretes_grafika/nyugati.pcx 8bpp 6 400 66 100 -32 -36 normal chunked

   00 spiretes_grafika/nyugati.pcx 8bpp 168 44 66 34 -33 -1 normal chunked
   00 spiretes_grafika/nyugati.pcx 8bpp 377 1 67 64 -33 -32 normal chunked


	00 * 00	02 04 00 00 01 00 00	// elso oszlopos elemek deli sarokhoz kozelebbi oldala
	00 * 00	02 04 01 00 01 01 00	// elso oszlopos elemek eszaki sarokhoz kozelebbi oldala
	00 * 00	02 04 02 00 01 02 00	// bejarati uveges ajtok deli sarokhoz kozelebbi oldala
	00 * 00	02 04 03 00 01 03 00	// bejarati uveges ajtok eszaki sarokhoz kozelebbi oldala


   00 * 00  00 04 05 01 05 08 "PKS0"
//			11 00 14 FF 15 FF
			0C FD
			0D 03
			09 08


//	00		kozepso uveges teto deli sarokhoz kozelebbi oldala
			0C E3 00 00
			00 00 00	05 10 03	2D 04 00 00
			00 00 00	05 10 03	2E 04 00 00
			80

			0C E3 00 00
			00 00 00	05 10 03	2F 04 00 00
			00 00 00	05 10 03	30 04 00 00
			80

//	01		kozepso uveges teto eszaki sarokhoz kozelebbi oldala
			0C E3 00 00
			00 00 00	05 10 03	2D 04 00 00
			00 00 00	05 10 03	2E 04 00 00
			80

			0C E3 00 00
			00 00 00	05 10 03	2F 04 00 00
			00 00 00	05 10 03	30 04 00 00
			80



//	02		eszaki vege deli sarokhoz kozelebbi oldala
			0C E3 00 00
			00 00 00	05 10 03	2D 04 00 00
			00 00 00	05 10 03	2E 04 00 00
			80

			0C E3 00 00
			00 00 00	05 10 03	2F 04 00 00
			00 00 00	05 10 03	30 04 00 00
			80

//	03		eszaki vege eszaki sarokhoz kozelebbi oldala
			0C E3 00 00
			00 00 00	05 10 03	2D 04 00 00
			00 00 00	05 10 03	2E 04 00 00
			80

			0C E3 00 00
			00 00 00	05 10 03	2F 04 00 00
			00 00 00	05 10 03	30 04 00 00
			80


   0B 02	# custom sprite layout


   00 * 00	01 04 04 04
//	04		kozepso uveges teto deli sarokhoz kozelebbi oldala
   00 spiretes_grafika/nyugati.pcx 8bpp 168 44 66 34 -33 -1 normal chunked
   00 spiretes_grafika/nyugati.pcx 8bpp 219 265 66 100 -0 -35 normal chunked

   00 spiretes_grafika/nyugati.pcx 8bpp 168 44 66 34 -33 -1 normal chunked
   00 spiretes_grafika/nyugati.pcx 8bpp 310 83 66 82 -32 -50 normal chunked

//	05		kozepso uveges teto eszaki sarokhoz kozelebbi oldala
   64 spiretes_grafika/nyugati.pcx 8bpp 168 44 66 34 -33 -1 normal chunked
   00 spiretes_grafika/nyugati.pcx 8bpp 219 265 66 100 -0 -35 normal chunked

   00 spiretes_grafika/nyugati.pcx 8bpp 168 44 66 34 -33 -1 normal chunked
   00 spiretes_grafika/nyugati.pcx 8bpp 377 83 67 35 -33 -33 normal chunked



//	06		eszaki vege deli sarokhoz kozelebbi oldala
   00 spiretes_grafika/nyugati.pcx 8bpp 168 44 66 34 -33 -1 normal chunked
   00 spiretes_grafika/nyugati.pcx 8bpp 219 265 66 100 -0 -35 normal chunked

   00 spiretes_grafika/nyugati.pcx 8bpp 168 44 66 34 -33 -1 normal chunked
   00 spiretes_grafika/nyugati.pcx 8bpp 310 166 66 81 -32 -49 normal chunked

//	07		eszaki vege eszaki sarokhoz kozelebbi oldala
   00 spiretes_grafika/nyugati.pcx 8bpp 168 44 66 34 -33 -1 normal chunked
   00 spiretes_grafika/nyugati.pcx 8bpp 219 265 66 100 -0 -35 normal chunked

   00 spiretes_grafika/nyugati.pcx 8bpp 168 44 66 34 -33 -1 normal chunked
   00 spiretes_grafika/nyugati.pcx 8bpp 377 166 67 34 -33 -32 normal chunked



	00 * 00	02 04 04 00 01 00 00	// kozepso uveges teto deli sarokhoz kozelebbi oldala
	00 * 00	02 04 05 00 01 01 00	// kozepso uveges teto eszaki sarokhoz kozelebbi oldala
	00 * 00	02 04 06 00 01 02 00	// eszaki vege deli sarokhoz kozelebbi oldala
	00 * 00	02 04 07 00 01 03 00	// eszaki vege eszaki sarokhoz kozelebbi oldala

// ezzel a sorral valasztunk ki veletlenszeruen egy Action 2-t,
// hatulrol az 5. hogy hany kozul es utana kettessevel forditott byte sorrendben a lehetseges valtozatok
// 00 * 00	02 04 00 01 01 00 00 01 00
// 00 * 00	02 04 01 01 01 02 00 03 00
// 00 * 00	02 04 02 80 00 10 02 00 00 01 00


// uveges bejarat
   00 * 00	02 04 B2
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			08							// shift eltolas, hany bittel arrebb szerenem lekerdezni, pl 0C az 12 bit, azaz Lc bitek
			F0							// maszkolas, ha F, akkor az erdekel minket
			01							// hany darab variacio van
			04 00 00 00					// 00 00 actione-re ugorjon, ha 00 es 00 range kozott van
			05 00						// ha nincs egyezes, akkor ide ugorjon

// utolso ablak nelkuli elem
   00 * 00	02 04 B1
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			08							// shift eltolas, hany bittel arrebb szerenem lekerdezni, pl 0C az 12 bit, azaz Lc bitek
			F0							// maszkolas, ha F, akkor az erdekel minket
			01							// hany darab variacio van
			06 00 00 00					// 00 00 actione-re ugorjon, ha 00 es 00 range kozott van
			07 00						// ha nincs egyezes, akkor ide ugorjon

// itt lekerdezem, hogy az elso (0.) elem-e eszaki oldalrol, ha nem, akkor jon a kozepso uveges resz
   00 * 00	02 04 B0
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			00							// shift eltolas
			0F							// maszkolas
			01							// hany darab variacio van
			B1 00 00 00					// 02 00 actione-re ugorjon, ha 00 min es 00 max range kozott van
			B2 00						// ha nincs egyezes, akkor ide ugorjon

// uveges bejarat
   00 * 00	02 04 A2
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			08							// shift eltolas, hany bittel arrebb szerenem lekerdezni, pl 0C az 12 bit, azaz Lc bitek
			F0							// maszkolas, ha F, akkor az erdekel minket
			01							// hany darab variacio van
			02 00 00 00					// 00 00 actione-re ugorjon, ha 00 es 00 range kozott van
			03 00						// ha nincs egyezes, akkor ide ugorjon

// oszlopos bejarat
   00 * 00	02 04 A1
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			08							// shift eltolas, hany bittel arrebb szerenem lekerdezni, pl 0C az 12 bit, azaz Lc bitek
			F0							// maszkolas, ha F, akkor az erdekel minket
			01							// hany darab variacio van
			00 00 00 00					// 00 00 actione-re ugorjon, ha 00 es 00 range kozott van
			01 00						// ha nincs egyezes, akkor ide ugorjon

// itt lekerdezem, hogy az elso (0.) elem-e vagy masodik (1.) eleme
   00 * 00	02 04 A0
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			04							// shift eltolas
			0F							// maszkolas
			02							// hany darab variacio van
			A1 00 00 00					// 02 00 actione-re ugorjon, ha 00 min es 00 max range kozott van
			A2 00 01 01					// 02 00 actione-re ugorjon, ha 00 min es 00 max range kozott van
			B0 00						// ha nincs egyezes, akkor ide ugorjon

   00 * 00	02 04 12
			85							// get word
			0C							// check if callback
			00
			FF FF
			01							// hany range
//			02 80 13 00 13 00
			00							// ennyi legyen, ha 14-es callback van
			80							// elvalaszto
			14 00	14 00				// Set to use during callback 14, tehat ha 14-es min es 14-es max callback van.
			A0 00						// else graphics Set

   00 * 00	 03 04 01 04 00 12 00		// igy nincs cargo azonositas, hanem azonnal ugrunk a 12 action2-re

