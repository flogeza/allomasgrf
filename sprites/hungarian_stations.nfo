// Automatically generated by GRFCODEC. Do not modify!
// (Info version 32)
// Escapes: 2+ 2- 2< 2> 2u< 2u> 2/ 2% 2u/ 2u% 2* 2& 2| 2^ 2sto = 2s 2rst = 2r 2psto 2ror = 2rot 2cmp 2ucmp 2<< 2u>> 2>>
// Escapes: 71 70 7= 7! 7< 7> 7G 7g 7gG 7GG 7gg 7c 7C
// Escapes: D= = DR D+ = DF D- = DC Du* = DM D* = DnF Du<< = DnC D<< = DO D& D| Du/ D/ Du% D%
// Format: spritenum imagefile depth xpos ypos xsize ysize xrel yrel zoom flags
    0 * 4	 E0 00 00 00
    1 * 39	 14 "CINFOTURL_" 7F "http:valami.hu/megvalami" 00 00 00				// url cim
    2 * 19	 14 "CINFOBVRSN" 04 00 01 00 00 00 00 00							// versio szama
    3 * 19	 14 "CINFOBMINV" 04 00 01 00 00 00 00 00							// minimum kompatibilis verzio szama
    4 * 16	 14 "CINFOBPALS" 01 00 57 00 00										// milyen szin palettat hasznaltunk
    5 * 50	 08 07 "FK" 00 00													// grf ID
				"Hungarian stations" 00											// grf neve
				"Ez egy kis" 0D 98 "rovid leiras" 00							// grf leirasa, a leirasban ha minden igaz hasznalhato a 0D mint sortores, a 98 talan behuzas

// 1420-as sorszamu alap sprite a beton sprite



//******************************************************************************************************************************************************//
//																																						//
//																	PERONOK																				//
//																																						//
//******************************************************************************************************************************************************//




//**************************************//
//					Peron 1a			//
//**************************************//


    6 * 466	 00 04 04 01 05 08 "PKS1"
//			11 00 14 FF 15 FF
			0C FE
			0B 03	// custom sprite layout
//			13 01	// elvileg ilyenkor lehet kiszamitani a groundot

			09 1E	// ez mar a konkret tile-okat jelenti, hogy hany darab van belole


		// 00
			// menu grafika
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			// menu grafika
			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 01
			// egyeduli peron
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			// egyeduli peron
			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 02
			// a hatulja, kopott 1 (eszakrol)
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			// b hatulja
			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 03
			// a hatulja, kopott 2 (eszakrol)
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			// b hatulja
			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80


		// 04
			// a nem kopott kozepe
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			// b sima kozepe
			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 05
			// a kopott kozepe 1
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			// b sima kozepe
			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 06
			// a kopott kozepe 2
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			// b sima kozepe
			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 07
			// a eleje
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			// b eleje
			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 08
			// 1a eleje
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			// 1b eleje
			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80


		// kozepso elemek
		// 09, lampas, viragladas
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 0A, lampas, kukas
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 0B, pados, viragladas
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 0C, lampas, pados
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 0D, lampas, kukas, pados
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 0E, allomas tablas
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

    7 * 4	 01 04 0F 02

	// menu grafika
    8 sprites/peron1a.pcx 8bpp 45 0 44 37 -32 -16 normal chunked
    9 sprites/peron1a.pcx 8bpp 45 38 44 37 -10 -16 normal chunked

	// egyeduli peron
   10 sprites/peron1.pcx 8bpp 181 77 44 37 -32 -15 normal chunked
   11 sprites/peron1.pcx 8bpp 181 115 44 37 -10 -15 normal chunked

	// eszakrol az elso (hatulja)
	// kopott 1
   12 sprites/peron1.pcx 8bpp 91 1 44 37 -36 -13 normal chunked
   13 sprites/peron1.pcx 8bpp 91 39 44 37 -6 -13 normal chunked
	// kopott 2
   14 sprites/peron1.pcx 8bpp 136 1 44 37 -36 -13 normal chunked
   15 sprites/peron1.pcx 8bpp 136 39 44 37 -6 -13 normal chunked

	// ures kozepso
	// nem kopott
   16 sprites/peron1.pcx 8bpp 181 1 44 37 -32 -16 normal chunked
   17 sprites/peron1.pcx 8bpp 181 39 44 37 -10 -16 normal chunked
	// kopott 1
   18 sprites/peron1.pcx 8bpp 91 77 44 37 -32 -16 normal chunked
   19 sprites/peron1.pcx 8bpp 91 115 44 37 -10 -16 normal chunked
	// kopott 2
   20 sprites/peron1.pcx 8bpp 136 77 44 37 -32 -16 normal chunked
   21 sprites/peron1.pcx 8bpp 136 115 44 37 -10 -16 normal chunked

	// eleje (delro)
	// kopott 1
   22 sprites/peron1.pcx 8bpp 1 1 44 37 -30 -16 normal chunked
   23 sprites/peron1.pcx 8bpp 1 39 44 37 -10 -16 normal chunked
	// kopott 2
   24 sprites/peron1.pcx 8bpp 46 1 44 37 -30 -16 normal chunked
   25 sprites/peron1.pcx 8bpp 46 39 44 37 -10 -16 normal chunked

   // kozepso kozos spiretok
	// lampas, viragladas
   26 sprites/peron1.pcx 8bpp 1 77 44 37 -32 -16 normal chunked
   27 sprites/peron1.pcx 8bpp 1 115 44 37 -10 -16 normal chunked
	// lampas, kukas
   28 sprites/peron1.pcx 8bpp 46 77 44 37 -32 -16 normal chunked
   29 sprites/peron1.pcx 8bpp 46 115 44 37 -10 -16 normal chunked

   // kozepso sajat spiretok
	// pados, viragladas
   30 sprites/peron1a.pcx 8bpp 90 0 44 37 -32 -16 normal chunked
   31 sprites/peron1a.pcx 8bpp 90 38 44 37 -10 -16 normal chunked
	// lampas, pados
   32 sprites/peron1a.pcx 8bpp 0 0 44 37 -32 -16 normal chunked
   33 sprites/peron1a.pcx 8bpp 0 38 44 37 -10 -16 normal chunked
	// lampas, kukas, pados
   34 sprites/peron1a.pcx 8bpp 45 0 44 37 -32 -16 normal chunked
   35 sprites/peron1a.pcx 8bpp 45 38 44 37 -10 -16 normal chunked

   // allomas tablas
   36 sprites/peron1a.pcx 8bpp 135 0 44 37 -32 -16 normal chunked
   37 sprites/peron1a.pcx 8bpp 135 38 44 37 -10 -16 normal chunked




// betoltendo vegso spriteok, innen kell esetleg szurni cargo szerint...
   38 * 7	 02 04 00 00 01 00 00	// menu grafika
   39 * 7	 02 04 01 00 01 01 00	// egyeduli peron
   40 * 7	 02 04 02 00 01 02 00	// kopott hatulja 1
   41 * 7	 02 04 03 00 01 03 00	// kopott hatulja 2
   42 * 7	 02 04 04 00 01 04 00	// nem kopott kozepe
   43 * 7	 02 04 05 00 01 05 00	// kopott kozepe 1
   44 * 7	 02 04 06 00 01 06 00	// kopott kozepe 2
   45 * 7	 02 04 07 00 01 07 00	// kopott eleje 1
   46 * 7	 02 04 08 00 01 08 00	// kopott eleje 2

   // objektumos kozepek
   47 * 7	 02 04 09 00 01 09 00	// lampas, viragladas
   48 * 7	 02 04 0A 00 01 0A 00	// lampas, kukas
   49 * 7	 02 04 0B 00 01 0B 00	// pados, viragladas
   50 * 7	 02 04 0C 00 01 0C 00	// lampas, pados
   51 * 7	 02 04 0D 00 01 0D 00	// lampas, kukas, pados
   52 * 7	 02 04 0E 00 01 0E 00	// allomas tablas




// full kozepso lekerdezese....
//	138 * 18	 02 04 80 81 // check for crane
//	49 20 0F
//	\2- 49 04 0F
//	\b1
//	\wx40 00 01 // tile is in the middle of the platform, build crane
//	\wx8008 // no crane

// kisebb egyenlo mint 4 a paltform length
//	139 * 14	 02 04 80 81 // check for crane
//	49 10 0F // total platform length
//	\b1
//	\wx8008 00 04 // for platforms <= length 4, no crane
//	\wx80


// eszaki vegenek randomizacioja
   53 * 11	 02 04 91
			80 00						// 80 azaz random object, 00, azaz nincs random trigger
			10							// szerintem ez kotelezoen ennyi
			02							// hany darab random lehetosegunk van
			02 00						// Action2 azonositoja minden egyes lehetosegnek kulon
			03 00						// ezzel a modszerrel 1:1 eselye, hogy melyik lesz....

// deli vegenek randomizacioja
   54 * 11	 02 04 92
			80 00						// 80 azaz random object, 00, azaz nincs random trigger
			10							// szerintem ez kotelezoen ennyi
			02							// hany darab random lehetosegunk van
			07 00						// Action2 azonositoja minden egyes lehetosegnek kulon
			08 00						// ezzel a modszerrel 1:1 eselye, hogy melyik lesz....

// kozepso lekerdezesek.....
// minden harmadik mezore legyen igaz az eszaki vegetol szamitva, ez annak a feltetele, hogy harmadik-e...
	// sima randomizaciok
   55 * 23	 02 04 B2
			80 00						// 80 azaz random object, 00, azaz nincs random trigger
			10							// szerintem ez kotelezoen ennyi, azt irja, hogy "first random bit to use", 10 volt itt...
			08							// hany darab random lehetosegunk van
			04 00						// Action2 azonositoja minden egyes lehetosegnek kulon
			04 00			// 4 a nem kopott, ures
			04 00
			04 00
			05 00			// 1 a kopott 1
			06 00			// 1 a kopott 2
			0B 00			// ketszer van a pados, viragladas
			0B 00

	// lampas randomizaciok
   56 * 15	 02 04 B1
			80 00						// 80 azaz random object, 00, azaz nincs random trigger
			10							// szerintem ez kotelezoen ennyi
			04							// hany darab random lehetosegunk van
			09 00						// Action2 azonositoja minden egyes lehetosegnek kulon
			0A 00
			0C 00
			0D 00

	// negyedik lekerdezes, ami mar nem a szelso elemeket randomizalja
	// itt konkretan szetvalasztom, hogy minden harmadik lampas elem, a tobbi meg nem :D
   57 * 16	 02 04 B0
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			80							// azaz shift & modulo
			F0							// azaz a felso ertekre szurunk, igy alulrol minden harmadikat keressuk...
			01							// hozzaadas, azert adok hozza 1-et, mert 00 a kezdo sorszam, es ugy 3. helyett 4.re adja...
			03							// harommal osztunk, vagy mi
			01							// 1 variacio van
			B1 00 00 00					// ha 0 az eredmeny, akkor lampas randomizacio
			B2 00						// egyebkent sima randmizacio lesz...



// ez a harmadik lekerdezes, ha a deli vege van, akkor betolti azt, egyebkent a kozepso lekerdezesekre ugrik...
   58 * 14	 02 04 A3
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			00							// shift eltolas, hany bittel arrebb szerenem lekerdezni, pl 0C az 12 bit, azaz Lc bitek
			F0							// maszkolas, ha F, akkor az erdekel minket
			01							// hany darab variacio van
			92 00 00 00					// 00 00 actione-re ugorjon, ha 00 es 00 range kozott van
			B0 00						// ha nincs egyezes, akkor ide ugorjon

// ez a masodik lekerdezes, ha az eszaki vege van, akkor egybol betolti a 00-s sprite-ot, egyebkent a harmadik lekerdezesre ugrik
   59 * 14	 02 04 A2
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			00							// shift eltolas
			0F							// maszkolas
			01							// hany darab variacio van
			91 00 00 00					// 91 00 actione-re ugorjon, ha 00 min es 00 max range kozott van
			A3 00						// ha nincs egyezes, akkor ide ugorjon



//
// nagyobb vagy pont 8 hosszusagu
//

   60 * 22	 02 04 E1
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			04							// shift eltolas
			0F							// maszkolas
			03							// hany darab variacio van
			92 00 00 00					// deli vege
			0E 00 01 01					// 0E 00 action a tablasok
			B1 00 02 02					// B1 00 a lampas randomizaciok
			A2 00						// ha nincs egyezes, akkor ide ugorjon

   61 * 18	 02 04 E0
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			00							// shift eltolas
			0F							// maszkolas
			02							// hany darab variacio van
			91 00 00 00					// eszaki vege
			0E 00 01 01					// 0E 00 action a tablasok
//			B1 00 02 02					// B1 00 a lampas randomizaciok, direkt nincs ez bekapcsolva, mert igy nem jo
			E1 00						// ha nincs egyezes, akkor ide ugorjon

//
// het hosszusag eseten
//

   62 * 38	 02 04 D0
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			00							// shift eltolas
			0F							// maszkolas
			07							// hany darab variacio van
			91 00 00 00					// eszaki vege
			0E 00 01 01					// 0E 00 action a tablasok
			B1 00 02 02					// B1 00 a lampas randomizaciok
			B2 00 03 03					// B2 00 a sima kozepso randomizaciok
			B1 00 04 04					// B1 00 a lampas randomizaciok
			0E 00 05 05					// 0E 00 action a tablasok
			92 00 06 06					// deli vege
			A2 00						// ha nincs egyezes, akkor ide ugorjon

//
// elso lekerdezesek
//

// ez a masodik lekerdezes, ha kereken 7 hosszusagu
   63 * 18	 02 04 A1
			81 49						// 81 lower byte, 40 type, Platform info and relative position
			10							// shift eltolas, hany bittel arrebb szerenem lekerdezni, pl 0C az 12 bit, azaz Lc bitek
			0F							// maszkolas
			02							// hany darab variacio van
			D0 00 07 07					// D0 00 action-re ugorjon, ha 07 min es 07 max range kozott van
			E0 00 08 FF					// E0 00 action-re ugorjon, ha legalabb 8 hosszusagu
			A2 00						// ha nincs egyezes, akkor ide ugorjon

// ez az elso lekerdezes, ezzel kerdezem le
   64 * 14	 02 04 A0
			81 49						// 81 lower byte, 40 type, Platform info and relative position
			10							// shift eltolas, hany bittel arrebb szerenem lekerdezni, pl 0C az 12 bit, azaz Lc bitek
			0F							// maszkolas
			01							// hany darab variacio van
			01 00 01 01					// 01 00 actione-re ugorjon, ha 01 min es 01 max range kozott van
			A1 00						// ha nincs egyezes, akkor ide ugorjon



// ez meg nem lekerdezes, hanem calback elvalaszto
   65 * 17	 02 04 AA
			85							// get word
			0C							// check if callback
			00
			FF FF
			01							// hany range
			00							// ennyi legyen, ha 14-es callback van
			00							// elvalaszto, vagyis nem is, vagy nem tudom, 80 volt itt elotte, de igy most majdnem jo...
			14 00	14 00				// Set to use during callback 14, tehat ha 14-es min es 14-es max callback van.
			A0 00						// else graphics Set

////// make available from 1950
//  527 * 14    02 04
//         FA                   // setID
//         81                  // type
//         01 00 FF
//         01                  // numRanges
//          00 80 00 00            // XX - 1920. So for 1950 = 00 80 00 1E
//          01 80                  // allow

// callback handler for build menu
// switch between callback and graphics branches
   66 * 17	 02 04 C0					// Set-ID C0
			85 0C 00 FF FF				// get word, check if callback
			01							// one range
//			FA 00 13 00 13 00			// lekerdezzuk, hogy elerheto-e, tehat a 13 callback az elerhetoseg???
			00 80 14 00 14 00			// use layouts 06/07 during callback 14
			00 00						// menu grafika....

//   00 * 00	03 04 01 05 00 A0 00		// igy nincs cargo azonositas, hanem azonnal ugrunk a A0 action2-re
   67 * 10	 03 04 01 05
   01									// hany darab kulonbozo cargo
   FF C0 00								// FF elvileg a menu hivasa, ezt olvastam...
//   FE 00 00								// FE, ez a kozepe mezore vagy a kozepehez kepest eszakra levo mezore a grafikat hivja meg...
   AA 00								// ha nem menu, akkor AA action2-re




//**************************************//
//					Peron 1b			//
//**************************************//


   68 * 436	 00 04 04 01 06 08 "PKS1"
//			11 00 14 FF 15 FF
			0C FE
			0B 03	// custom sprite layout
//			13 01	// elvileg ilyenkor lehet kiszamitani a groundot

				09 1C	// ez mar a konkret tile-okat jelenti, hogy hany darab van belole


		// 00
			// menu grafika
			F4 03 00 00
			00 0B 00	10 05 1F	2D 04 00 00
			80

			// menu grafika
			F3 03 00 00
			0B 00 00	05 10 1F	2E 04 00 00
			80

		// 01
			// egyeduli peron
			F4 03 00 00
			00 0B 00	10 05 1F	2D 04 00 00
			80

			// egyeduli peron
			F3 03 00 00
			0B 00 00	05 10 1F	2E 04 00 00
			80

		// 02
			// a hatulja, kopott 1 (eszakrol)
			F4 03 00 00
			00 0B 00	10 05 1F	2D 04 00 00
			80

			// b hatulja
			F3 03 00 00
			0B 00 00	05 10 1F	2E 04 00 00
			80

		// 03
			// a hatulja, kopott 2 (eszakrol)
			F4 03 00 00
			00 0B 00	10 05 1F	2D 04 00 00
			80

			// b hatulja
			F3 03 00 00
			0B 00 00	05 10 1F	2E 04 00 00
			80


		// 04
			// a nem kopott kozepe
			F4 03 00 00
			00 0B 00	10 05 1F	2D 04 00 00
			80

			// b sima kozepe
			F3 03 00 00
			0B 00 00	05 10 1F	2E 04 00 00
			80

		// 05
			// a kopott kozepe 1
			F4 03 00 00
			00 0B 00	10 05 1F	2D 04 00 00
			80

			// b sima kozepe
			F3 03 00 00
			0B 00 00	05 10 1F	2E 04 00 00
			80

		// 06
			// a kopott kozepe 2
			F4 03 00 00
			00 0B 00	10 05 1F	2D 04 00 00
			80

			// b sima kozepe
			F3 03 00 00
			0B 00 00	05 10 1F	2E 04 00 00
			80

		// 07
			// a eleje
			F4 03 00 00
			00 0B 00	10 05 1F	2D 04 00 00
			80

			// b eleje
			F3 03 00 00
			0B 00 00	05 10 1F	2E 04 00 00
			80

		// 08
			// 1a eleje
			F4 03 00 00
			00 0B 00	10 05 1F	2D 04 00 00
			80

			// 1b eleje
			F3 03 00 00
			0B 00 00	05 10 1F	2E 04 00 00
			80


		// kozepso elemek
		// 09, lampas, viragladas
			F4 03 00 00
			00 0B 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			0B 00 00	05 10 1F	2E 04 00 00
			80

		// 0A, lampas, kukas
			F4 03 00 00
			00 0B 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			0B 00 00	05 10 1F	2E 04 00 00
			80

		// 0B, pados, viragladas
			F4 03 00 00
			00 0B 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			0B 00 00	05 10 1F	2E 04 00 00
			80

		// 0C, lampas, pados
			F4 03 00 00
			00 0B 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			0B 00 00	05 10 1F	2E 04 00 00
			80

		// 0D, allomas tablas
			F4 03 00 00
			00 0B 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			0B 00 00	05 10 1F	2E 04 00 00
			80


   69 * 4	 01 04 0E 02

	// menu grafika
   70 sprites/peron1b.pcx 8bpp 0 0 44 37 -32 -16 normal chunked // -10, -5
   71 sprites/peron1b.pcx 8bpp 0 38 44 37 -10 -16 normal chunked

	// egyeduli peron
   72 sprites/peron1.pcx 8bpp 181 77 44 37 -32 -15 normal chunked
   73 sprites/peron1.pcx 8bpp 181 115 44 37 -10 -15 normal chunked

	// eszakrol az elso (hatulja)
	// kopott 1
   74 sprites/peron1.pcx 8bpp 91 1 44 37 -36 -13 normal chunked
   75 sprites/peron1.pcx 8bpp 91 39 44 37 -6 -13 normal chunked
	// kopott 2
   76 sprites/peron1.pcx 8bpp 136 1 44 37 -36 -13 normal chunked
   77 sprites/peron1.pcx 8bpp 136 39 44 37 -6 -13 normal chunked

	// ures kozepso
	// nem kopott
   78 sprites/peron1.pcx 8bpp 181 1 44 37 -32 -16 normal chunked
   79 sprites/peron1.pcx 8bpp 181 39 44 37 -10 -16 normal chunked
	// kopott 1
   80 sprites/peron1.pcx 8bpp 91 77 44 37 -32 -16 normal chunked
   81 sprites/peron1.pcx 8bpp 91 115 44 37 -10 -16 normal chunked
	// kopott 2
   82 sprites/peron1.pcx 8bpp 136 77 44 37 -32 -16 normal chunked
   83 sprites/peron1.pcx 8bpp 136 115 44 37 -10 -16 normal chunked

	// eleje (delro)
	// kopott 1
   84 sprites/peron1.pcx 8bpp 1 1 44 37 -30 -16 normal chunked
   85 sprites/peron1.pcx 8bpp 1 39 44 37 -10 -16 normal chunked
	// kopott 2
   86 sprites/peron1.pcx 8bpp 46 1 44 37 -30 -16 normal chunked
   87 sprites/peron1.pcx 8bpp 46 39 44 37 -10 -16 normal chunked

   // kozepso kozos spiretok
	// lampas, viragladas
   88 sprites/peron1.pcx 8bpp 1 77 44 37 -32 -16 normal chunked
   89 sprites/peron1.pcx 8bpp 1 115 44 37 -10 -16 normal chunked
	// lampas, kukas
   90 sprites/peron1.pcx 8bpp 46 77 44 37 -32 -16 normal chunked
   91 sprites/peron1.pcx 8bpp 46 115 44 37 -10 -16 normal chunked

   // kozepso sajat spiretok
	// pados, viragladas
   92 sprites/peron1b.pcx 8bpp 0 0 44 37 -32 -16 normal chunked
   93 sprites/peron1b.pcx 8bpp 0 38 44 37 -10 -16 normal chunked
	// lampas, pados
   94 sprites/peron1b.pcx 8bpp 45 0 44 37 -32 -16 normal chunked
   95 sprites/peron1b.pcx 8bpp 45 38 44 37 -10 -16 normal chunked

   // allomas tablas
   96 sprites/peron1b.pcx 8bpp 90 0 44 37 -32 -16 normal chunked
   97 sprites/peron1b.pcx 8bpp 90 38 44 37 -10 -16 normal chunked


// betoltendo vegso spriteok, innen kell esetleg szurni cargo szerint...
   98 * 7	 02 04 00 00 01 00 00	// menu grafika
   99 * 7	 02 04 01 00 01 01 00	// egyeduli peron
  100 * 7	 02 04 02 00 01 02 00	// kopott hatulja 1
  101 * 7	 02 04 03 00 01 03 00	// kopott hatulja 2
  102 * 7	 02 04 04 00 01 04 00	// nem kopott kozepe
  103 * 7	 02 04 05 00 01 05 00	// kopott kozepe 1
  104 * 7	 02 04 06 00 01 06 00	// kopott kozepe 2
  105 * 7	 02 04 07 00 01 07 00	// kopott eleje 1
  106 * 7	 02 04 08 00 01 08 00	// kopott eleje 2

   // objektumos kozepek
  107 * 7	 02 04 09 00 01 09 00	// lampas, viragladas
  108 * 7	 02 04 0A 00 01 0A 00	// lampas, kukas
  109 * 7	 02 04 0B 00 01 0B 00	// pados, viragladas
  110 * 7	 02 04 0C 00 01 0C 00	// lampas, pados
  111 * 7	 02 04 0D 00 01 0D 00	// allomas tablas




// full kozepso lekerdezese....
//	138 * 18	 02 04 80 81 // check for crane
//	49 20 0F
//	\2- 49 04 0F
//	\b1
//	\wx40 00 01 // tile is in the middle of the platform, build crane
//	\wx8008 // no crane

// kisebb egyenlo mint 4 a paltform length
//	139 * 14	 02 04 80 81 // check for crane
//	49 10 0F // total platform length
//	\b1
//	\wx8008 00 04 // for platforms <= length 4, no crane
//	\wx80


// eszaki vegenek randomizacioja
  112 * 11	 02 04 91
			80 00						// 80 azaz random object, 00, azaz nincs random trigger
			10							// szerintem ez kotelezoen ennyi
			02							// hany darab random lehetosegunk van
			02 00						// Action2 azonositoja minden egyes lehetosegnek kulon
			03 00						// ezzel a modszerrel 1:1 eselye, hogy melyik lesz....

// deli vegenek randomizacioja
  113 * 11	 02 04 92
			80 00						// 80 azaz random object, 00, azaz nincs random trigger
			10							// szerintem ez kotelezoen ennyi
			02							// hany darab random lehetosegunk van
			07 00						// Action2 azonositoja minden egyes lehetosegnek kulon
			08 00						// ezzel a modszerrel 1:1 eselye, hogy melyik lesz....

// kozepso lekerdezesek.....
// minden harmadik mezore legyen igaz az eszaki vegetol szamitva, ez annak a feltetele, hogy harmadik-e...
	// sima randomizaciok
  114 * 23	 02 04 B2
			80 00						// 80 azaz random object, 00, azaz nincs random trigger
			10							// szerintem ez kotelezoen ennyi, azt irja, hogy "first random bit to use", 10 volt itt...
			08							// hany darab random lehetosegunk van
			04 00						// Action2 azonositoja minden egyes lehetosegnek kulon
			04 00			// 4 a nem kopott, ures
			04 00
			04 00
			05 00			// 1 a kopott 1
			06 00			// 1 a kopott 2
			0B 00			// ketszer van a pados, viragladas
			0B 00

	// lampas randomizaciok
  115 * 15	 02 04 B1
			80 00						// 80 azaz random object, 00, azaz nincs random trigger
			10							// szerintem ez kotelezoen ennyi
			04							// hany darab random lehetosegunk van
			09 00						// Action2 azonositoja minden egyes lehetosegnek kulon
			0C 00			// a pados itt direkt van ketszer
			0A 00
			0C 00

	// negyedik lekerdezes, ami mar nem a szelso elemeket randomizalja
	// itt konkretan szetvalasztom, hogy minden harmadik lampas elem, a tobbi meg nem :D
  116 * 16	 02 04 B0
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			80							// azaz shift & modulo
			F0							// azaz a felso ertekre szurunk, igy alulrol minden harmadikat keressuk...
			01							// hozzaadas, azert adok hozza 1-et, mert 00 a kezdo sorszam, es ugy 3. helyett 4.re adja...
			03							// harommal osztunk, vagy mi
			01							// 1 variacio van
			B1 00 00 00					// ha 0 az eredmeny, akkor lampas randomizacio
			B2 00						// egyebkent sima randmizacio lesz...



// ez a harmadik lekerdezes, ha a deli vege van, akkor betolti azt, egyebkent a kozepso lekerdezesekre ugrik...
  117 * 14	 02 04 A3
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			00							// shift eltolas, hany bittel arrebb szerenem lekerdezni, pl 0C az 12 bit, azaz Lc bitek
			F0							// maszkolas, ha F, akkor az erdekel minket
			01							// hany darab variacio van
			92 00 00 00					// 00 00 actione-re ugorjon, ha 00 es 00 range kozott van
			B0 00						// ha nincs egyezes, akkor ide ugorjon

// ez a masodik lekerdezes, ha az eszaki vege van, akkor egybol betolti a 00-s sprite-ot, egyebkent a harmadik lekerdezesre ugrik
  118 * 14	 02 04 A2
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			00							// shift eltolas
			0F							// maszkolas
			01							// hany darab variacio van
			91 00 00 00					// 91 00 actione-re ugorjon, ha 00 min es 00 max range kozott van
			A3 00						// ha nincs egyezes, akkor ide ugorjon


//
// nagyobb vagy pont 8 hosszusagu
//

  119 * 22	 02 04 E1
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			04							// shift eltolas
			0F							// maszkolas
			03							// hany darab variacio van
			92 00 00 00					// deli vege
			0D 00 01 01					// 0E 00 action a tablasok
			B1 00 02 02					// B1 00 a lampas randomizaciok
			A2 00						// ha nincs egyezes, akkor ide ugorjon

  120 * 18	 02 04 E0
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			00							// shift eltolas
			0F							// maszkolas
			02							// hany darab variacio van
			91 00 00 00					// eszaki vege
			0D 00 01 01					// 0E 00 action a tablasok
//			B1 00 02 02					// B1 00 a lampas randomizaciok, direkt nincs ez bekapcsolva, mert igy nem jo
			E1 00						// ha nincs egyezes, akkor ide ugorjon


//
// het hosszusag eseten
//

  121 * 38	 02 04 D0
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			00							// shift eltolas
			0F							// maszkolas
			07							// hany darab variacio van
			91 00 00 00					// eszaki vege
			0D 00 01 01					// 0D 00 action a tablasok
			B1 00 02 02					// B1 00 a lampas randomizaciok
			B2 00 03 03					// B2 00 a sima kozepso randomizaciok
			B1 00 04 04					// B1 00 a lampas randomizaciok
			0D 00 05 05					// 0D 00 action a tablasok
			92 00 06 06					// deli vege
			E0 00						// ha nincs egyezes, akkor ide ugorjon

//
// elso lekerdezesek
//

// ez a masodik lekerdezes, ha kereken 7 hosszusagu
  122 * 18	 02 04 A1
			81 49						// 81 lower byte, 40 type, Platform info and relative position
			10							// shift eltolas, hany bittel arrebb szerenem lekerdezni, pl 0C az 12 bit, azaz Lc bitek
			0F							// maszkolas
			02							// hany darab variacio van
			D0 00 07 07					// D0 00 action-re ugorjon, ha 07 min es 07 max range kozott van
			E0 00 08 FF					// E0 00 action-re ugorjon, ha legalabb 8 hosszusagu
			A2 00						// ha nincs egyezes, akkor ide ugorjon

// ez az elso lekerdezes, ezzel kerdezem le
  123 * 14	 02 04 A0
			81 49						// 81 lower byte, 40 type, Platform info and relative position
			10								// shift eltolas, hany bittel arrebb szerenem lekerdezni, pl 0C az 12 bit, azaz Lc bitek
			0F							// maszkolas
			01							// hany darab variacio van
			01 00 01 01					// 01 00 actione-re ugorjon, ha 01 min es 01 max range kozott van
			A1 00						// ha nincs egyezes, akkor ide ugorjon



// ez meg nem lekerdezes, hanem calback elvalaszto
  124 * 17	 02 04 AA
			85							// get word
			0C							// check if callback
			00
			FF FF
			01							// hany range
			00							// ennyi legyen, ha 14-es callback van
			00							// elvalaszto, vagyis nem is, vagy nem tudom, 80 volt itt elotte, de igy most majdnem jo...
			14 00	14 00				// Set to use during callback 14, tehat ha 14-es min es 14-es max callback van.
			A0 00						// else graphics Set

////// make available from 1950
//  527 * 14    02 04
//         FA                   // setID
//         81                  // type
//         01 00 FF
//         01                  // numRanges
//          00 80 00 00            // XX - 1920. So for 1950 = 00 80 00 1E
//          01 80                  // allow

// callback handler for build menu
// switch between callback and graphics branches
  125 * 17	 02 04 C0					// Set-ID C0
			85 0C 00 FF FF				// get word, check if callback
			01							// one range
//			FA 00 13 00 13 00			// lekerdezzuk, hogy elerheto-e, tehat a 13 callback az elerhetoseg???
			00 80 14 00 14 00			// use layouts 06/07 during callback 14
			00 00						// menu grafika....

//   00 * 00	03 04 01 05 00 A0 00		// igy nincs cargo azonositas, hanem azonnal ugrunk a A0 action2-re
  126 * 10	 03 04 01 06
   01									// hany darab kulonbozo cargo
   FF C0 00								// FF elvileg a menu hivasa, ezt olvastam...
//   FE 00 00								// FE, ez a kozepe mezore vagy a kozepehez kepest eszakra levo mezore a grafikat hivja meg...
   AA 00								// ha nem menu, akkor AA action2-re




//**************************************//
//					Peron 2a			//
//**************************************//


  127 * 346	 00 04 04 01 07 08 "PKS1"
//			11 00 14 FF 15 FF
			0C FE
			0B 03	// custom sprite layout
//			13 01	// elvileg ilyenkor lehet kiszamitani a groundot

			09 16	// ez mar a konkret tile-okat jelenti, hogy hany darab van belole


		// 00
			// menu grafika
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			// menu grafika
			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 01
			// egyeduli peron
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			// egyeduli peron
			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 02
			// a hatulja (eszakrol)
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			// b hatulja
			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80


		// 03
			// a nem kopott kozepe
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			// b sima kozepe
			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 04
			// a eleje
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			// b eleje
			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// kozepso elemek
		// 05, lampas, viragladas
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 06, lampas, kukas
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 07, pados, viragladas
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 08, lampas, pados
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 09, lampas, kukas, pados
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 0A, allomas tablas
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

  128 * 4	 01 04 0B 02

	// menu grafika
  129 sprites/peron2a.pcx 8bpp 45 0 44 39 -32 -18 normal chunked
  130 sprites/peron2a.pcx 8bpp 45 40 44 39 -10 -18 normal chunked

	// egyeduli peron
  131 sprites/peron2.pcx 8bpp 91 77 44 39 -32 -18 normal chunked
  132 sprites/peron2.pcx 8bpp 91 117 44 39 -10 -18 normal chunked

	// eszakrol az elso (hatulja)
  133 sprites/peron2.pcx 8bpp 46 1 44 37 -32 -16 normal chunked
  134 sprites/peron2.pcx 8bpp 46 39 44 37 -10 -16 normal chunked

	// ures kozepso
	// nem kopott
  135 sprites/peron2.pcx 8bpp 91 1 44 37 -32 -16 normal chunked
  136 sprites/peron2.pcx 8bpp 91 39 44 37 -10 -16 normal chunked

	// eleje (delro)
  137 sprites/peron2.pcx 8bpp 1 1 44 37 -32 -16 normal chunked
  138 sprites/peron2.pcx 8bpp 1 39 44 37 -10 -16 normal chunked

   // kozepso kozos spiretok
	// lampas, viragladas
  139 sprites/peron2.pcx 8bpp 1 77 44 39 -32 -18 normal chunked
  140 sprites/peron2.pcx 8bpp 1 117 44 39 -10 -18 normal chunked
	// lampas, kukas
  141 sprites/peron2.pcx 8bpp 46 77 44 39 -32 -18 normal chunked
  142 sprites/peron2.pcx 8bpp 46 117 44 39 -10 -18 normal chunked

   // kozepso sajat spiretok
	// pados, viragladas
  143 sprites/peron2a.pcx 8bpp 90 0 44 39 -32 -18 normal chunked
  144 sprites/peron2a.pcx 8bpp 90 40 44 39 -10 -18 normal chunked
	// lampas, pados
  145 sprites/peron2a.pcx 8bpp 0 0 44 39 -32 -18 normal chunked
  146 sprites/peron2a.pcx 8bpp 0 40 44 39 -10 -18 normal chunked
	// lampas, kukas, pados
  147 sprites/peron2a.pcx 8bpp 45 0 44 39 -32 -18 normal chunked
  148 sprites/peron2a.pcx 8bpp 45 40 44 39 -10 -18 normal chunked

   // allomas tablas
  149 sprites/peron2a.pcx 8bpp 135 0 44 39 -32 -18 normal chunked
  150 sprites/peron2a.pcx 8bpp 135 40 44 39 -10 -18 normal chunked




// betoltendo vegso spriteok, innen kell esetleg szurni cargo szerint...
  151 * 7	 02 04 00 00 01 00 00	// menu grafika
  152 * 7	 02 04 01 00 01 01 00	// egyeduli peron
  153 * 7	 02 04 02 00 01 02 00	// hatulja
  154 * 7	 02 04 03 00 01 03 00	// nem kopott kozepe
  155 * 7	 02 04 04 00 01 04 00	// eleje

   // objektumos kozepek
  156 * 7	 02 04 05 00 01 05 00	// lampas, viragladas
  157 * 7	 02 04 06 00 01 06 00	// lampas, kukas
  158 * 7	 02 04 07 00 01 07 00	// pados, viragladas
  159 * 7	 02 04 08 00 01 08 00	// lampas, pados
  160 * 7	 02 04 09 00 01 09 00	// lampas, kukas, pados
  161 * 7	 02 04 0A 00 01 0A 00	// allomas tablas



// full kozepso lekerdezese....
//	138 * 18	 02 04 80 81 // check for crane
//	49 20 0F
//	\2- 49 04 0F
//	\b1
//	\wx40 00 01 // tile is in the middle of the platform, build crane
//	\wx8008 // no crane

// kisebb egyenlo mint 4 a paltform length
//	139 * 14	 02 04 80 81 // check for crane
//	49 10 0F // total platform length
//	\b1
//	\wx8008 00 04 // for platforms <= length 4, no crane
//	\wx80


// kozepso lekerdezesek.....
// minden harmadik mezore legyen igaz az eszaki vegetol szamitva, ez annak a feltetele, hogy harmadik-e...
	// sima randomizaciok
  162 * 15	 02 04 B2
			80 00						// 80 azaz random object, 00, azaz nincs random trigger
			10							// szerintem ez kotelezoen ennyi, azt irja, hogy "first random bit to use", 10 volt itt...
			04							// hany darab random lehetosegunk van
			03 00						// Action2 azonositoja minden egyes lehetosegnek kulon
			03 00			// 3 a nem kopott, ures
			03 00
			07 00			// pados, viragladas

	// lampas randomizaciok
  163 * 15	 02 04 B1
			80 00						// 80 azaz random object, 00, azaz nincs random trigger
			10							// szerintem ez kotelezoen ennyi
			04							// hany darab random lehetosegunk van
			05 00						// Action2 azonositoja minden egyes lehetosegnek kulon
			06 00
			08 00
			09 00

	// negyedik lekerdezes, ami mar nem a szelso elemeket randomizalja
	// itt konkretan szetvalasztom, hogy minden harmadik lampas elem, a tobbi meg nem :D
  164 * 16	 02 04 B0
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			80							// azaz shift & modulo
			F0							// azaz a felso ertekre szurunk, igy alulrol minden harmadikat keressuk...
			01							// hozzaadas, azert adok hozza 1-et, mert 00 a kezdo sorszam, es ugy 3. helyett 4.re adja...
			03							// harommal osztunk, vagy mi
			01							// 1 variacio van
			B1 00 00 00					// ha 0 az eredmeny, akkor lampas randomizacio
			B2 00						// egyebkent sima randmizacio lesz...



// ez a harmadik lekerdezes, ha a deli vege van, akkor betolti azt, egyebkent a kozepso lekerdezesekre ugrik...
  165 * 14	 02 04 A3
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			00							// shift eltolas, hany bittel arrebb szerenem lekerdezni, pl 0C az 12 bit, azaz Lc bitek
			F0							// maszkolas, ha F, akkor az erdekel minket
			01							// hany darab variacio van
			04 00 00 00					// 00 00 actione-re ugorjon, ha 00 es 00 range kozott van
			B0 00						// ha nincs egyezes, akkor ide ugorjon

// ez a masodik lekerdezes, ha az eszaki vege van, akkor egybol betolti a 00-s sprite-ot, egyebkent a harmadik lekerdezesre ugrik
  166 * 14	 02 04 A2
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			00							// shift eltolas
			0F							// maszkolas
			01							// hany darab variacio van
			02 00 00 00					// 02 00 actione-re ugorjon, ha 00 min es 00 max range kozott van
			A3 00						// ha nincs egyezes, akkor ide ugorjon


//
// nagyobb vagy pont 8 hosszusagu
//

  167 * 22	 02 04 E1
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			04							// shift eltolas
			0F							// maszkolas
			03							// hany darab variacio van
			04 00 00 00					// deli vege
			0A 00 01 01					// 0A 00 action a tablasok
			B1 00 02 02					// B1 00 a lampas randomizaciok
			A2 00						// ha nincs egyezes, akkor ide ugorjon

  168 * 18	 02 04 E0
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			00							// shift eltolas
			0F							// maszkolas
			02							// hany darab variacio van
			02 00 00 00					// eszaki vege
			0A 00 01 01					// 0A 00 action a tablasok
//			B1 00 02 02					// B1 00 a lampas randomizaciok, direkt nincs ez bekapcsolva, mert igy nem jo
			E1 00						// ha nincs egyezes, akkor ide ugorjon

//
// het hosszusag eseten
//

  169 * 38	 02 04 D0
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			00							// shift eltolas
			0F							// maszkolas
			07							// hany darab variacio van
			02 00 00 00					// eszaki vege
			0A 00 01 01					// 0A 00 action a tablasok
			B1 00 02 02					// B1 00 a lampas randomizaciok
			B2 00 03 03					// B2 00 a sima kozepso randomizaciok
			B1 00 04 04					// B1 00 a lampas randomizaciok
			0A 00 05 05					// 0A 00 action a tablasok
			04 00 06 06					// deli vege
			A2 00						// ha nincs egyezes, akkor ide ugorjon

//
// elso lekerdezesek
//

// ez a masodik lekerdezes, ha kereken 7 hosszusagu
  170 * 18	 02 04 A1
			81 49						// 81 lower byte, 40 type, Platform info and relative position
			10							// shift eltolas, hany bittel arrebb szerenem lekerdezni, pl 0C az 12 bit, azaz Lc bitek
			0F							// maszkolas
			02							// hany darab variacio van
			D0 00 07 07					// D0 00 action-re ugorjon, ha 07 min es 07 max range kozott van
			E0 00 08 FF					// E0 00 action-re ugorjon, ha legalabb 8 hosszusagu
			A2 00						// ha nincs egyezes, akkor ide ugorjon

// ez az elso lekerdezes, ezzel kerdezem le
  171 * 14	 02 04 A0
			81 49						// 81 lower byte, 40 type, Platform info and relative position
			10							// shift eltolas, hany bittel arrebb szerenem lekerdezni, pl 0C az 12 bit, azaz Lc bitek
			0F							// maszkolas
			01							// hany darab variacio van
			01 00 01 01					// 01 00 actione-re ugorjon, ha 01 min es 01 max range kozott van
			A1 00						// ha nincs egyezes, akkor ide ugorjon



// ez meg nem lekerdezes, hanem calback elvalaszto
  172 * 17	 02 04 AA
			85							// get word
			0C							// check if callback
			00
			FF FF
			01							// hany range
			00							// ennyi legyen, ha 14-es callback van
			00							// elvalaszto, vagyis nem is, vagy nem tudom, 80 volt itt elotte, de igy most majdnem jo...
			14 00	14 00				// Set to use during callback 14, tehat ha 14-es min es 14-es max callback van.
			A0 00						// else graphics Set

////// make available from 1950
//  527 * 14    02 04
//         FA                   // setID
//         81                  // type
//         01 00 FF
//         01                  // numRanges
//          00 80 00 00            // XX - 1920. So for 1950 = 00 80 00 1E
//          01 80                  // allow

// callback handler for build menu
// switch between callback and graphics branches
  173 * 17	 02 04 C0					// Set-ID C0
			85 0C 00 FF FF				// get word, check if callback
			01							// one range
//			FA 00 13 00 13 00			// lekerdezzuk, hogy elerheto-e, tehat a 13 callback az elerhetoseg???
			00 80 14 00 14 00			// use layouts 06/07 during callback 14
			00 00						// menu grafika....

//   00 * 00	03 04 01 05 00 A0 00		// igy nincs cargo azonositas, hanem azonnal ugrunk a A0 action2-re
  174 * 10	 03 04 01 07
   01									// hany darab kulonbozo cargo
   FF C0 00								// FF elvileg a menu hivasa, ezt olvastam...
//   FE 00 00								// FE, ez a kozepe mezore vagy a kozepehez kepest eszakra levo mezore a grafikat hivja meg...
   AA 00								// ha nem menu, akkor AA action2-re




//**************************************//
//					Peron 2b			//
//**************************************//


  175 * 316	 00 04 04 01 08 08 "PKS1"
//			11 00 14 FF 15 FF
			0C FE
			0B 03	// custom sprite layout
//			13 01	// elvileg ilyenkor lehet kiszamitani a groundot

				09 14	// ez mar a konkret tile-okat jelenti, hogy hany darab van belole


		// 00
			// menu grafika
			F4 03 00 00
			00 0B 00	10 05 1F	2D 04 00 00
			80

			// menu grafika
			F3 03 00 00
			0B 00 00	05 10 1F	2E 04 00 00
			80

		// 01
			// egyeduli peron
			F4 03 00 00
			00 0B 00	10 05 1F	2D 04 00 00
			80

			// egyeduli peron
			F3 03 00 00
			0B 00 00	05 10 1F	2E 04 00 00
			80

		// 02
			// a hatulja, kopott (eszakrol)
			F4 03 00 00
			00 0B 00	10 05 1F	2D 04 00 00
			80

			// b hatulja
			F3 03 00 00
			0B 00 00	05 10 1F	2E 04 00 00
			80


		// 03
			// a nem kopott kozepe
			F4 03 00 00
			00 0B 00	10 05 1F	2D 04 00 00
			80

			// b sima kozepe
			F3 03 00 00
			0B 00 00	05 10 1F	2E 04 00 00
			80

		// 04
			// a eleje
			F4 03 00 00
			00 0B 00	10 05 1F	2D 04 00 00
			80

			// b eleje
			F3 03 00 00
			0B 00 00	05 10 1F	2E 04 00 00
			80


		// kozepso elemek
		// 05, lampas, viragladas
			F4 03 00 00
			00 0B 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			0B 00 00	05 10 1F	2E 04 00 00
			80

		// 06, lampas, kukas
			F4 03 00 00
			00 0B 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			0B 00 00	05 10 1F	2E 04 00 00
			80

		// 07, pados, viragladas
			F4 03 00 00
			00 0B 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			0B 00 00	05 10 1F	2E 04 00 00
			80

		// 08, lampas, pados
			F4 03 00 00
			00 0B 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			0B 00 00	05 10 1F	2E 04 00 00
			80

		// 08, allomas tablas
			F4 03 00 00
			00 0B 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			0B 00 00	05 10 1F	2E 04 00 00
			80


  176 * 4	 01 04 0A 02

	// menu grafika
  177 sprites/peron2b.pcx 8bpp 0 0 44 39 -32 -18 normal chunked
  178 sprites/peron2b.pcx 8bpp 0 40 44 39 -10 -18 normal chunked

	// egyeduli peron
  179 sprites/peron2.pcx 8bpp 91 77 44 39 -32 -18 normal chunked
  180 sprites/peron2.pcx 8bpp 91 117 44 39 -11 -18 normal chunked

	// eszakrol az elso (hatulja)
  181 sprites/peron2.pcx 8bpp 46 1 44 37 -32 -16 normal chunked
  182 sprites/peron2.pcx 8bpp 46 39 44 37 -10 -16 normal chunked

	// ures kozepso
	// nem kopott
  183 sprites/peron2.pcx 8bpp 91 1 44 37 -32 -16 normal chunked
  184 sprites/peron2.pcx 8bpp 91 39 44 37 -10 -16 normal chunked

	// eleje (delro)
  185 sprites/peron2.pcx 8bpp 1 1 44 37 -32 -16 normal chunked
  186 sprites/peron2.pcx 8bpp 1 39 44 37 -10 -16 normal chunked

   // kozepso kozos spiretok
	// lampas, viragladas
  187 sprites/peron2.pcx 8bpp 1 77 44 39 -32 -18 normal chunked
  188 sprites/peron2.pcx 8bpp 1 117 44 39 -10 -18 normal chunked
	// lampas, kukas
  189 sprites/peron2.pcx 8bpp 46 77 44 39 -32 -18 normal chunked
  190 sprites/peron2.pcx 8bpp 46 117 44 39 -10 -18 normal chunked

   // kozepso sajat spiretok
	// pados, viragladas
  191 sprites/peron2b.pcx 8bpp 0 0 44 39 -32 -18 normal chunked
  192 sprites/peron2b.pcx 8bpp 0 40 44 39 -10 -18 normal chunked
	// lampas, pados
  193 sprites/peron2b.pcx 8bpp 45 0 44 39 -32 -18 normal chunked
  194 sprites/peron2b.pcx 8bpp 45 40 44 39 -10 -18 normal chunked

   // allomas tablas
  195 sprites/peron2b.pcx 8bpp 90 0 44 39 -32 -18 normal chunked
  196 sprites/peron2b.pcx 8bpp 90 40 44 39 -10 -18 normal chunked


// betoltendo vegso spriteok, innen kell esetleg szurni cargo szerint...
  197 * 7	 02 04 00 00 01 00 00	// menu grafika
  198 * 7	 02 04 01 00 01 01 00	// egyeduli peron
  199 * 7	 02 04 02 00 01 02 00	// hatulja
  200 * 7	 02 04 03 00 01 03 00	// nem kopott kozepe
  201 * 7	 02 04 04 00 01 04 00	// eleje

   // objektumos kozepek
  202 * 7	 02 04 05 00 01 05 00	// lampas, viragladas
  203 * 7	 02 04 06 00 01 06 00	// lampas, kukas
  204 * 7	 02 04 07 00 01 07 00	// pados, viragladas
  205 * 7	 02 04 08 00 01 08 00	// lampas, pados
  206 * 7	 02 04 09 00 01 09 00	// allomas tablas



// full kozepso lekerdezese....
//	138 * 18	 02 04 80 81 // check for crane
//	49 20 0F
//	\2- 49 04 0F
//	\b1
//	\wx40 00 01 // tile is in the middle of the platform, build crane
//	\wx8008 // no crane

// kisebb egyenlo mint 4 a paltform length
//	139 * 14	 02 04 80 81 // check for crane
//	49 10 0F // total platform length
//	\b1
//	\wx8008 00 04 // for platforms <= length 4, no crane
//	\wx80


// kozepso lekerdezesek.....
// minden harmadik mezore legyen igaz az eszaki vegetol szamitva, ez annak a feltetele, hogy harmadik-e...
	// sima randomizaciok
  207 * 15	 02 04 B2
			80 00						// 80 azaz random object, 00, azaz nincs random trigger
			10							// szerintem ez kotelezoen ennyi, azt irja, hogy "first random bit to use", 10 volt itt...
			04							// hany darab random lehetosegunk van
			03 00						// Action2 azonositoja minden egyes lehetosegnek kulon
			03 00			// 3 a nem kopott, ures
			03 00
			07 00			// pados, viragladas

	// lampas randomizaciok
  208 * 15	 02 04 B1
			80 00						// 80 azaz random object, 00, azaz nincs random trigger
			10							// szerintem ez kotelezoen ennyi
			04							// hany darab random lehetosegunk van
			05 00						// Action2 azonositoja minden egyes lehetosegnek kulon
			08 00			// a pados itt direkt van ketszer
			06 00
			08 00

	// negyedik lekerdezes, ami mar nem a szelso elemeket randomizalja
	// itt konkretan szetvalasztom, hogy minden harmadik lampas elem, a tobbi meg nem :D
  209 * 16	 02 04 B0
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			80							// azaz shift & modulo
			F0							// azaz a felso ertekre szurunk, igy alulrol minden harmadikat keressuk...
			01							// hozzaadas, azert adok hozza 1-et, mert 00 a kezdo sorszam, es ugy 3. helyett 4.re adja...
			03							// harommal osztunk, vagy mi
			01							// 1 variacio van
			B1 00 00 00					// ha 0 az eredmeny, akkor lampas randomizacio
			B2 00						// egyebkent sima randmizacio lesz...



// ez a harmadik lekerdezes, ha a deli vege van, akkor betolti azt, egyebkent a kozepso lekerdezesekre ugrik...
  210 * 14	 02 04 A3
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			00							// shift eltolas, hany bittel arrebb szerenem lekerdezni, pl 0C az 12 bit, azaz Lc bitek
			F0							// maszkolas, ha F, akkor az erdekel minket
			01							// hany darab variacio van
			04 00 00 00					// 00 00 actione-re ugorjon, ha 00 es 00 range kozott van
			B0 00						// ha nincs egyezes, akkor ide ugorjon

// ez a masodik lekerdezes, ha az eszaki vege van, akkor egybol betolti a 00-s sprite-ot, egyebkent a harmadik lekerdezesre ugrik
  211 * 14	 02 04 A2
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			00							// shift eltolas
			0F							// maszkolas
			01							// hany darab variacio van
			02 00 00 00					// 91 00 actione-re ugorjon, ha 00 min es 00 max range kozott van
			A3 00						// ha nincs egyezes, akkor ide ugorjon


//
// nagyobb vagy pont 8 hosszusagu
//

  212 * 22	 02 04 E1
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			04							// shift eltolas
			0F							// maszkolas
			03							// hany darab variacio van
			04 00 00 00					// deli vege
			09 00 01 01					// 0E 00 action a tablasok
			B1 00 02 02					// B1 00 a lampas randomizaciok
			A2 00						// ha nincs egyezes, akkor ide ugorjon

  213 * 18	 02 04 E0
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			00							// shift eltolas
			0F							// maszkolas
			02							// hany darab variacio van
			02 00 00 00					// eszaki vege
			09 00 01 01					// 0E 00 action a tablasok
//			B1 00 02 02					// B1 00 a lampas randomizaciok, direkt nincs ez bekapcsolva, mert igy nem jo
			E1 00						// ha nincs egyezes, akkor ide ugorjon


//
// het hosszusag eseten
//

  214 * 38	 02 04 D0
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			00							// shift eltolas
			0F							// maszkolas
			07							// hany darab variacio van
			02 00 00 00					// eszaki vege
			09 00 01 01					// 0D 00 action a tablasok
			B1 00 02 02					// B1 00 a lampas randomizaciok
			B2 00 03 03					// B2 00 a sima kozepso randomizaciok
			B1 00 04 04					// B1 00 a lampas randomizaciok
			09 00 05 05					// 0D 00 action a tablasok
			04 00 06 06					// deli vege
			E0 00						// ha nincs egyezes, akkor ide ugorjon

//
// elso lekerdezesek
//

// ez a masodik lekerdezes, ha kereken 7 hosszusagu
  215 * 18	 02 04 A1
			81 49						// 81 lower byte, 40 type, Platform info and relative position
			10							// shift eltolas, hany bittel arrebb szerenem lekerdezni, pl 0C az 12 bit, azaz Lc bitek
			0F							// maszkolas
			02							// hany darab variacio van
			D0 00 07 07					// D0 00 action-re ugorjon, ha 07 min es 07 max range kozott van
			E0 00 08 FF					// E0 00 action-re ugorjon, ha legalabb 8 hosszusagu
			A2 00						// ha nincs egyezes, akkor ide ugorjon


// ez az elso lekerdezes, ezzel kerdezem le
  216 * 14	 02 04 A0
			81 49						// 81 lower byte, 40 type, Platform info and relative position
			10								// shift eltolas, hany bittel arrebb szerenem lekerdezni, pl 0C az 12 bit, azaz Lc bitek
			0F							// maszkolas
			01							// hany darab variacio van
			01 00 01 01					// 01 00 actione-re ugorjon, ha 01 min es 01 max range kozott van
			A1 00						// ha nincs egyezes, akkor ide ugorjon



// ez meg nem lekerdezes, hanem calback elvalaszto
  217 * 17	 02 04 AA
			85							// get word
			0C							// check if callback
			00
			FF FF
			01							// hany range
			00							// ennyi legyen, ha 14-es callback van
			00							// elvalaszto, vagyis nem is, vagy nem tudom, 80 volt itt elotte, de igy most majdnem jo...
			14 00	14 00				// Set to use during callback 14, tehat ha 14-es min es 14-es max callback van.
			A0 00						// else graphics Set

////// make available from 1950
//  527 * 14    02 04
//         FA                   // setID
//         81                  // type
//         01 00 FF
//         01                  // numRanges
//          00 80 00 00            // XX - 1920. So for 1950 = 00 80 00 1E
//          01 80                  // allow

// callback handler for build menu
// switch between callback and graphics branches
  218 * 17	 02 04 C0					// Set-ID C0
			85 0C 00 FF FF				// get word, check if callback
			01							// one range
//			FA 00 13 00 13 00			// lekerdezzuk, hogy elerheto-e, tehat a 13 callback az elerhetoseg???
			00 80 14 00 14 00			// use layouts 06/07 during callback 14
			00 00						// menu grafika....

//   00 * 00	03 04 01 05 00 A0 00		// igy nincs cargo azonositas, hanem azonnal ugrunk a A0 action2-re
  219 * 10	 03 04 01 08
   01									// hany darab kulonbozo cargo
   FF C0 00								// FF elvileg a menu hivasa, ezt olvastam...
//   FE 00 00								// FE, ez a kozepe mezore vagy a kozepehez kepest eszakra levo mezore a grafikat hivja meg...
   AA 00								// ha nem menu, akkor AA action2-re

//**************************************//
//				Strings					//
//**************************************//

  220 * 40	 04 04 FF 01 05 C4 "ÞOPeronok automatikus egyoldalú" 00
  221 * 33	 04 04 FF 01 05 C5 "ÞORégi alacsonyhátulsó" 00
  222 * 32	 04 04 FF 01 06 C5 "ÞORégi alacsonyelülső"  00
  223 * 31	 04 04 FF 01 07 C5 "ÞORégi magas hátulsó" 00
  224 * 30	 04 04 FF 01 08 C5 "ÞORégi magas elülső" 00
