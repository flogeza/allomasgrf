// Automatically generated by GRFCODEC. Do not modify!
// (Info version 32)
// Escapes: 2+ 2- 2< 2> 2u< 2u> 2/ 2% 2u/ 2u% 2* 2& 2| 2^ 2sto = 2s 2rst = 2r 2psto 2ror = 2rot 2cmp 2ucmp 2<< 2u>> 2>>
// Escapes: 71 70 7= 7! 7< 7> 7G 7g 7gG 7GG 7gg 7c 7C
// Escapes: D= = DR D+ = DF D- = DC Du* = DM D* = DnF Du<< = DnC D<< = DO D& D| Du/ D/ Du% D%
// Format: spritenum imagefile depth xpos ypos xsize ysize xrel yrel zoom flags
    0 * 4	 21 01 00 00
    1 * 39	 14 "CINFOTURL_" 7F "http:valami.hu/megvalami" 00 00 00				// url cim
    2 * 19	 14 "CINFOBVRSN" 04 00 01 00 00 00 00 00							// versio szama
    3 * 19	 14 "CINFOBMINV" 04 00 01 00 00 00 00 00							// minimum kompatibilis verzio szama
    4 * 16	 14 "CINFOBPALS" 01 00 57 00 00										// milyen szin palettat hasznaltunk
    5 * 50	 08 07 "FK" 00 00													// grf ID
				"Hungarian stations" 00											// grf neve
				"Ez egy kis" 0D 98 "rovid leiras" 00							// grf leirasa, a leirasban ha minden igaz hasznalhato a 0D mint sortores, a 98 talan behuzas

// 1420-as sorszamu alap sprite a beton sprite



//******************************************************************************************************************************************************//
//																																						//
//																	NYUGATI																				//
//																																						//
//******************************************************************************************************************************************************//


//**************************************//
//				Elulso epulet			//
//**************************************//

    6 * 48	 00 04															// action0, feature 4, azaz allomas
			05 01 00														// 05, azaz hany darab propertit irunk felul es ebben a reszben hany allomast irunk felul, utolso szam a az elso station ID
			08 "PKS0"														// 08 a station class azonositoja, a "PKS0" pedig a sajat definialt station csoport ID-ja
			11 00 14 FF 15 FF												// 11 villanyoszlop, 14 felso vezetek, es a 15, hogy bejohet-e a vonat... elvileg
//			0C FE es 0D FE													// 0C es 0D ezek az allomas lehetseges kiterjedese valami bitmask formaban. egyik egyik forgatas, masik masik forgatas
   			09 02	// ez mar a konkret tile-okat jelenti

//0000042D+X (00 00 04 2D + x)	Sima, company color nelkuli valtozat....
//0000842D+X (00 00 84 2D + x)	Company color valtozat
//0322442D+X (03 22 44 2D + x)	transparent color valtozat

			// a sprite layoutok informacioi, 02 hany darab nezetet definialunk
    		0C E3 00 00														// EC 03 00 00 a fekete teglalap kodja, de F4 03 fuves sines egyenes, F3 03 szinten fuves sines egyenes, csak masik forgatasban
    		00 00 00	10 10 46	2D 04 00 00								// utolso negy a sprite szama, elotte levo harom a bounding box merete, ami majdnem a sprite merete, x,y,z; ha 322-t adunk meg az utolso ket helyen (22 03), akkor atlatszo, glass lesz
//    		00 00 00	05 10 03	2E 04 00 00
    		80
																			// sprite leiras lezaro resz
			0C E3 00 00
			00 00 00	10 10 46	2E 04 00 00
//			00 00 00	05 10 03	30 04 00 00
			80

    7 * 4	 01 04 01 02													// 01 action, 04 allomas feature, 01 hany station ID-t hatarozunk meg, 04 ID-nkent hany darab sprite van
//    00 sprites/nyugati.pcx 8bpp 167 2 68 35 -32 -1 normal chunked
    8 sprites/nyugati.pcx 8bpp 85 5 68 79 -34 -46 normal chunked
//   00 sprites/nyugati.pcx 8bpp 167 2 68 35 -33 -2 normal chunked
    9 sprites/nyugati.pcx 8bpp 3 3 75 84 -37 -50 normal chunked

   10 * 9	 02 04															// 02 action, 04 allomas feature
			00 01															// 00 mi legyen az action ID-ja, 01 hany kulonbozo spriteot/cargot kezel vagy ha jol ertem akkor hany kulonbozo lekerdezest hajtson vegre es keressen ra talalatot
			01 00 00														// ha jol gondolom, akkor annyiszor ez a sor, ahanyat megadtunk elozoleg
//																			// 01 az erteke a lekerdezesnek, 00 00 forditott bytesorrend az elozohoz tartozik, ha ervenyes ra, akkor ezt a spritot tolti be, marmint ezt az azonositoju sprite-ot
			00 00															// utolso ket 00 00 az alapertelmezett spritot tolti be, ha az elozoekre nem talalt megoldast, ez is forditott bytesorrendu

   11 * 9	 02 04 01 01 01 00 00 00 00

   12 * 10	 03 04															// 03 action, 04 allomas feature
			01 00															// 01 hany darab 3-as action azonositot akarunk, 00 - (n) itt az azonositok jonnek felsorolva, annyi, amennyit elotte megadtunk, ez utobbi allomast ID-t jelent
//																			// minden egyes uj 00 action utan ujrakezdodik ay allomas es a sprite azonositoja
			01																// 01 hany kulon cargo fajtat akarunk meghatarozni, hogy milyen allomas reszt toltson be
			FF 01 00														// annyiszor ez a sor, ahanyat megadtunk elozoleg, FF cargo azonositoja, talan az FF az osszes cargot jelenti (vagyis az FF talan a menut jelenti)..., 01 00 pedig a forditott bytesorrendu action2 azonositot jelent
			00 00															// utolso ket 00 00 ha nincs talalat a megadott cargokra, akkor ezt az azonositoju action2-t fogja betolteni, ez is forditott bytesorrendu


//**************************************//
//				Kistorony 1				//
//**************************************//

   13 * 48	 00 04 05 01 01 08 "PKS0"
			11 00 14 FF 15 FF
   			09 02

    		0C E3 00 00
    		00 00 00	05 10 03	2D 04 00 00
//    		00 00 00	05 10 03	2E 04 00 00
    		80

			0C E3 00 00
			00 00 00	05 10 03	2E 04 00 00
//			00 00 00	05 10 03	30 04 00 00
			80

   14 * 4	 01 04 01 02
//   00 sprites/nyugati.pcx 8bpp 167 2 68 35 -32 -1 normal chunked
   15 sprites/nyugati.pcx 8bpp 5 92 66 90 -33 -59 normal chunked
//   00 sprites/nyugati.pcx 8bpp 167 2 68 35 -33 -2 normal chunked
   16 sprites/nyugati.pcx 8bpp 78 92 67 78 -33 -45 normal chunked

   17 * 9	 02 04 00 01 01 00 00 00 00
   18 * 9	 02 04 01 01 01 00 00 00 00
   19 * 10	 03 04 01 01 01 FF 01 00 00 00



//**************************************//
//				Kistorony 2				//
//**************************************//

   20 * 48	 00 04 05 01 02 08 "PKS0"
			11 00 14 FF 15 FF
			09 02

			0C E3 00 00
			00 00 00	05 10 03	2D 04 00 00
//			00 00 00	05 10 03	2E 04 00 00
			80

			0C E3 00 00
			00 00 00	05 10 03	2E 04 00 00
//			00 00 00	05 10 03	30 04 00 00
			80

   21 * 4	 01 04 01 02
//   00 sprites/nyugati.pcx 8bpp 167 2 68 35 -32 -1 normal chunked
   22 sprites/nyugati.pcx 8bpp 151 92 67 78 -33 -45 normal chunked
//   00 sprites/nyugati.pcx 8bpp 167 2 68 35 -33 -2 normal chunked
   23 sprites/nyugati.pcx 8bpp 225 95 66 65 -33 -32 normal chunked

   24 * 9	 02 04 00 01 01 00 00 00 00
   25 * 9	 02 04 01 01 01 00 00 00 00
   26 * 10	 03 04 01 02 01 FF 01 00 00 00



//**************************************//
//			Oldalso epulet				//
//**************************************//

   27 * 112	 00 04 07 01 03 08 "PKS0"
			11 00 14 FF 15 FF
			0D FE
			09 06

			0C E3 00 00
//			00 00 00	05 10 03	2D 04 00 00
//			00 00 00	05 10 03	2E 04 00 00
			00 00 00	05 10 03	2D 04 17 03
			80

			0C E3 00 00
//			00 00 00	05 10 03	2F 04 00 00
//			00 00 00	05 10 03	30 04 00 00
			00 00 00	05 10 03	2E 04 17 03
			80

			0C E3 00 00
//			00 00 00	05 10 03	31 04 00 00
//			00 00 00	05 10 03	32 04 00 00
			00 00 00	05 10 03	2F 04 17 03
			80

			0C E3 00 00
//			00 00 00	05 10 03	33 04 00 00
//			00 00 00	05 10 03	34 04 00 00
			00 00 00	05 10 03	30 04 17 03
			80

			0C E3 00 00
//			00 00 00	05 10 03	35 04 00 00
//			00 00 00	05 10 03	36 04 00 00
			00 00 00	05 10 03	31 04 17 03
			80

			0C E3 00 00
//			00 00 00	05 10 03	37 04 00 00
//			00 00 00	05 10 03	38 04 00 00
			00 00 00	05 10 03	32 04 17 03
			80

			0B 02	# custom sprite layout


   28 * 4	 01 04 03 02

//   00 sprites/nyugati.pcx 8bpp 168 44 66 34 -33 -1 normal chunked
   29 sprites/nyugati.pcx 8bpp 9 199 58 64 -24 -36 normal chunked		// 1 eleje
//   00 sprites/nyugati.pcx 8bpp 168 44 66 34 -33 -1 normal chunked
   30 sprites/nyugati.pcx 8bpp 251 198 58 64 -32 -36 normal chunked		// 2 eleje

//   00 sprites/nyugati.pcx 8bpp 168 44 66 34 -33 -1 normal chunked
   31 sprites/nyugati.pcx 8bpp 118 199 38 64 -28 -38 normal chunked		// 1 kozepso
//   00 sprites/nyugati.pcx 8bpp 168 44 66 34 -33 -1 normal chunked
   32 sprites/nyugati.pcx 8bpp 162 198 38 64 -8 -38 normal chunked		// 2 kozepso

//   00 sprites/nyugati.pcx 8bpp 168 44 66 34 -33 -1 normal chunked
   33 sprites/nyugati.pcx 8bpp 73 199 41 53 -35 -29 normal chunked		// 1 hatulja
//   00 sprites/nyugati.pcx 8bpp 168 44 66 34 -33 -1 normal chunked
   34 sprites/nyugati.pcx 8bpp 204 198 41 53 -4 -29 normal chunked		// 2 hatulja


   35 * 7	 02 04 00 00 01 00 00
   36 * 7	 02 04 01 00 01 01 00
   37 * 7	 02 04 02 00 01 02 00

// ezzel a sorral valasztunk ki veletlenszeruen egy Action 2-t,
// hatulrol az 5. hogy hany kozul es utana kettessevel forditott byte sorrendben a lehetseges valtozatok
// 00 * 00	 02 04 00 01 01 00 00 01 00
// 00 * 00	 02 04 01 01 01 02 00 03 00
// 00 * 00	 02 04 02 80 00 10 02 00 00 01 00


   38 * 14	 02 04 10
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			08							// shift eltolas, hany bittel arrebb szerenem lekerdezni, pl 0C az 12 bit, azaz Lc bitek
			F0							// maszkolas, ha F, akkor az erdekel minket
			01							// hany darab variacio van
//			02 00 02 02					// 02 00 action2-re ugorjon, ha 02 es 02 range kozott van
//			01 00 01 01					// 01 00 action2-re ugorjon, ha 01 es 01 range kozott van
			00 00 00 00					// 00 00 actione-re ugorjon, ha 00 es 00 range kozott van
			01 00						// ha nincs egyezes, akkor ide ugorjon

   39 * 14	 02 04 11
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			08							// shift eltolas
			0F							// maszkolas
			01							// hany darab variacio van
			02 00 00 00					// 02 00 actione-re ugorjon, ha 00 min es 00 max range kozott van
			10 00						// ha nincs egyezes, akkor ide ugorjon

   40 * 17	 02 04 12
			85							// get word
			0C							// check if callback
			00
			FF FF
			01							// hany range
//			02 80 13 00 13 00
			00							// ennyi legyen, ha 14-es callback van
			80							// elvalaszto
			14 00	14 00				// Set to use during callback 14, tehat ha 14-es min es 14-es max callback van.
			11 00						// else graphics Set

   41 * 7	 03 04 01 03 00 12 00		// igy nincs cargo azonositas, hanem azonnal ugrunk a 05 action2-re




//**************************************//
//				Csarnok					//
//**************************************//

   42 * 222	 00 04 07 01 04 08 "PKS0"
			11 00 14 FF 15 FF
			0D FE									// TODO: ezt lehet at kellene irni 0C FE-re, mert most forditva jelennek meg az epuletek
			09 08

			0C E3 00 00
			00 00 00	05 10 03	2D 04 00 00
			00 00 00	05 10 03	2E 04 00 00
			80

			0C E3 00 00
			00 00 00	05 10 03	2F 04 00 00
			00 00 00	05 10 03	30 04 00 00
			80

			0C E3 00 00
			00 00 00	05 10 03	31 04 00 00
			00 00 00	05 10 03	32 04 00 00
			80

			0C E3 00 00
			00 00 00	05 10 03	33 04 00 00
			00 00 00	05 10 03	34 04 00 00
			80

			0C E3 00 00
			00 00 00	05 10 03	35 04 00 00
			00 00 00	05 10 03	36 04 00 00
			80

			0C E3 00 00
			00 00 00	05 10 03	37 04 00 00
			00 00 00	05 10 03	38 04 00 00
			80

			0C E3 00 00
			00 00 00	05 10 03	39 04 00 00
			00 00 00	05 10 03	3A 04 00 00
			80

			0C E3 00 00
			00 00 00	05 10 03	3B 04 00 00
			00 00 00	05 10 03	3C 04 00 00
			80

			0B 02	# custom sprite layout


   43 * 4	 01 04 04 04

   44 sprites/nyugati.pcx 8bpp 168 44 66 34 -33 -1 normal chunked
   45 sprites/nyugati.pcx 8bpp 219 265 66 100 -0 -35 normal chunked		// 1 eleje elso
   46 sprites/nyugati.pcx 8bpp 168 44 66 34 -33 -1 normal chunked
   47 sprites/nyugati.pcx 8bpp 6 400 66 100 -32 -36 normal chunked		// 2 eleje elso

   48 sprites/nyugati.pcx 8bpp 168 44 66 34 -33 -1 normal chunked
   49 sprites/nyugati.pcx 8bpp 149 265 66 132 -32 -38 normal chunked		// 1 eleje masodik
   50 sprites/nyugati.pcx 8bpp 168 44 66 34 -33 -1 normal chunked
   51 sprites/nyugati.pcx 8bpp 78 400 66 132 -32 -38 normal chunked		// 2 eleje masodik

   52 sprites/nyugati.pcx 8bpp 168 44 66 34 -33 -1 normal chunked
   53 sprites/nyugati.pcx 8bpp 78 265 66 133 -32 -51 normal chunked		// 1 kozepso
   54 sprites/nyugati.pcx 8bpp 168 44 66 34 -33 -1 normal chunked
   55 sprites/nyugati.pcx 8bpp 149 400 66 133 -32 -38 normal chunked		// 2 kozepso

   56 sprites/nyugati.pcx 8bpp 168 44 66 34 -33 -1 normal chunked
   57 sprites/nyugati.pcx 8bpp 6 265 66 107 -32 -29 normal chunked		// 1 hatulja
   58 sprites/nyugati.pcx 8bpp 168 44 66 34 -33 -1 normal chunked
   59 sprites/nyugati.pcx 8bpp 219 400 66 107 -32 -29 normal chunked		// 2 hatulja


   60 * 7	 02 04 00 00 01 00 00
   61 * 7	 02 04 01 00 01 01 00
   62 * 7	 02 04 02 00 01 02 00
   63 * 7	 02 04 03 00 01 03 00

// ezzel a sorral valasztunk ki veletlenszeruen egy Action 2-t,
// hatulrol az 5. hogy hany kozul es utana kettessevel forditott byte sorrendben a lehetseges valtozatok
// 00 * 00	02 04 00 01 01 00 00 01 00
// 00 * 00	02 04 01 01 01 02 00 03 00
// 00 * 00	02 04 02 80 00 10 02 00 00 01 00


   64 * 18	 02 04 10
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			08							// shift eltolas, hany bittel arrebb szerenem lekerdezni, pl 0C az 12 bit, azaz Lc bitek
			F0							// maszkolas, ha F, akkor az erdekel minket
			02							// hany darab variacio van
			00 00 00 00					// 00 00 actione-re ugorjon, ha 00 es 00 range kozott van
			01 00 01 01					// 01 00 action2-re ugorjon, ha 01 es 01 range kozott van
			02 00						// ha nincs egyezes, akkor ide ugorjon

   65 * 14	 02 04 11
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			08							// shift eltolas
			0F							// maszkolas
			01							// hany darab variacio van
			03 00 00 00					// 02 00 actione-re ugorjon, ha 00 min es 00 max range kozott van
			10 00						// ha nincs egyezes, akkor ide ugorjon

   66 * 17	 02 04 12
			85							// get word
			0C							// check if callback
			00
			FF FF
			01							// hany range
//			02 80 13 00 13 00
			00							// ennyi legyen, ha 14-es callback van
			80							// elvalaszto
			14 00	14 00				// Set to use during callback 14, tehat ha 14-es min es 14-es max callback van.
			11 00						// else graphics Set

   67 * 7	 03 04 01 04 00 12 00		// igy nincs cargo azonositas, hanem azonnal ugrunk a 12 action2-re





//******************************************************************************************************************************************************//
//																																						//
//																	PERONOK																				//
//																																						//
//******************************************************************************************************************************************************//




//**************************************//
//					Peron 1a			//
//**************************************//


   68 * 436	 00 04 04 01 05 08 "PKS1"
//			11 00 14 FF 15 FF
			0C FE
			0B 03	// custom sprite layout
//			13 01	// elvileg ilyenkor lehet kiszamitani a groundot

			09 1C	// ez mar a konkret tile-okat jelenti, hogy hany darab van belole


		// 00
			// menu grafika
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			// menu grafika
			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 01
			// egyeduli peron
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			// egyeduli peron
			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 02
			// a hatulja, kopott 1 (eszakrol)
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			// b hatulja
			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 03
			// a hatulja, kopott 2 (eszakrol)
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			// b hatulja
			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80


		// 04
			// a nem kopott kozepe
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			// b sima kozepe
			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 05
			// a kopott kozepe 1
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			// b sima kozepe
			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 06
			// a kopott kozepe 2
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			// b sima kozepe
			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 07
			// a eleje
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			// b eleje
			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 08
			// 1a eleje
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			// 1b eleje
			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80


		// kozepso elemek
		// 09, lampas, viragladas
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 0A, lampas, kukas
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 0B, pados, viragladas
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 0C, lampas, pados
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 0D, lampas, kukas, pados
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

   69 * 4	 01 04 0E 02

	// menu grafika
   70 sprites/peron1a.pcx 8bpp 45 0 44 37 -32 -16 normal chunked
   71 sprites/peron1a.pcx 8bpp 45 38 44 37 -11 -16 normal chunked

	// egyeduli peron
   72 sprites/peron1.pcx 8bpp 181 77 44 37 -32 -15 normal chunked
   73 sprites/peron1.pcx 8bpp 181 115 44 37 -10 -15 normal chunked

	// eszakrol az elso (hatulja)
	// kopott 1
   74 sprites/peron1.pcx 8bpp 91 1 44 37 -34 -14 normal chunked
   75 sprites/peron1.pcx 8bpp 91 39 44 37 -8 -14 normal chunked
	// kopott 2
   76 sprites/peron1.pcx 8bpp 136 1 44 37 -34 -14 normal chunked
   77 sprites/peron1.pcx 8bpp 136 39 44 37 -8 -14 normal chunked

	// ures kozepso
	// nem kopott
   78 sprites/peron1.pcx 8bpp 181 1 44 37 -30 -17 normal chunked
   79 sprites/peron1.pcx 8bpp 181 39 44 37 -12 -17 normal chunked
	// kopott 1
   80 sprites/peron1.pcx 8bpp 91 77 44 37 -30 -17 normal chunked
   81 sprites/peron1.pcx 8bpp 91 115 44 37 -12 -17 normal chunked
	// kopott 2
   82 sprites/peron1.pcx 8bpp 136 77 44 37 -30 -17 normal chunked
   83 sprites/peron1.pcx 8bpp 136 115 44 37 -12 -17 normal chunked

	// eleje (delro)
	// kopott 1
   84 sprites/peron1.pcx 8bpp 1 1 44 37 -28 -17 normal chunked
   85 sprites/peron1.pcx 8bpp 1 39 44 37 -12 -17 normal chunked
	// kopott 2
   86 sprites/peron1.pcx 8bpp 46 1 44 37 -28 -17 normal chunked
   87 sprites/peron1.pcx 8bpp 46 39 44 37 -12 -17 normal chunked

   // kozepso kozos spiretok
	// lampas, viragladas
   88 sprites/peron1.pcx 8bpp 1 77 44 37 -30 -17 normal chunked
   89 sprites/peron1.pcx 8bpp 1 115 44 37 -12 -17 normal chunked
	// lampas, kukas
   90 sprites/peron1.pcx 8bpp 46 77 44 37 -30 -17 normal chunked
   91 sprites/peron1.pcx 8bpp 46 115 44 37 -12 -17 normal chunked

   // kozepso sajat spiretok
	// pados, viragladas
   92 sprites/peron1a.pcx 8bpp 90 0 44 37 -30 -17 normal chunked
   93 sprites/peron1a.pcx 8bpp 90 38 44 37 -12 -17 normal chunked
	// lampas, pados
   94 sprites/peron1a.pcx 8bpp 0 0 44 37 -30 -17 normal chunked
   95 sprites/peron1a.pcx 8bpp 0 38 44 37 -12 -17 normal chunked
	// lampas, kukas, pados
   96 sprites/peron1a.pcx 8bpp 45 0 44 37 -30 -17 normal chunked
   97 sprites/peron1a.pcx 8bpp 45 38 44 37 -12 -17 normal chunked




// betoltendo vegso spriteok, innen kell esetleg szurni cargo szerint...
   98 * 7	 02 04 00 00 01 00 00	// menu grafika
   99 * 7	 02 04 01 00 01 01 00	// egyeduli peron
  100 * 7	 02 04 02 00 01 02 00	// kopott hatulja 1
  101 * 7	 02 04 03 00 01 03 00	// kopott hatulja 2
  102 * 7	 02 04 04 00 01 04 00	// nem kopott kozepe
  103 * 7	 02 04 05 00 01 05 00	// kopott kozepe 1
  104 * 7	 02 04 06 00 01 06 00	// kopott kozepe 2
  105 * 7	 02 04 07 00 01 07 00	// kopott eleje 1
  106 * 7	 02 04 08 00 01 08 00	// kopott eleje 2

   // objektumos kozepek
  107 * 7	 02 04 09 00 01 09 00	// lampas, viragladas
  108 * 7	 02 04 0A 00 01 0A 00	// lampas, kukas
  109 * 7	 02 04 0B 00 01 0B 00	// pados, viragladas
  110 * 7	 02 04 0C 00 01 0C 00	// lampas, pados
  111 * 7	 02 04 0D 00 01 0D 00	// lampas, kukas, pados




// full kozepso lekerdezese....
//	138 * 18	 02 04 80 81 // check for crane
//	49 20 0F
//	\2- 49 04 0F
//	\b1
//	\wx40 00 01 // tile is in the middle of the platform, build crane
//	\wx8008 // no crane

// kisebb egyenlo mint 4 a paltform length
//	139 * 14	 02 04 80 81 // check for crane
//	49 10 0F // total platform length
//	\b1
//	\wx8008 00 04 // for platforms <= length 4, no crane
//	\wx80


// eszaki vegenek randomizacioja
  112 * 11	 02 04 91
			80 00						// 80 azaz random object, 00, azaz nincs random trigger
			10							// szerintem ez kotelezoen ennyi
			02							// hany darab random lehetosegunk van
			02 00						// Action2 azonositoja minden egyes lehetosegnek kulon
			03 00						// ezzel a modszerrel 1:1 eselye, hogy melyik lesz....

// deli vegenek randomizacioja
  113 * 11	 02 04 92
			80 00						// 80 azaz random object, 00, azaz nincs random trigger
			10							// szerintem ez kotelezoen ennyi
			02							// hany darab random lehetosegunk van
			07 00						// Action2 azonositoja minden egyes lehetosegnek kulon
			08 00						// ezzel a modszerrel 1:1 eselye, hogy melyik lesz....

// kozepso lekerdezesek.....
// minden harmadik mezore legyen igaz az eszaki vegetol szamitva, ez annak a feltetele, hogy harmadik-e...
	// sima randomizaciok
  114 * 23	 02 04 B2
			80 00						// 80 azaz random object, 00, azaz nincs random trigger
			10							// szerintem ez kotelezoen ennyi, azt irja, hogy "first random bit to use", 10 volt itt...
			08							// hany darab random lehetosegunk van
			04 00						// Action2 azonositoja minden egyes lehetosegnek kulon
			04 00			// 4 a nem kopott, ures
			04 00
			04 00
			05 00			// 1 a kopott 1
			06 00			// 1 a kopott 2
			0B 00			// ketszer van a pados, viragladas
			0B 00

	// lampas randomizaciok
  115 * 15	 02 04 B1
			80 00						// 80 azaz random object, 00, azaz nincs random trigger
			10							// szerintem ez kotelezoen ennyi
			04							// hany darab random lehetosegunk van
			09 00						// Action2 azonositoja minden egyes lehetosegnek kulon
			0A 00
			0C 00
			0D 00

	// negyedik lekerdezes, ami mar nem a szelso elemeket randomizalja
	// itt konkretan szetvalasztom, hogy minden harmadik lampas elem, a tobbi meg nem :D
  116 * 16	 02 04 B0
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			80							// azaz shift & modulo
			F0							// azaz a felso ertekre szurunk, igy alulrol minden harmadikat keressuk...
			01							// hozzaadas, azert adok hozza 1-et, mert 00 a kezdo sorszam, es ugy 3. helyett 4.re adja...
			03							// harommal osztunk, vagy mi
			01							// 1 variacio van
			B1 00 00 00					// ha 0 az eredmeny, akkor lampas randomizacio
			B2 00						// egyebkent sima randmizacio lesz...



// ez a harmadik lekerdezes, ha a deli vege van, akkor betolti azt, egyebkent a kozepso lekerdezesekre ugrik...
  117 * 14	 02 04 A2
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			00							// shift eltolas, hany bittel arrebb szerenem lekerdezni, pl 0C az 12 bit, azaz Lc bitek
			F0							// maszkolas, ha F, akkor az erdekel minket
			01							// hany darab variacio van
			92 00 00 00					// 00 00 actione-re ugorjon, ha 00 es 00 range kozott van
			B0 00						// ha nincs egyezes, akkor ide ugorjon

// ez a masodik lekerdezes, ha az eszaki vege van, akkor egybol betolti a 00-s sprite-ot, egyebkent a harmadik lekerdezesre ugrik
  118 * 14	 02 04 A1
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			00							// shift eltolas
			0F							// maszkolas
			01							// hany darab variacio van
			91 00 00 00					// 91 00 actione-re ugorjon, ha 00 min es 00 max range kozott van
			A2 00						// ha nincs egyezes, akkor ide ugorjon

// ez az elso lekerdezes, ezzel kerdezem le
  119 * 14	 02 04 A0
			81 49						// 81 lower byte, 40 type, Platform info and relative position
			10							// shift eltolas, hany bittel arrebb szerenem lekerdezni, pl 0C az 12 bit, azaz Lc bitek
			0F							// maszkolas
			01							// hany darab variacio van
			01 00 01 01					// 01 00 actione-re ugorjon, ha 01 min es 01 max range kozott van
			A1 00						// ha nincs egyezes, akkor ide ugorjon



// ez meg nem lekerdezes, hanem calback elvalaszto
  120 * 17	 02 04 AA
			85							// get word
			0C							// check if callback
			00
			FF FF
			01							// hany range
			00							// ennyi legyen, ha 14-es callback van
			00							// elvalaszto, vagyis nem is, vagy nem tudom, 80 volt itt elotte, de igy most majdnem jo...
			14 00	14 00				// Set to use during callback 14, tehat ha 14-es min es 14-es max callback van.
			A0 00						// else graphics Set

////// make available from 1950
//  527 * 14    02 04
//         FA                   // setID
//         81                  // type
//         01 00 FF
//         01                  // numRanges
//          00 80 00 00            // XX - 1920. So for 1950 = 00 80 00 1E
//          01 80                  // allow

// callback handler for build menu
// switch between callback and graphics branches
  121 * 17	 02 04 C0					// Set-ID C0
			85 0C 00 FF FF				// get word, check if callback
			01							// one range
//			FA 00 13 00 13 00			// lekerdezzuk, hogy elerheto-e, tehat a 13 callback az elerhetoseg???
			00 80 14 00 14 00			// use layouts 06/07 during callback 14
			00 00						// menu grafika....

//   00 * 00	03 04 01 05 00 A0 00		// igy nincs cargo azonositas, hanem azonnal ugrunk a A0 action2-re
  122 * 10	 03 04 01 05
   01									// hany darab kulonbozo cargo
   FF C0 00								// FF elvileg a menu hivasa, ezt olvastam...
//   FE 00 00								// FE, ez a kozepe mezore vagy a kozepehez kepest eszakra levo mezore a grafikat hivja meg...
   AA 00								// ha nem menu, akkor AA action2-re




//**************************************//
//					Peron 1b			//
//**************************************//


  123 * 406	 00 04 04 01 06 08 "PKS1"
//			11 00 14 FF 15 FF
			0C FE
			0B 03	// custom sprite layout
//			13 01	// elvileg ilyenkor lehet kiszamitani a groundot

				09 1A	// ez mar a konkret tile-okat jelenti, hogy hany darab van belole


		// 00
			// menu grafika
			F4 03 00 00
			00 0A 00	10 05 1F	2D 04 00 00
			80

			// menu grafika
			F3 03 00 00
			0A 00 00	05 10 1F	2E 04 00 00
			80

		// 01
			// egyeduli peron
			F4 03 00 00
			00 0A 00	10 05 1F	2D 04 00 00
			80

			// egyeduli peron
			F3 03 00 00
			0A 00 00	05 10 1F	2E 04 00 00
			80

		// 02
			// a hatulja, kopott 1 (eszakrol)
			F4 03 00 00
			00 0A 00	10 05 1F	2D 04 00 00
			80

			// b hatulja
			F3 03 00 00
			0A 00 00	05 10 1F	2E 04 00 00
			80

		// 03
			// a hatulja, kopott 2 (eszakrol)
			F4 03 00 00
			00 0A 00	10 05 1F	2D 04 00 00
			80

			// b hatulja
			F3 03 00 00
			0A 00 00	05 10 1F	2E 04 00 00
			80


		// 04
			// a nem kopott kozepe
			F4 03 00 00
			00 0A 00	10 05 1F	2D 04 00 00
			80

			// b sima kozepe
			F3 03 00 00
			0A 00 00	05 10 1F	2E 04 00 00
			80

		// 05
			// a kopott kozepe 1
			F4 03 00 00
			00 0A 00	10 05 1F	2D 04 00 00
			80

			// b sima kozepe
			F3 03 00 00
			0A 00 00	05 10 1F	2E 04 00 00
			80

		// 06
			// a kopott kozepe 2
			F4 03 00 00
			00 0A 00	10 05 1F	2D 04 00 00
			80

			// b sima kozepe
			F3 03 00 00
			0A 00 00	05 10 1F	2E 04 00 00
			80

		// 07
			// a eleje
			F4 03 00 00
			00 0A 00	10 05 1F	2D 04 00 00
			80

			// b eleje
			F3 03 00 00
			0A 00 00	05 10 1F	2E 04 00 00
			80

		// 08
			// 1a eleje
			F4 03 00 00
			00 0A 00	10 05 1F	2D 04 00 00
			80

			// 1b eleje
			F3 03 00 00
			0A 00 00	05 10 1F	2E 04 00 00
			80


		// kozepso elemek
		// 09, lampas, viragladas
			F4 03 00 00
			00 0A 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			0A 00 00	05 10 1F	2E 04 00 00
			80

		// 0A, lampas, kukas
			F4 03 00 00
			00 0A 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			0A 00 00	05 10 1F	2E 04 00 00
			80

		// 0B, pados, viragladas
			F4 03 00 00
			00 0A 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			0A 00 00	05 10 1F	2E 04 00 00
			80

		// 0C, lampas, pados
			F4 03 00 00
			00 0A 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			0A 00 00	05 10 1F	2E 04 00 00
			80


  124 * 4	 01 04 0D 02

	// menu grafika
  125 sprites/peron1b.pcx 8bpp 0 0 44 37 -30 -15 normal chunked // -10, -5
  126 sprites/peron1b.pcx 8bpp 0 38 44 37 -12 -15 normal chunked

	// egyeduli peron
  127 sprites/peron1.pcx 8bpp 181 77 44 37 -31 -15 normal chunked
  128 sprites/peron1.pcx 8bpp 181 115 44 37 -11 -14 normal chunked

	// eszakrol az elso (hatulja)
	// kopott 1
  129 sprites/peron1.pcx 8bpp 91 1 44 37 -37 -12 normal chunked
  130 sprites/peron1.pcx 8bpp 91 39 44 37 -7 -12 normal chunked
	// kopott 2
  131 sprites/peron1.pcx 8bpp 136 1 44 37 -37 -12 normal chunked
  132 sprites/peron1.pcx 8bpp 136 39 44 37 -7 -12 normal chunked

	// ures kozepso
	// nem kopott
  133 sprites/peron1.pcx 8bpp 181 1 44 37 -33 -15 normal chunked
  134 sprites/peron1.pcx 8bpp 181 39 44 37 -11 -15 normal chunked
	// kopott 1
  135 sprites/peron1.pcx 8bpp 91 77 44 37 -33 -15 normal chunked
  136 sprites/peron1.pcx 8bpp 91 115 44 37 -11 -15 normal chunked
	// kopott 2
  137 sprites/peron1.pcx 8bpp 136 77 44 37 -33 -15 normal chunked
  138 sprites/peron1.pcx 8bpp 136 115 44 37 -11 -15 normal chunked

	// eleje (delro)
	// kopott 1
  139 sprites/peron1.pcx 8bpp 1 1 44 37 -31 -15 normal chunked
  140 sprites/peron1.pcx 8bpp 1 39 44 37 -11 -15 normal chunked
	// kopott 2
  141 sprites/peron1.pcx 8bpp 46 1 44 37 -31 -15 normal chunked
  142 sprites/peron1.pcx 8bpp 46 39 44 37 -11 -15 normal chunked

   // kozepso kozos spiretok
	// lampas, viragladas
  143 sprites/peron1.pcx 8bpp 1 77 44 37 -33 -15 normal chunked
  144 sprites/peron1.pcx 8bpp 1 115 44 37 -11 -15 normal chunked
	// lampas, kukas
  145 sprites/peron1.pcx 8bpp 46 77 44 37 -33 -15 normal chunked
  146 sprites/peron1.pcx 8bpp 46 115 44 37 -11 -15 normal chunked

   // kozepso sajat spiretok
	// pados, viragladas
  147 sprites/peron1b.pcx 8bpp 0 0 44 37 -33 -15 normal chunked
  148 sprites/peron1b.pcx 8bpp 0 38 44 37 -11 -15 normal chunked
	// lampas, pados
  149 sprites/peron1b.pcx 8bpp 45 0 44 37 -33 -15 normal chunked
  150 sprites/peron1b.pcx 8bpp 45 38 44 37 -11 -15 normal chunked


// betoltendo vegso spriteok, innen kell esetleg szurni cargo szerint...
  151 * 7	 02 04 00 00 01 00 00	// menu grafika
  152 * 7	 02 04 01 00 01 01 00	// egyeduli peron
  153 * 7	 02 04 02 00 01 02 00	// kopott hatulja 1
  154 * 7	 02 04 03 00 01 03 00	// kopott hatulja 2
  155 * 7	 02 04 04 00 01 04 00	// nem kopott kozepe
  156 * 7	 02 04 05 00 01 05 00	// kopott kozepe 1
  157 * 7	 02 04 06 00 01 06 00	// kopott kozepe 2
  158 * 7	 02 04 07 00 01 07 00	// kopott eleje 1
  159 * 7	 02 04 08 00 01 08 00	// kopott eleje 2

   // objektumos kozepek
  160 * 7	 02 04 09 00 01 09 00	// lampas, viragladas
  161 * 7	 02 04 0A 00 01 0A 00	// lampas, kukas
  162 * 7	 02 04 0B 00 01 0B 00	// pados, viragladas
  163 * 7	 02 04 0C 00 01 0C 00	// lampas, pados




// full kozepso lekerdezese....
//	138 * 18	 02 04 80 81 // check for crane
//	49 20 0F
//	\2- 49 04 0F
//	\b1
//	\wx40 00 01 // tile is in the middle of the platform, build crane
//	\wx8008 // no crane

// kisebb egyenlo mint 4 a paltform length
//	139 * 14	 02 04 80 81 // check for crane
//	49 10 0F // total platform length
//	\b1
//	\wx8008 00 04 // for platforms <= length 4, no crane
//	\wx80


// eszaki vegenek randomizacioja
  164 * 11	 02 04 91
			80 00						// 80 azaz random object, 00, azaz nincs random trigger
			10							// szerintem ez kotelezoen ennyi
			02							// hany darab random lehetosegunk van
			02 00						// Action2 azonositoja minden egyes lehetosegnek kulon
			03 00						// ezzel a modszerrel 1:1 eselye, hogy melyik lesz....

// deli vegenek randomizacioja
  165 * 11	 02 04 92
			80 00						// 80 azaz random object, 00, azaz nincs random trigger
			10							// szerintem ez kotelezoen ennyi
			02							// hany darab random lehetosegunk van
			07 00						// Action2 azonositoja minden egyes lehetosegnek kulon
			08 00						// ezzel a modszerrel 1:1 eselye, hogy melyik lesz....

// kozepso lekerdezesek.....
// minden harmadik mezore legyen igaz az eszaki vegetol szamitva, ez annak a feltetele, hogy harmadik-e...
	// sima randomizaciok
  166 * 23	 02 04 B2
			80 00						// 80 azaz random object, 00, azaz nincs random trigger
			10							// szerintem ez kotelezoen ennyi, azt irja, hogy "first random bit to use", 10 volt itt...
			08							// hany darab random lehetosegunk van
			04 00						// Action2 azonositoja minden egyes lehetosegnek kulon
			04 00			// 4 a nem kopott, ures
			04 00
			04 00
			05 00			// 1 a kopott 1
			06 00			// 1 a kopott 2
			0B 00			// ketszer van a pados, viragladas
			0B 00

	// lampas randomizaciok
  167 * 15	 02 04 B1
			80 00						// 80 azaz random object, 00, azaz nincs random trigger
			10							// szerintem ez kotelezoen ennyi
			04							// hany darab random lehetosegunk van
			09 00						// Action2 azonositoja minden egyes lehetosegnek kulon
			0C 00			// a pados itt direkt van ketszer
			0A 00
			0C 00

	// negyedik lekerdezes, ami mar nem a szelso elemeket randomizalja
	// itt konkretan szetvalasztom, hogy minden harmadik lampas elem, a tobbi meg nem :D
  168 * 16	 02 04 B0
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			80							// azaz shift & modulo
			F0							// azaz a felso ertekre szurunk, igy alulrol minden harmadikat keressuk...
			01							// hozzaadas, azert adok hozza 1-et, mert 00 a kezdo sorszam, es ugy 3. helyett 4.re adja...
			03							// harommal osztunk, vagy mi
			01							// 1 variacio van
			B1 00 00 00					// ha 0 az eredmeny, akkor lampas randomizacio
			B2 00						// egyebkent sima randmizacio lesz...



// ez a harmadik lekerdezes, ha a deli vege van, akkor betolti azt, egyebkent a kozepso lekerdezesekre ugrik...
  169 * 14	 02 04 A2
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			00							// shift eltolas, hany bittel arrebb szerenem lekerdezni, pl 0C az 12 bit, azaz Lc bitek
			F0							// maszkolas, ha F, akkor az erdekel minket
			01							// hany darab variacio van
			92 00 00 00					// 00 00 actione-re ugorjon, ha 00 es 00 range kozott van
			B0 00						// ha nincs egyezes, akkor ide ugorjon

// ez a masodik lekerdezes, ha az eszaki vege van, akkor egybol betolti a 00-s sprite-ot, egyebkent a harmadik lekerdezesre ugrik
  170 * 14	 02 04 A1
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			00							// shift eltolas
			0F							// maszkolas
			01							// hany darab variacio van
			91 00 00 00					// 91 00 actione-re ugorjon, ha 00 min es 00 max range kozott van
			A2 00						// ha nincs egyezes, akkor ide ugorjon


// ez az elso lekerdezes, ezzel kerdezem le
  171 * 14	 02 04 A0
			81 49						// 81 lower byte, 40 type, Platform info and relative position
			10								// shift eltolas, hany bittel arrebb szerenem lekerdezni, pl 0C az 12 bit, azaz Lc bitek
			0F							// maszkolas
			01							// hany darab variacio van
			01 00 01 01					// 01 00 actione-re ugorjon, ha 01 min es 01 max range kozott van
			A1 00						// ha nincs egyezes, akkor ide ugorjon



// ez meg nem lekerdezes, hanem calback elvalaszto
  172 * 17	 02 04 AA
			85							// get word
			0C							// check if callback
			00
			FF FF
			01							// hany range
			00							// ennyi legyen, ha 14-es callback van
			00							// elvalaszto, vagyis nem is, vagy nem tudom, 80 volt itt elotte, de igy most majdnem jo...
			14 00	14 00				// Set to use during callback 14, tehat ha 14-es min es 14-es max callback van.
			A0 00						// else graphics Set

////// make available from 1950
//  527 * 14    02 04
//         FA                   // setID
//         81                  // type
//         01 00 FF
//         01                  // numRanges
//          00 80 00 00            // XX - 1920. So for 1950 = 00 80 00 1E
//          01 80                  // allow

// callback handler for build menu
// switch between callback and graphics branches
  173 * 17	 02 04 C0					// Set-ID C0
			85 0C 00 FF FF				// get word, check if callback
			01							// one range
//			FA 00 13 00 13 00			// lekerdezzuk, hogy elerheto-e, tehat a 13 callback az elerhetoseg???
			00 80 14 00 14 00			// use layouts 06/07 during callback 14
			00 00						// menu grafika....

//   00 * 00	03 04 01 05 00 A0 00		// igy nincs cargo azonositas, hanem azonnal ugrunk a A0 action2-re
  174 * 10	 03 04 01 06
   01									// hany darab kulonbozo cargo
   FF C0 00								// FF elvileg a menu hivasa, ezt olvastam...
//   FE 00 00								// FE, ez a kozepe mezore vagy a kozepehez kepest eszakra levo mezore a grafikat hivja meg...
   AA 00								// ha nem menu, akkor AA action2-re




//**************************************//
//					Peron 2a			//
//**************************************//


  175 * 316	 00 04 04 01 07 08 "PKS1"
//			11 00 14 FF 15 FF
			0C FE
			0B 03	// custom sprite layout
//			13 01	// elvileg ilyenkor lehet kiszamitani a groundot

			09 14	// ez mar a konkret tile-okat jelenti, hogy hany darab van belole


		// 00
			// menu grafika
			F4 03 00 00
			00 00 00	10 05 12	2D 04 00 00
			80

			// menu grafika
			F3 03 00 00
			00 00 00	05 10 06	2E 04 00 00
			80

		// 01
			// egyeduli peron
			F4 03 00 00
			00 00 00	10 05 12	2D 04 00 00
			80

			// egyeduli peron
			F3 03 00 00
			00 00 00	05 10 06	2E 04 00 00
			80

		// 02
			// a hatulja (eszakrol)
			F4 03 00 00
			00 00 00	10 05 03	2D 04 00 00
			80

			// b hatulja
			F3 03 00 00
			00 00 00	00 00 02	2E 04 00 00
			80


		// 03
			// a nem kopott kozepe
			F4 03 00 00
			00 00 00	10 05 03	2D 04 00 00
			80

			// b sima kozepe
			F3 03 00 00
			00 00 00	00 00 02	2E 04 00 00
			80

		// 04
			// a eleje
			F4 03 00 00
			00 00 00	10 05 03	2D 04 00 00
			80

			// b eleje
			F3 03 00 00
			00 00 00	00 00 02	2E 04 00 00
			80

		// kozepso elemek
		// 05, lampas, viragladas
			F4 03 00 00
			00 00 00	10 05 03	2D 04 00 00
			80

			F3 03 00 00
			00 00 00	00 00 02	2E 04 00 00
			80

		// 06, lampas, kukas
			F4 03 00 00
			00 00 00	10 05 03	2D 04 00 00
			80

			F3 03 00 00
			00 00 00	00 00 02	2E 04 00 00
			80

		// 07, pados, viragladas
			F4 03 00 00
			00 00 00	10 05 03	2D 04 00 00
			80

			F3 03 00 00
			00 00 00	00 00 02	2E 04 00 00
			80

		// 08, lampas, pados
			F4 03 00 00
			00 00 00	10 05 03	2D 04 00 00
			80

			F3 03 00 00
			00 00 00	00 00 02	2E 04 00 00
			80

		// 09, lampas, kukas, pados
			F4 03 00 00
			00 00 00	10 05 03	2D 04 00 00
			80

			F3 03 00 00
			00 00 00	00 00 02	2E 04 00 00
			80

  176 * 4	 01 04 0A 02

	// menu grafika
  177 sprites/peron2a.pcx 8bpp 45 0 44 39 -32 -18 normal chunked
  178 sprites/peron2a.pcx 8bpp 45 40 44 39 -10 -18 normal chunked

	// egyeduli peron
  179 sprites/peron2.pcx 8bpp 91 77 44 39 -32 -18 normal chunked
  180 sprites/peron2.pcx 8bpp 91 117 44 39 -10 -18 normal chunked

	// eszakrol az elso (hatulja)
  181 sprites/peron2.pcx 8bpp 46 1 44 37 -32 -16 normal chunked
  182 sprites/peron2.pcx 8bpp 46 39 44 37 -10 -16 normal chunked

	// ures kozepso
	// nem kopott
  183 sprites/peron2.pcx 8bpp 91 1 44 37 -32 -16 normal chunked
  184 sprites/peron2.pcx 8bpp 91 39 44 37 -10 -16 normal chunked

	// eleje (delro)
  185 sprites/peron2.pcx 8bpp 1 1 44 37 -32 -16 normal chunked
  186 sprites/peron2.pcx 8bpp 1 39 44 37 -10 -16 normal chunked

   // kozepso kozos spiretok
	// lampas, viragladas
  187 sprites/peron2.pcx 8bpp 1 77 44 39 -32 -18 normal chunked
  188 sprites/peron2.pcx 8bpp 1 117 44 39 -10 -18 normal chunked
	// lampas, kukas
  189 sprites/peron2.pcx 8bpp 46 77 44 39 -32 -18 normal chunked
  190 sprites/peron2.pcx 8bpp 46 117 44 39 -10 -18 normal chunked

   // kozepso sajat spiretok
	// pados, viragladas
  191 sprites/peron2a.pcx 8bpp 90 0 44 39 -32 -18 normal chunked
  192 sprites/peron2a.pcx 8bpp 90 40 44 39 -10 -18 normal chunked
	// lampas, pados
  193 sprites/peron2a.pcx 8bpp 0 0 44 39 -32 -18 normal chunked
  194 sprites/peron2a.pcx 8bpp 0 40 44 39 -10 -18 normal chunked
	// lampas, kukas, pados
  195 sprites/peron2a.pcx 8bpp 45 0 44 39 -32 -18 normal chunked
  196 sprites/peron2a.pcx 8bpp 45 40 44 39 -10 -18 normal chunked




// betoltendo vegso spriteok, innen kell esetleg szurni cargo szerint...
  197 * 7	 02 04 00 00 01 00 00	// menu grafika
  198 * 7	 02 04 01 00 01 01 00	// egyeduli peron
  199 * 7	 02 04 02 00 01 02 00	// hatulja
  200 * 7	 02 04 03 00 01 03 00	// nem kopott kozepe
  201 * 7	 02 04 04 00 01 04 00	// eleje

   // objektumos kozepek
  202 * 7	 02 04 05 00 01 05 00	// lampas, viragladas
  203 * 7	 02 04 06 00 01 06 00	// lampas, kukas
  204 * 7	 02 04 07 00 01 07 00	// pados, viragladas
  205 * 7	 02 04 08 00 01 08 00	// lampas, pados
  206 * 7	 02 04 09 00 01 09 00	// lampas, kukas, pados



// full kozepso lekerdezese....
//	138 * 18	 02 04 80 81 // check for crane
//	49 20 0F
//	\2- 49 04 0F
//	\b1
//	\wx40 00 01 // tile is in the middle of the platform, build crane
//	\wx8008 // no crane

// kisebb egyenlo mint 4 a paltform length
//	139 * 14	 02 04 80 81 // check for crane
//	49 10 0F // total platform length
//	\b1
//	\wx8008 00 04 // for platforms <= length 4, no crane
//	\wx80


// kozepso lekerdezesek.....
// minden harmadik mezore legyen igaz az eszaki vegetol szamitva, ez annak a feltetele, hogy harmadik-e...
	// sima randomizaciok
  207 * 15	 02 04 B2
			80 00						// 80 azaz random object, 00, azaz nincs random trigger
			10							// szerintem ez kotelezoen ennyi, azt irja, hogy "first random bit to use", 10 volt itt...
			04							// hany darab random lehetosegunk van
			03 00						// Action2 azonositoja minden egyes lehetosegnek kulon
			03 00			// 3 a nem kopott, ures
			03 00
			07 00			// pados, viragladas

	// lampas randomizaciok
  208 * 15	 02 04 B1
			80 00						// 80 azaz random object, 00, azaz nincs random trigger
			10							// szerintem ez kotelezoen ennyi
			04							// hany darab random lehetosegunk van
			05 00						// Action2 azonositoja minden egyes lehetosegnek kulon
			06 00
			08 00
			09 00

	// negyedik lekerdezes, ami mar nem a szelso elemeket randomizalja
	// itt konkretan szetvalasztom, hogy minden harmadik lampas elem, a tobbi meg nem :D
  209 * 16	 02 04 B0
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			80							// azaz shift & modulo
			F0							// azaz a felso ertekre szurunk, igy alulrol minden harmadikat keressuk...
			01							// hozzaadas, azert adok hozza 1-et, mert 00 a kezdo sorszam, es ugy 3. helyett 4.re adja...
			03							// harommal osztunk, vagy mi
			01							// 1 variacio van
			B1 00 00 00					// ha 0 az eredmeny, akkor lampas randomizacio
			B2 00						// egyebkent sima randmizacio lesz...



// ez a harmadik lekerdezes, ha a deli vege van, akkor betolti azt, egyebkent a kozepso lekerdezesekre ugrik...
  210 * 14	 02 04 A2
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			00							// shift eltolas, hany bittel arrebb szerenem lekerdezni, pl 0C az 12 bit, azaz Lc bitek
			F0							// maszkolas, ha F, akkor az erdekel minket
			01							// hany darab variacio van
			04 00 00 00					// 00 00 actione-re ugorjon, ha 00 es 00 range kozott van
			B0 00						// ha nincs egyezes, akkor ide ugorjon

// ez a masodik lekerdezes, ha az eszaki vege van, akkor egybol betolti a 00-s sprite-ot, egyebkent a harmadik lekerdezesre ugrik
  211 * 14	 02 04 A1
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			00							// shift eltolas
			0F							// maszkolas
			01							// hany darab variacio van
			02 00 00 00					// 91 00 actione-re ugorjon, ha 00 min es 00 max range kozott van
			A2 00						// ha nincs egyezes, akkor ide ugorjon

// ez az elso lekerdezes, ezzel kerdezem le
  212 * 14	 02 04 A0
			81 49						// 81 lower byte, 40 type, Platform info and relative position
			10							// shift eltolas, hany bittel arrebb szerenem lekerdezni, pl 0C az 12 bit, azaz Lc bitek
			0F							// maszkolas
			01							// hany darab variacio van
			01 00 01 01					// 01 00 actione-re ugorjon, ha 01 min es 01 max range kozott van
			A1 00						// ha nincs egyezes, akkor ide ugorjon



// ez meg nem lekerdezes, hanem calback elvalaszto
  213 * 17	 02 04 AA
			85							// get word
			0C							// check if callback
			00
			FF FF
			01							// hany range
			00							// ennyi legyen, ha 14-es callback van
			00							// elvalaszto, vagyis nem is, vagy nem tudom, 80 volt itt elotte, de igy most majdnem jo...
			14 00	14 00				// Set to use during callback 14, tehat ha 14-es min es 14-es max callback van.
			A0 00						// else graphics Set

////// make available from 1950
//  527 * 14    02 04
//         FA                   // setID
//         81                  // type
//         01 00 FF
//         01                  // numRanges
//          00 80 00 00            // XX - 1920. So for 1950 = 00 80 00 1E
//          01 80                  // allow

// callback handler for build menu
// switch between callback and graphics branches
  214 * 17	 02 04 C0					// Set-ID C0
			85 0C 00 FF FF				// get word, check if callback
			01							// one range
//			FA 00 13 00 13 00			// lekerdezzuk, hogy elerheto-e, tehat a 13 callback az elerhetoseg???
			00 80 14 00 14 00			// use layouts 06/07 during callback 14
			00 00						// menu grafika....

//   00 * 00	03 04 01 05 00 A0 00		// igy nincs cargo azonositas, hanem azonnal ugrunk a A0 action2-re
  215 * 10	 03 04 01 07
   01									// hany darab kulonbozo cargo
   FF C0 00								// FF elvileg a menu hivasa, ezt olvastam...
//   FE 00 00								// FE, ez a kozepe mezore vagy a kozepehez kepest eszakra levo mezore a grafikat hivja meg...
   AA 00								// ha nem menu, akkor AA action2-re




//**************************************//
//					Peron 2b			//
//**************************************//


  216 * 286	 00 04 04 01 08 08 "PKS1"
//			11 00 14 FF 15 FF
			0C FE
			0B 03	// custom sprite layout
//			13 01	// elvileg ilyenkor lehet kiszamitani a groundot

				09 12	// ez mar a konkret tile-okat jelenti, hogy hany darab van belole


		// 00
			// menu grafika
			F4 03 00 00
			00 00 00	00 00 00	2D 04 00 00
			80

			// menu grafika
			F3 03 00 00
			00 00 00	00 00 00	2E 04 00 00
			80

		// 01
			// egyeduli peron
			F4 03 00 00
			00 00 00	00 00 00	2D 04 00 00
			80

			// egyeduli peron
			F3 03 00 00
			00 00 00	00 00 00	2E 04 00 00
			80

		// 02
			// a hatulja, kopott (eszakrol)
			F4 03 00 00
			00 00 00	00 00 00	2D 04 00 00
			80

			// b hatulja
			F3 03 00 00
			00 00 00	00 00 00	2E 04 00 00
			80


		// 03
			// a nem kopott kozepe
			F4 03 00 00
			00 00 00	00 00 00	2D 04 00 00
			80

			// b sima kozepe
			F3 03 00 00
			00 00 00	00 00 00	2E 04 00 00
			80

		// 04
			// a eleje
			F4 03 00 00
			00 00 00	00 00 00	2D 04 00 00
			80

			// b eleje
			F3 03 00 00
			00 00 00	00 00 00	2E 04 00 00
			80


		// kozepso elemek
		// 05, lampas, viragladas
			F4 03 00 00
			00 00 00	00 00 00	2D 04 00 00
			80

			F3 03 00 00
			00 00 00	00 00 00	2E 04 00 00
			80

		// 06, lampas, kukas
			F4 03 00 00
			00 00 00	00 00 00	2D 04 00 00
			80

			F3 03 00 00
			00 00 00	00 00 00	2E 04 00 00
			80

		// 07, pados, viragladas
			F4 03 00 00
			00 00 00	00 00 00	2D 04 00 00
			80

			F3 03 00 00
			00 00 00	00 00 00	2E 04 00 00
			80

		// 08, lampas, pados
			F4 03 00 00
			00 00 00	00 00 00	2D 04 00 00
			80

			F3 03 00 00
			00 00 00	00 00 00	2E 04 00 00
			80


  217 * 4	 01 04 09 02

	// menu grafika
  218 sprites/peron2b.pcx 8bpp 0 0 44 39 -10 -7 normal chunked
  219 sprites/peron2b.pcx 8bpp 0 40 44 39 -32 -7 normal chunked

	// egyeduli peron
  220 sprites/peron2.pcx 8bpp 91 77 44 39 -10 -7 normal chunked
  221 sprites/peron2.pcx 8bpp 91 117 44 39 -32 -7 normal chunked

	// eszakrol az elso (hatulja)
  222 sprites/peron2.pcx 8bpp 46 1 44 37 -10 -5 normal chunked
  223 sprites/peron2.pcx 8bpp 46 39 44 37 -32 -5 normal chunked

	// ures kozepso
	// nem kopott
  224 sprites/peron2.pcx 8bpp 91 1 44 37 -10 -5 normal chunked
  225 sprites/peron2.pcx 8bpp 91 39 44 37 -32 -5 normal chunked

	// eleje (delro)
  226 sprites/peron2.pcx 8bpp 1 1 44 37 -10 -5 normal chunked
  227 sprites/peron2.pcx 8bpp 1 39 44 37 -32 -5 normal chunked

   // kozepso kozos spiretok
	// lampas, viragladas
  228 sprites/peron2.pcx 8bpp 1 77 44 39 -10 -7 normal chunked
  229 sprites/peron2.pcx 8bpp 1 117 44 39 -32 -7 normal chunked
	// lampas, kukas
  230 sprites/peron2.pcx 8bpp 46 77 44 39 -10 -7 normal chunked
  231 sprites/peron2.pcx 8bpp 46 117 44 39 -32 -7 normal chunked

   // kozepso sajat spiretok
	// pados, viragladas
  232 sprites/peron2b.pcx 8bpp 0 0 44 39 -10 -7 normal chunked
  233 sprites/peron2b.pcx 8bpp 0 40 44 39 -32 -7 normal chunked
	// lampas, pados
  234 sprites/peron2b.pcx 8bpp 45 0 44 39 -10 -7 normal chunked
  235 sprites/peron2b.pcx 8bpp 45 40 44 39 -32 -7 normal chunked


// betoltendo vegso spriteok, innen kell esetleg szurni cargo szerint...
  236 * 7	 02 04 00 00 01 00 00	// menu grafika
  237 * 7	 02 04 01 00 01 01 00	// egyeduli peron
  238 * 7	 02 04 02 00 01 02 00	// hatulja
  239 * 7	 02 04 03 00 01 03 00	// nem kopott kozepe
  240 * 7	 02 04 04 00 01 04 00	// eleje

   // objektumos kozepek
  241 * 7	 02 04 05 00 01 05 00	// lampas, viragladas
  242 * 7	 02 04 06 00 01 06 00	// lampas, kukas
  243 * 7	 02 04 07 00 01 07 00	// pados, viragladas
  244 * 7	 02 04 08 00 01 08 00	// lampas, pados



// full kozepso lekerdezese....
//	138 * 18	 02 04 80 81 // check for crane
//	49 20 0F
//	\2- 49 04 0F
//	\b1
//	\wx40 00 01 // tile is in the middle of the platform, build crane
//	\wx8008 // no crane

// kisebb egyenlo mint 4 a paltform length
//	139 * 14	 02 04 80 81 // check for crane
//	49 10 0F // total platform length
//	\b1
//	\wx8008 00 04 // for platforms <= length 4, no crane
//	\wx80


// kozepso lekerdezesek.....
// minden harmadik mezore legyen igaz az eszaki vegetol szamitva, ez annak a feltetele, hogy harmadik-e...
	// sima randomizaciok
  245 * 15	 02 04 B2
			80 00						// 80 azaz random object, 00, azaz nincs random trigger
			10							// szerintem ez kotelezoen ennyi, azt irja, hogy "first random bit to use", 10 volt itt...
			04							// hany darab random lehetosegunk van
			03 00						// Action2 azonositoja minden egyes lehetosegnek kulon
			03 00			// 3 a nem kopott, ures
			03 00
			07 00			// pados, viragladas

	// lampas randomizaciok
  246 * 15	 02 04 B1
			80 00						// 80 azaz random object, 00, azaz nincs random trigger
			10							// szerintem ez kotelezoen ennyi
			04							// hany darab random lehetosegunk van
			05 00						// Action2 azonositoja minden egyes lehetosegnek kulon
			08 00			// a pados itt direkt van ketszer
			06 00
			08 00

	// negyedik lekerdezes, ami mar nem a szelso elemeket randomizalja
	// itt konkretan szetvalasztom, hogy minden harmadik lampas elem, a tobbi meg nem :D
  247 * 16	 02 04 B0
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			80							// azaz shift & modulo
			F0							// azaz a felso ertekre szurunk, igy alulrol minden harmadikat keressuk...
			01							// hozzaadas, azert adok hozza 1-et, mert 00 a kezdo sorszam, es ugy 3. helyett 4.re adja...
			03							// harommal osztunk, vagy mi
			01							// 1 variacio van
			B1 00 00 00					// ha 0 az eredmeny, akkor lampas randomizacio
			B2 00						// egyebkent sima randmizacio lesz...



// ez a harmadik lekerdezes, ha a deli vege van, akkor betolti azt, egyebkent a kozepso lekerdezesekre ugrik...
  248 * 14	 02 04 A2
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			00							// shift eltolas, hany bittel arrebb szerenem lekerdezni, pl 0C az 12 bit, azaz Lc bitek
			F0							// maszkolas, ha F, akkor az erdekel minket
			01							// hany darab variacio van
			04 00 00 00					// 00 00 actione-re ugorjon, ha 00 es 00 range kozott van
			B0 00						// ha nincs egyezes, akkor ide ugorjon

// ez a masodik lekerdezes, ha az eszaki vege van, akkor egybol betolti a 00-s sprite-ot, egyebkent a harmadik lekerdezesre ugrik
  249 * 14	 02 04 A1
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			00							// shift eltolas
			0F							// maszkolas
			01							// hany darab variacio van
			02 00 00 00					// 91 00 actione-re ugorjon, ha 00 min es 00 max range kozott van
			A2 00						// ha nincs egyezes, akkor ide ugorjon


// ez az elso lekerdezes, ezzel kerdezem le
  250 * 14	 02 04 A0
			81 49						// 81 lower byte, 40 type, Platform info and relative position
			10								// shift eltolas, hany bittel arrebb szerenem lekerdezni, pl 0C az 12 bit, azaz Lc bitek
			0F							// maszkolas
			01							// hany darab variacio van
			01 00 01 01					// 01 00 actione-re ugorjon, ha 01 min es 01 max range kozott van
			A1 00						// ha nincs egyezes, akkor ide ugorjon



// ez meg nem lekerdezes, hanem calback elvalaszto
  251 * 17	 02 04 AA
			85							// get word
			0C							// check if callback
			00
			FF FF
			01							// hany range
			00							// ennyi legyen, ha 14-es callback van
			00							// elvalaszto, vagyis nem is, vagy nem tudom, 80 volt itt elotte, de igy most majdnem jo...
			14 00	14 00				// Set to use during callback 14, tehat ha 14-es min es 14-es max callback van.
			A0 00						// else graphics Set

////// make available from 1950
//  527 * 14    02 04
//         FA                   // setID
//         81                  // type
//         01 00 FF
//         01                  // numRanges
//          00 80 00 00            // XX - 1920. So for 1950 = 00 80 00 1E
//          01 80                  // allow

// callback handler for build menu
// switch between callback and graphics branches
  252 * 17	 02 04 C0					// Set-ID C0
			85 0C 00 FF FF				// get word, check if callback
			01							// one range
//			FA 00 13 00 13 00			// lekerdezzuk, hogy elerheto-e, tehat a 13 callback az elerhetoseg???
			00 80 14 00 14 00			// use layouts 06/07 during callback 14
			00 00						// menu grafika....

//   00 * 00	03 04 01 05 00 A0 00		// igy nincs cargo azonositas, hanem azonnal ugrunk a A0 action2-re
  253 * 10	 03 04 01 08
   01									// hany darab kulonbozo cargo
   FF C0 00								// FF elvileg a menu hivasa, ezt olvastam...
//   FE 00 00								// FE, ez a kozepe mezore vagy a kozepehez kepest eszakra levo mezore a grafikat hivja meg...
   AA 00								// ha nem menu, akkor AA action2-re

//******************************************************************************************************************************************************//
//																																						//
//																	Strings																				//
//																																						//
//******************************************************************************************************************************************************//


//**************************************//
//				Nyugati pu.				//
//**************************************//

  254 * 28	 04 04 FF 01 00 C4 "ÞNyugati pályaudvar" 00
  255 * 25	 04 04 FF 01 00 C5 "ÞFőépületrész" 00
  256 * 15	 04 04 FF 01 01 C5 "Torony 1" 00
  257 * 15	 04 04 FF 01 02 C5 "Torony 2" 00
  258 * 25	 04 04 FF 01 03 C5 "ÞOMelléképület" 00
  259 * 14	 04 04 FF 01 04 C5 "Csarnok" 00



//**************************************//
//				Peronok					//
//**************************************//

  260 * 21	 04 04 FF 01 05 C4 "Magyar peronok" 00
  261 * 15	 04 04 FF 01 05 C5 "Peron 1a" 00
  262 * 15	 04 04 FF 01 06 C5 "Peron 1b" 00
  263 * 15	 04 04 FF 01 07 C5 "Peron 2a" 00
  264 * 15	 04 04 FF 01 08 C5 "Peron 2b" 00


//******************************************************************************************************************************************************//
//																																						//
//																	TESZT																				//
//																																						//
//******************************************************************************************************************************************************//


  265 * 11	 02 04 40				// Procedure to compute the slope-dependent spriteoffset
            80 00						// 80 azaz random object, 00, azaz nincs random trigger
			10							// szerintem ez kotelezoen ennyi
			02							// hany darab random lehetosegunk van
			01 00						// Action2 azonositoja minden egyes lehetosegnek kulon
			00 00

  266 * 11	 02 04 41				// Procedure to compute the climate-dependent spriteoffset
            80 00						// 80 azaz random object, 00, azaz nincs random trigger
			10							// szerintem ez kotelezoen ennyi
			02							// hany darab random lehetosegunk van
			01 00						// Action2 azonositoja minden egyes lehetosegnek kulon
			00 00

  267 * 11	 02 04 42				// Procedure to compute the height offset in the middle of the tile
            80 00						// 80 azaz random object, 00, azaz nincs random trigger
			10							// szerintem ez kotelezoen ennyi
			02							// hany darab random lehetosegunk van
			01 00						// Action2 azonositoja minden egyes lehetosegnek kulon
			00 00




  268 * 160	 00 04 04 01 FE 08 "PKS1"
//			11 00 14 FF 15 FF
			0C FE
			0B 03	// custom sprite layout
//			13 01	// elvileg ilyenkor lehet kiszamitani a groundot

			1A 06

		// 00 eleje
			41				// +1 tile van a groundon kivul
			F4 03 00 00		// ground sprite
			02 00			// flags
			10				// register value
			2D 04 00 80		// sprite azonosito
			00 00			// flags
			00 00 00		// offset
			00 00 00		// extend

			41				// +1 tile van a groundon kivul
			F3 03 00 00		// ground sprite
			02 00			// flags
			10				// register value
			2E 04 00 80		// sprite azonosito
			00 00			// flags
			00 00 00		// offset
			00 00 00		// extend

		// 01 kozepe
			41				// +1 tile van a groundon kivul
			F4 03 00 00		// ground sprite
			02 00			// flags
			11				// register value
			2D 04 00 80		// sprite azonosito
			00 00			// flags
			00 00 00		// offset
			00 00 00		// extend

			41				// +1 tile van a groundon kivul
			F3 03 00 00		// ground sprite
			02 00			// flags
			11				// register value
			2E 04 00 80		// sprite azonosito
			00 00			// flags
			00 00 00		// offset
			00 00 00		// extend

		// 02 kozepe objektummal
			42				// +1 tile van a groundon kivul
			F4 03 00 00		// ground sprite
			02 00			// flags
			12				// register value

			2D 04 00 80		// sprite azonosito
			00 00			// flags
			00 00 00		// offset
			00 00 00		// extend

			2E 04 00 80		// sprite azonosito
			00 00			// flags
			00 00 00		// offset
			00 00 00		// extend

			42				// +1 tile van a groundon kivul
			F3 03 00 00		// ground sprite
			02 00			// flags
			12				// register value

			2F 04 00 80		// sprite azonosito
			00 00			// flags
			00 00 00		// offset
			00 00 00		// extend

			30 04 00 80		// sprite azonosito
			00 00			// flags
			00 00 00		// offset
			00 00 00		// extend


  269 * 4	 01 04 01 02
  270 sprites/peron1.pcx 8bpp 91 1 44 37 -34 -14 normal chunked
  271 sprites/peron1.pcx 8bpp 91 39 44 37 -8 -14 normal chunked

  272 * 7	 02 04 00 00 01 00 00	// (eleje) hatulja



  273 * 4	 01 04 01 02
  274 sprites/peron1.pcx 8bpp 181 1 44 37 -30 -17 normal chunked
  275 sprites/peron1.pcx 8bpp 181 39 44 37 -12 -17 normal chunked

  276 * 7	 02 04 01 00 01 00 00	// hatulja



  277 * 4	 01 04 01 04
  278 sprites/peron1.pcx 8bpp 1 1 44 37 -28 -17 normal chunked
  279 sprites/peron1.pcx 8bpp 1 39 44 37 -12 -17 normal chunked
  280 sprites/peron1.pcx 8bpp 1 77 44 37 -30 -17 normal chunked
  281 sprites/peron1.pcx 8bpp 1 115 44 37 -12 -17 normal chunked

  282 * 7	 02 04 02 00 01 00 00	// objektumok


//   00 * 00	02 04 01 00 01 01 00	// hatulja
//   00 * 00	02 04 01 00 01 00 00	// hatulja

	// lampas randomizaciok
  283 * 11	 02 04 B0
			80 00						// 80 azaz random object, 00, azaz nincs random trigger
			10							// szerintem ez kotelezoen ennyi
			02							// hany darab random lehetosegunk van
			01 00						// Action2 azonositoja minden egyes lehetosegnek kulon
			02 00


// ez a masodik lekerdezes, ha az eszaki vege van, akkor egybol betolti a 00-s sprite-ot, egyebken a harmadik lekerdezesre (10) ugrik
  284 * 14	 02 04 A1
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			00							// shift eltolas
			0F							// maszkolas
			01							// hany darab variacio van
			00 00 00 00					// 02 00 actione-re ugorjon, ha 00 min es 00 max range kozott van
			B0 00						// ha nincs egyezes, akkor ide ugorjon

// callback handler for normal graphics (non-build menu)
// ez az elso lekerdezes, ezzel kerdezem kezdem el a betoltendo  lekerdezeseket
  285 * 17	 02 04 A0
			85							// get word
			0C							// check if callback
			00
			FF FF
			01							// hany range
			00							// ennyi legyen, ha 14-es callback van
			80							// elvalaszto
			14 00	14 00				// Set to use during callback 14, tehat ha 14-es min es 14-es max callback van.
			A1 00						// else graphics Set

// callback handler for build menu
// switch between callback and graphics branches
  286 * 17	 02 04 C0					// Set-ID C0
			85 0C 00 FF FF				// get word, check if callback
			01							// one range
			00 80 14 00 14 00			// use layouts 06/07 during callback 14
			02 00						// menu grafika....

//-1 * -1    02 0F 00 42
//           \dx 0        \wx02                    10       // Draw groundsprite from register 0x10.
//           \dx 80000000 \wx20  00 00 00 10 10 30 11       // Draw building sprite at z-postion from register 0x11.
//           \dx 80000001 \wx01  00 00 80          12       // Draw snow-overlay relative to building sprite, but only if register 0x12 is zero.

  287 * 37	 02 04 D0 81
					7E 40 20 FF                           // Get slope offset from procedure 40
             \2sto  1A    20 10                           // Store in register 0x10
             \2rst  7E 41 20 0F                           // Add climate offset from procedure 41
             \2sto  1A    20 11                           // Store in register 0x10
             \2rst  7E 42 20 0F                           // Get height offset in the middle of the tile
             \2sto  1A    20 12                           // Store in register 0x11

//             \2rst  62 00 2C 01                           // Test snow bit, 1 if snowy, 0 if not
//             \2sto  1A    00 12                           // Store in register 0x12

            00
                00 00	  B0 00                           // always procede at 00
                A0 00


//-1 * -1    03 0F 01 ?? \b 0 00                            // always procede at 00

  288 * 10	 03 04 01 FE
   01									// hany darab kulonbozo cargo
   FF C0 00								// FF elvileg a menu hivasa, ezt olvastam...
   D0 00								// ha nem menu, akkor A0 action2-re



  289 * 12	 04 04 FF 01 FE C5 "TESZT" 00
