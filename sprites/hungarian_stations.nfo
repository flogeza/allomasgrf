// Automatically generated by GRFCODEC. Do not modify!
// (Info version 32)
// Escapes: 2+ 2- 2< 2> 2u< 2u> 2/ 2% 2u/ 2u% 2* 2& 2| 2^ 2sto = 2s 2rst = 2r 2psto 2ror = 2rot 2cmp 2ucmp 2<< 2u>> 2>>
// Escapes: 71 70 7= 7! 7< 7> 7G 7g 7gG 7GG 7gg 7c 7C
// Escapes: D= = DR D+ = DF D- = DC Du* = DM D* = DnF Du<< = DnC D<< = DO D& D| Du/ D/ Du% D%
// Format: spritenum imagefile depth xpos ypos xsize ysize xrel yrel zoom flags
    0 * 4	 C4 00 00 00
    1 * 39	 14 "CINFOTURL_" 7F "http:valami.hu/megvalami" 00 00 00				// url cim
    2 * 19	 14 "CINFOBVRSN" 04 00 01 00 00 00 00 00							// versio szama
    3 * 19	 14 "CINFOBMINV" 04 00 01 00 00 00 00 00							// minimum kompatibilis verzio szama
    4 * 16	 14 "CINFOBPALS" 01 00 57 00 00										// milyen szin palettat hasznaltunk
    5 * 50	 08 07 "FK" 00 00													// grf ID
				"Hungarian stations" 00											// grf neve
				"Ez egy kis" 0D 98 "rovid leiras" 00							// grf leirasa, a leirasban ha minden igaz hasznalhato a 0D mint sortores, a 98 talan behuzas

// 1420-as sorszamu alap sprite a beton sprite



//******************************************************************************************************************************************************//
//																																						//
//																	PERONOK																				//
//																																						//
//******************************************************************************************************************************************************//




//**************************************//
//					Peron 1a			//
//**************************************//


    6 * 436	 00 04 04 01 05 08 "PKS1"
//			11 00 14 FF 15 FF
			0C FE
			0B 03	// custom sprite layout
//			13 01	// elvileg ilyenkor lehet kiszamitani a groundot

			09 1C	// ez mar a konkret tile-okat jelenti, hogy hany darab van belole


		// 00
			// menu grafika
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			// menu grafika
			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 01
			// egyeduli peron
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			// egyeduli peron
			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 02
			// a hatulja, kopott 1 (eszakrol)
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			// b hatulja
			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 03
			// a hatulja, kopott 2 (eszakrol)
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			// b hatulja
			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80


		// 04
			// a nem kopott kozepe
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			// b sima kozepe
			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 05
			// a kopott kozepe 1
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			// b sima kozepe
			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 06
			// a kopott kozepe 2
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			// b sima kozepe
			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 07
			// a eleje
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			// b eleje
			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 08
			// 1a eleje
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			// 1b eleje
			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80


		// kozepso elemek
		// 09, lampas, viragladas
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 0A, lampas, kukas
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 0B, pados, viragladas
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 0C, lampas, pados
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 0D, lampas, kukas, pados
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

    7 * 4	 01 04 0E 02

	// menu grafika
    8 sprites/peron1a.pcx 8bpp 45 0 44 37 -32 -16 normal chunked
    9 sprites/peron1a.pcx 8bpp 45 38 44 37 -11 -16 normal chunked

	// egyeduli peron
   10 sprites/peron1.pcx 8bpp 181 77 44 37 -32 -15 normal chunked
   11 sprites/peron1.pcx 8bpp 181 115 44 37 -10 -15 normal chunked

	// eszakrol az elso (hatulja)
	// kopott 1
   12 sprites/peron1.pcx 8bpp 91 1 44 37 -34 -14 normal chunked
   13 sprites/peron1.pcx 8bpp 91 39 44 37 -8 -14 normal chunked
	// kopott 2
   14 sprites/peron1.pcx 8bpp 136 1 44 37 -34 -14 normal chunked
   15 sprites/peron1.pcx 8bpp 136 39 44 37 -8 -14 normal chunked

	// ures kozepso
	// nem kopott
   16 sprites/peron1.pcx 8bpp 181 1 44 37 -30 -17 normal chunked
   17 sprites/peron1.pcx 8bpp 181 39 44 37 -12 -17 normal chunked
	// kopott 1
   18 sprites/peron1.pcx 8bpp 91 77 44 37 -30 -17 normal chunked
   19 sprites/peron1.pcx 8bpp 91 115 44 37 -12 -17 normal chunked
	// kopott 2
   20 sprites/peron1.pcx 8bpp 136 77 44 37 -30 -17 normal chunked
   21 sprites/peron1.pcx 8bpp 136 115 44 37 -12 -17 normal chunked

	// eleje (delro)
	// kopott 1
   22 sprites/peron1.pcx 8bpp 1 1 44 37 -28 -17 normal chunked
   23 sprites/peron1.pcx 8bpp 1 39 44 37 -12 -17 normal chunked
	// kopott 2
   24 sprites/peron1.pcx 8bpp 46 1 44 37 -28 -17 normal chunked
   25 sprites/peron1.pcx 8bpp 46 39 44 37 -12 -17 normal chunked

   // kozepso kozos spiretok
	// lampas, viragladas
   26 sprites/peron1.pcx 8bpp 1 77 44 37 -30 -17 normal chunked
   27 sprites/peron1.pcx 8bpp 1 115 44 37 -12 -17 normal chunked
	// lampas, kukas
   28 sprites/peron1.pcx 8bpp 46 77 44 37 -30 -17 normal chunked
   29 sprites/peron1.pcx 8bpp 46 115 44 37 -12 -17 normal chunked

   // kozepso sajat spiretok
	// pados, viragladas
   30 sprites/peron1a.pcx 8bpp 90 0 44 37 -30 -17 normal chunked
   31 sprites/peron1a.pcx 8bpp 90 38 44 37 -12 -17 normal chunked
	// lampas, pados
   32 sprites/peron1a.pcx 8bpp 0 0 44 37 -30 -17 normal chunked
   33 sprites/peron1a.pcx 8bpp 0 38 44 37 -12 -17 normal chunked
	// lampas, kukas, pados
   34 sprites/peron1a.pcx 8bpp 45 0 44 37 -30 -17 normal chunked
   35 sprites/peron1a.pcx 8bpp 45 38 44 37 -12 -17 normal chunked




// betoltendo vegso spriteok, innen kell esetleg szurni cargo szerint...
   36 * 7	 02 04 00 00 01 00 00	// menu grafika
   37 * 7	 02 04 01 00 01 01 00	// egyeduli peron
   38 * 7	 02 04 02 00 01 02 00	// kopott hatulja 1
   39 * 7	 02 04 03 00 01 03 00	// kopott hatulja 2
   40 * 7	 02 04 04 00 01 04 00	// nem kopott kozepe
   41 * 7	 02 04 05 00 01 05 00	// kopott kozepe 1
   42 * 7	 02 04 06 00 01 06 00	// kopott kozepe 2
   43 * 7	 02 04 07 00 01 07 00	// kopott eleje 1
   44 * 7	 02 04 08 00 01 08 00	// kopott eleje 2

   // objektumos kozepek
   45 * 7	 02 04 09 00 01 09 00	// lampas, viragladas
   46 * 7	 02 04 0A 00 01 0A 00	// lampas, kukas
   47 * 7	 02 04 0B 00 01 0B 00	// pados, viragladas
   48 * 7	 02 04 0C 00 01 0C 00	// lampas, pados
   49 * 7	 02 04 0D 00 01 0D 00	// lampas, kukas, pados




// full kozepso lekerdezese....
//	138 * 18	 02 04 80 81 // check for crane
//	49 20 0F
//	\2- 49 04 0F
//	\b1
//	\wx40 00 01 // tile is in the middle of the platform, build crane
//	\wx8008 // no crane

// kisebb egyenlo mint 4 a paltform length
//	139 * 14	 02 04 80 81 // check for crane
//	49 10 0F // total platform length
//	\b1
//	\wx8008 00 04 // for platforms <= length 4, no crane
//	\wx80


// eszaki vegenek randomizacioja
   50 * 11	 02 04 91
			80 00						// 80 azaz random object, 00, azaz nincs random trigger
			10							// szerintem ez kotelezoen ennyi
			02							// hany darab random lehetosegunk van
			02 00						// Action2 azonositoja minden egyes lehetosegnek kulon
			03 00						// ezzel a modszerrel 1:1 eselye, hogy melyik lesz....

// deli vegenek randomizacioja
   51 * 11	 02 04 92
			80 00						// 80 azaz random object, 00, azaz nincs random trigger
			10							// szerintem ez kotelezoen ennyi
			02							// hany darab random lehetosegunk van
			07 00						// Action2 azonositoja minden egyes lehetosegnek kulon
			08 00						// ezzel a modszerrel 1:1 eselye, hogy melyik lesz....

// kozepso lekerdezesek.....
// minden harmadik mezore legyen igaz az eszaki vegetol szamitva, ez annak a feltetele, hogy harmadik-e...
	// sima randomizaciok
   52 * 23	 02 04 B2
			80 00						// 80 azaz random object, 00, azaz nincs random trigger
			10							// szerintem ez kotelezoen ennyi, azt irja, hogy "first random bit to use", 10 volt itt...
			08							// hany darab random lehetosegunk van
			04 00						// Action2 azonositoja minden egyes lehetosegnek kulon
			04 00			// 4 a nem kopott, ures
			04 00
			04 00
			05 00			// 1 a kopott 1
			06 00			// 1 a kopott 2
			0B 00			// ketszer van a pados, viragladas
			0B 00

	// lampas randomizaciok
   53 * 15	 02 04 B1
			80 00						// 80 azaz random object, 00, azaz nincs random trigger
			10							// szerintem ez kotelezoen ennyi
			04							// hany darab random lehetosegunk van
			09 00						// Action2 azonositoja minden egyes lehetosegnek kulon
			0A 00
			0C 00
			0D 00

	// negyedik lekerdezes, ami mar nem a szelso elemeket randomizalja
	// itt konkretan szetvalasztom, hogy minden harmadik lampas elem, a tobbi meg nem :D
   54 * 16	 02 04 B0
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			80							// azaz shift & modulo
			F0							// azaz a felso ertekre szurunk, igy alulrol minden harmadikat keressuk...
			01							// hozzaadas, azert adok hozza 1-et, mert 00 a kezdo sorszam, es ugy 3. helyett 4.re adja...
			03							// harommal osztunk, vagy mi
			01							// 1 variacio van
			B1 00 00 00					// ha 0 az eredmeny, akkor lampas randomizacio
			B2 00						// egyebkent sima randmizacio lesz...



// ez a harmadik lekerdezes, ha a deli vege van, akkor betolti azt, egyebkent a kozepso lekerdezesekre ugrik...
   55 * 14	 02 04 A2
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			00							// shift eltolas, hany bittel arrebb szerenem lekerdezni, pl 0C az 12 bit, azaz Lc bitek
			F0							// maszkolas, ha F, akkor az erdekel minket
			01							// hany darab variacio van
			92 00 00 00					// 00 00 actione-re ugorjon, ha 00 es 00 range kozott van
			B0 00						// ha nincs egyezes, akkor ide ugorjon

// ez a masodik lekerdezes, ha az eszaki vege van, akkor egybol betolti a 00-s sprite-ot, egyebkent a harmadik lekerdezesre ugrik
   56 * 14	 02 04 A1
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			00							// shift eltolas
			0F							// maszkolas
			01							// hany darab variacio van
			91 00 00 00					// 91 00 actione-re ugorjon, ha 00 min es 00 max range kozott van
			A2 00						// ha nincs egyezes, akkor ide ugorjon

// ez az elso lekerdezes, ezzel kerdezem le
   57 * 14	 02 04 A0
			81 49						// 81 lower byte, 40 type, Platform info and relative position
			10							// shift eltolas, hany bittel arrebb szerenem lekerdezni, pl 0C az 12 bit, azaz Lc bitek
			0F							// maszkolas
			01							// hany darab variacio van
			01 00 01 01					// 01 00 actione-re ugorjon, ha 01 min es 01 max range kozott van
			A1 00						// ha nincs egyezes, akkor ide ugorjon



// ez meg nem lekerdezes, hanem calback elvalaszto
   58 * 17	 02 04 AA
			85							// get word
			0C							// check if callback
			00
			FF FF
			01							// hany range
			00							// ennyi legyen, ha 14-es callback van
			00							// elvalaszto, vagyis nem is, vagy nem tudom, 80 volt itt elotte, de igy most majdnem jo...
			14 00	14 00				// Set to use during callback 14, tehat ha 14-es min es 14-es max callback van.
			A0 00						// else graphics Set

////// make available from 1950
//  527 * 14    02 04
//         FA                   // setID
//         81                  // type
//         01 00 FF
//         01                  // numRanges
//          00 80 00 00            // XX - 1920. So for 1950 = 00 80 00 1E
//          01 80                  // allow

// callback handler for build menu
// switch between callback and graphics branches
   59 * 17	 02 04 C0					// Set-ID C0
			85 0C 00 FF FF				// get word, check if callback
			01							// one range
//			FA 00 13 00 13 00			// lekerdezzuk, hogy elerheto-e, tehat a 13 callback az elerhetoseg???
			00 80 14 00 14 00			// use layouts 06/07 during callback 14
			00 00						// menu grafika....

//   00 * 00	03 04 01 05 00 A0 00		// igy nincs cargo azonositas, hanem azonnal ugrunk a A0 action2-re
   60 * 10	 03 04 01 05
   01									// hany darab kulonbozo cargo
   FF C0 00								// FF elvileg a menu hivasa, ezt olvastam...
//   FE 00 00								// FE, ez a kozepe mezore vagy a kozepehez kepest eszakra levo mezore a grafikat hivja meg...
   AA 00								// ha nem menu, akkor AA action2-re




//**************************************//
//					Peron 1b			//
//**************************************//


   61 * 406	 00 04 04 01 06 08 "PKS1"
//			11 00 14 FF 15 FF
			0C FE
			0B 03	// custom sprite layout
//			13 01	// elvileg ilyenkor lehet kiszamitani a groundot

				09 1A	// ez mar a konkret tile-okat jelenti, hogy hany darab van belole


		// 00
			// menu grafika
			F4 03 00 00
			00 0A 00	10 05 1F	2D 04 00 00
			80

			// menu grafika
			F3 03 00 00
			0A 00 00	05 10 1F	2E 04 00 00
			80

		// 01
			// egyeduli peron
			F4 03 00 00
			00 0A 00	10 05 1F	2D 04 00 00
			80

			// egyeduli peron
			F3 03 00 00
			0A 00 00	05 10 1F	2E 04 00 00
			80

		// 02
			// a hatulja, kopott 1 (eszakrol)
			F4 03 00 00
			00 0A 00	10 05 1F	2D 04 00 00
			80

			// b hatulja
			F3 03 00 00
			0A 00 00	05 10 1F	2E 04 00 00
			80

		// 03
			// a hatulja, kopott 2 (eszakrol)
			F4 03 00 00
			00 0A 00	10 05 1F	2D 04 00 00
			80

			// b hatulja
			F3 03 00 00
			0A 00 00	05 10 1F	2E 04 00 00
			80


		// 04
			// a nem kopott kozepe
			F4 03 00 00
			00 0A 00	10 05 1F	2D 04 00 00
			80

			// b sima kozepe
			F3 03 00 00
			0A 00 00	05 10 1F	2E 04 00 00
			80

		// 05
			// a kopott kozepe 1
			F4 03 00 00
			00 0A 00	10 05 1F	2D 04 00 00
			80

			// b sima kozepe
			F3 03 00 00
			0A 00 00	05 10 1F	2E 04 00 00
			80

		// 06
			// a kopott kozepe 2
			F4 03 00 00
			00 0A 00	10 05 1F	2D 04 00 00
			80

			// b sima kozepe
			F3 03 00 00
			0A 00 00	05 10 1F	2E 04 00 00
			80

		// 07
			// a eleje
			F4 03 00 00
			00 0A 00	10 05 1F	2D 04 00 00
			80

			// b eleje
			F3 03 00 00
			0A 00 00	05 10 1F	2E 04 00 00
			80

		// 08
			// 1a eleje
			F4 03 00 00
			00 0A 00	10 05 1F	2D 04 00 00
			80

			// 1b eleje
			F3 03 00 00
			0A 00 00	05 10 1F	2E 04 00 00
			80


		// kozepso elemek
		// 09, lampas, viragladas
			F4 03 00 00
			00 0A 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			0A 00 00	05 10 1F	2E 04 00 00
			80

		// 0A, lampas, kukas
			F4 03 00 00
			00 0A 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			0A 00 00	05 10 1F	2E 04 00 00
			80

		// 0B, pados, viragladas
			F4 03 00 00
			00 0A 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			0A 00 00	05 10 1F	2E 04 00 00
			80

		// 0C, lampas, pados
			F4 03 00 00
			00 0A 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			0A 00 00	05 10 1F	2E 04 00 00
			80


   62 * 4	 01 04 0D 02

	// menu grafika
   63 sprites/peron1b.pcx 8bpp 0 0 44 37 -30 -15 normal chunked // -10, -5
   64 sprites/peron1b.pcx 8bpp 0 38 44 37 -12 -15 normal chunked

	// egyeduli peron
   65 sprites/peron1.pcx 8bpp 181 77 44 37 -31 -15 normal chunked
   66 sprites/peron1.pcx 8bpp 181 115 44 37 -11 -14 normal chunked

	// eszakrol az elso (hatulja)
	// kopott 1
   67 sprites/peron1.pcx 8bpp 91 1 44 37 -37 -12 normal chunked
   68 sprites/peron1.pcx 8bpp 91 39 44 37 -7 -12 normal chunked
	// kopott 2
   69 sprites/peron1.pcx 8bpp 136 1 44 37 -37 -12 normal chunked
   70 sprites/peron1.pcx 8bpp 136 39 44 37 -7 -12 normal chunked

	// ures kozepso
	// nem kopott
   71 sprites/peron1.pcx 8bpp 181 1 44 37 -33 -15 normal chunked
   72 sprites/peron1.pcx 8bpp 181 39 44 37 -11 -15 normal chunked
	// kopott 1
   73 sprites/peron1.pcx 8bpp 91 77 44 37 -33 -15 normal chunked
   74 sprites/peron1.pcx 8bpp 91 115 44 37 -11 -15 normal chunked
	// kopott 2
   75 sprites/peron1.pcx 8bpp 136 77 44 37 -33 -15 normal chunked
   76 sprites/peron1.pcx 8bpp 136 115 44 37 -11 -15 normal chunked

	// eleje (delro)
	// kopott 1
   77 sprites/peron1.pcx 8bpp 1 1 44 37 -31 -15 normal chunked
   78 sprites/peron1.pcx 8bpp 1 39 44 37 -11 -15 normal chunked
	// kopott 2
   79 sprites/peron1.pcx 8bpp 46 1 44 37 -31 -15 normal chunked
   80 sprites/peron1.pcx 8bpp 46 39 44 37 -11 -15 normal chunked

   // kozepso kozos spiretok
	// lampas, viragladas
   81 sprites/peron1.pcx 8bpp 1 77 44 37 -33 -15 normal chunked
   82 sprites/peron1.pcx 8bpp 1 115 44 37 -11 -15 normal chunked
	// lampas, kukas
   83 sprites/peron1.pcx 8bpp 46 77 44 37 -33 -15 normal chunked
   84 sprites/peron1.pcx 8bpp 46 115 44 37 -11 -15 normal chunked

   // kozepso sajat spiretok
	// pados, viragladas
   85 sprites/peron1b.pcx 8bpp 0 0 44 37 -33 -15 normal chunked
   86 sprites/peron1b.pcx 8bpp 0 38 44 37 -11 -15 normal chunked
	// lampas, pados
   87 sprites/peron1b.pcx 8bpp 45 0 44 37 -33 -15 normal chunked
   88 sprites/peron1b.pcx 8bpp 45 38 44 37 -11 -15 normal chunked


// betoltendo vegso spriteok, innen kell esetleg szurni cargo szerint...
   89 * 7	 02 04 00 00 01 00 00	// menu grafika
   90 * 7	 02 04 01 00 01 01 00	// egyeduli peron
   91 * 7	 02 04 02 00 01 02 00	// kopott hatulja 1
   92 * 7	 02 04 03 00 01 03 00	// kopott hatulja 2
   93 * 7	 02 04 04 00 01 04 00	// nem kopott kozepe
   94 * 7	 02 04 05 00 01 05 00	// kopott kozepe 1
   95 * 7	 02 04 06 00 01 06 00	// kopott kozepe 2
   96 * 7	 02 04 07 00 01 07 00	// kopott eleje 1
   97 * 7	 02 04 08 00 01 08 00	// kopott eleje 2

   // objektumos kozepek
   98 * 7	 02 04 09 00 01 09 00	// lampas, viragladas
   99 * 7	 02 04 0A 00 01 0A 00	// lampas, kukas
  100 * 7	 02 04 0B 00 01 0B 00	// pados, viragladas
  101 * 7	 02 04 0C 00 01 0C 00	// lampas, pados




// full kozepso lekerdezese....
//	138 * 18	 02 04 80 81 // check for crane
//	49 20 0F
//	\2- 49 04 0F
//	\b1
//	\wx40 00 01 // tile is in the middle of the platform, build crane
//	\wx8008 // no crane

// kisebb egyenlo mint 4 a paltform length
//	139 * 14	 02 04 80 81 // check for crane
//	49 10 0F // total platform length
//	\b1
//	\wx8008 00 04 // for platforms <= length 4, no crane
//	\wx80


// eszaki vegenek randomizacioja
  102 * 11	 02 04 91
			80 00						// 80 azaz random object, 00, azaz nincs random trigger
			10							// szerintem ez kotelezoen ennyi
			02							// hany darab random lehetosegunk van
			02 00						// Action2 azonositoja minden egyes lehetosegnek kulon
			03 00						// ezzel a modszerrel 1:1 eselye, hogy melyik lesz....

// deli vegenek randomizacioja
  103 * 11	 02 04 92
			80 00						// 80 azaz random object, 00, azaz nincs random trigger
			10							// szerintem ez kotelezoen ennyi
			02							// hany darab random lehetosegunk van
			07 00						// Action2 azonositoja minden egyes lehetosegnek kulon
			08 00						// ezzel a modszerrel 1:1 eselye, hogy melyik lesz....

// kozepso lekerdezesek.....
// minden harmadik mezore legyen igaz az eszaki vegetol szamitva, ez annak a feltetele, hogy harmadik-e...
	// sima randomizaciok
  104 * 23	 02 04 B2
			80 00						// 80 azaz random object, 00, azaz nincs random trigger
			10							// szerintem ez kotelezoen ennyi, azt irja, hogy "first random bit to use", 10 volt itt...
			08							// hany darab random lehetosegunk van
			04 00						// Action2 azonositoja minden egyes lehetosegnek kulon
			04 00			// 4 a nem kopott, ures
			04 00
			04 00
			05 00			// 1 a kopott 1
			06 00			// 1 a kopott 2
			0B 00			// ketszer van a pados, viragladas
			0B 00

	// lampas randomizaciok
  105 * 15	 02 04 B1
			80 00						// 80 azaz random object, 00, azaz nincs random trigger
			10							// szerintem ez kotelezoen ennyi
			04							// hany darab random lehetosegunk van
			09 00						// Action2 azonositoja minden egyes lehetosegnek kulon
			0C 00			// a pados itt direkt van ketszer
			0A 00
			0C 00

	// negyedik lekerdezes, ami mar nem a szelso elemeket randomizalja
	// itt konkretan szetvalasztom, hogy minden harmadik lampas elem, a tobbi meg nem :D
  106 * 16	 02 04 B0
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			80							// azaz shift & modulo
			F0							// azaz a felso ertekre szurunk, igy alulrol minden harmadikat keressuk...
			01							// hozzaadas, azert adok hozza 1-et, mert 00 a kezdo sorszam, es ugy 3. helyett 4.re adja...
			03							// harommal osztunk, vagy mi
			01							// 1 variacio van
			B1 00 00 00					// ha 0 az eredmeny, akkor lampas randomizacio
			B2 00						// egyebkent sima randmizacio lesz...



// ez a harmadik lekerdezes, ha a deli vege van, akkor betolti azt, egyebkent a kozepso lekerdezesekre ugrik...
  107 * 14	 02 04 A2
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			00							// shift eltolas, hany bittel arrebb szerenem lekerdezni, pl 0C az 12 bit, azaz Lc bitek
			F0							// maszkolas, ha F, akkor az erdekel minket
			01							// hany darab variacio van
			92 00 00 00					// 00 00 actione-re ugorjon, ha 00 es 00 range kozott van
			B0 00						// ha nincs egyezes, akkor ide ugorjon

// ez a masodik lekerdezes, ha az eszaki vege van, akkor egybol betolti a 00-s sprite-ot, egyebkent a harmadik lekerdezesre ugrik
  108 * 14	 02 04 A1
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			00							// shift eltolas
			0F							// maszkolas
			01							// hany darab variacio van
			91 00 00 00					// 91 00 actione-re ugorjon, ha 00 min es 00 max range kozott van
			A2 00						// ha nincs egyezes, akkor ide ugorjon


// ez az elso lekerdezes, ezzel kerdezem le
  109 * 14	 02 04 A0
			81 49						// 81 lower byte, 40 type, Platform info and relative position
			10								// shift eltolas, hany bittel arrebb szerenem lekerdezni, pl 0C az 12 bit, azaz Lc bitek
			0F							// maszkolas
			01							// hany darab variacio van
			01 00 01 01					// 01 00 actione-re ugorjon, ha 01 min es 01 max range kozott van
			A1 00						// ha nincs egyezes, akkor ide ugorjon



// ez meg nem lekerdezes, hanem calback elvalaszto
  110 * 17	 02 04 AA
			85							// get word
			0C							// check if callback
			00
			FF FF
			01							// hany range
			00							// ennyi legyen, ha 14-es callback van
			00							// elvalaszto, vagyis nem is, vagy nem tudom, 80 volt itt elotte, de igy most majdnem jo...
			14 00	14 00				// Set to use during callback 14, tehat ha 14-es min es 14-es max callback van.
			A0 00						// else graphics Set

////// make available from 1950
//  527 * 14    02 04
//         FA                   // setID
//         81                  // type
//         01 00 FF
//         01                  // numRanges
//          00 80 00 00            // XX - 1920. So for 1950 = 00 80 00 1E
//          01 80                  // allow

// callback handler for build menu
// switch between callback and graphics branches
  111 * 17	 02 04 C0					// Set-ID C0
			85 0C 00 FF FF				// get word, check if callback
			01							// one range
//			FA 00 13 00 13 00			// lekerdezzuk, hogy elerheto-e, tehat a 13 callback az elerhetoseg???
			00 80 14 00 14 00			// use layouts 06/07 during callback 14
			00 00						// menu grafika....

//   00 * 00	03 04 01 05 00 A0 00		// igy nincs cargo azonositas, hanem azonnal ugrunk a A0 action2-re
  112 * 10	 03 04 01 06
   01									// hany darab kulonbozo cargo
   FF C0 00								// FF elvileg a menu hivasa, ezt olvastam...
//   FE 00 00								// FE, ez a kozepe mezore vagy a kozepehez kepest eszakra levo mezore a grafikat hivja meg...
   AA 00								// ha nem menu, akkor AA action2-re




//**************************************//
//					Peron 2a			//
//**************************************//


  113 * 316	 00 04 04 01 07 08 "PKS1"
//			11 00 14 FF 15 FF
			0C FE
			0B 03	// custom sprite layout
//			13 01	// elvileg ilyenkor lehet kiszamitani a groundot

			09 14	// ez mar a konkret tile-okat jelenti, hogy hany darab van belole


		// 00
			// menu grafika
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			// menu grafika
			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 01
			// egyeduli peron
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			// egyeduli peron
			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 02
			// a hatulja (eszakrol)
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			// b hatulja
			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80


		// 03
			// a nem kopott kozepe
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			// b sima kozepe
			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 04
			// a eleje
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			// b eleje
			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// kozepso elemek
		// 05, lampas, viragladas
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 06, lampas, kukas
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 07, pados, viragladas
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 08, lampas, pados
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

		// 09, lampas, kukas, pados
			F4 03 00 00
			00 00 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			00 00 00	05 10 1F	2E 04 00 00
			80

  114 * 4	 01 04 0A 02

	// menu grafika
  115 sprites/peron2a.pcx 8bpp 45 0 44 39 -32 -18 normal chunked
  116 sprites/peron2a.pcx 8bpp 45 40 44 39 -10 -18 normal chunked

	// egyeduli peron
  117 sprites/peron2.pcx 8bpp 91 77 44 39 -32 -18 normal chunked
  118 sprites/peron2.pcx 8bpp 91 117 44 39 -10 -18 normal chunked

	// eszakrol az elso (hatulja)
  119 sprites/peron2.pcx 8bpp 46 1 44 37 -33 -15 normal chunked
  120 sprites/peron2.pcx 8bpp 46 39 44 37 -10 -16 normal chunked

	// ures kozepso
	// nem kopott
  121 sprites/peron2.pcx 8bpp 91 1 44 37 -33 -15 normal chunked
  122 sprites/peron2.pcx 8bpp 91 39 44 37 -10 -16 normal chunked

	// eleje (delro)
  123 sprites/peron2.pcx 8bpp 1 1 44 37 -33 -15 normal chunked
  124 sprites/peron2.pcx 8bpp 1 39 44 37 -10 -16 normal chunked

   // kozepso kozos spiretok
	// lampas, viragladas
  125 sprites/peron2.pcx 8bpp 1 77 44 39 -33 -17 normal chunked
  126 sprites/peron2.pcx 8bpp 1 117 44 39 -10 -18 normal chunked
	// lampas, kukas
  127 sprites/peron2.pcx 8bpp 46 77 44 39 -33 -17 normal chunked
  128 sprites/peron2.pcx 8bpp 46 117 44 39 -10 -18 normal chunked

   // kozepso sajat spiretok
	// pados, viragladas
  129 sprites/peron2a.pcx 8bpp 90 0 44 39 -33 -17 normal chunked
  130 sprites/peron2a.pcx 8bpp 90 40 44 39 -10 -18 normal chunked
	// lampas, pados
  131 sprites/peron2a.pcx 8bpp 0 0 44 39 -33 -17 normal chunked
  132 sprites/peron2a.pcx 8bpp 0 40 44 39 -10 -18 normal chunked
	// lampas, kukas, pados
  133 sprites/peron2a.pcx 8bpp 45 0 44 39 -33 -17 normal chunked
  134 sprites/peron2a.pcx 8bpp 45 40 44 39 -10 -18 normal chunked




// betoltendo vegso spriteok, innen kell esetleg szurni cargo szerint...
  135 * 7	 02 04 00 00 01 00 00	// menu grafika
  136 * 7	 02 04 01 00 01 01 00	// egyeduli peron
  137 * 7	 02 04 02 00 01 02 00	// hatulja
  138 * 7	 02 04 03 00 01 03 00	// nem kopott kozepe
  139 * 7	 02 04 04 00 01 04 00	// eleje

   // objektumos kozepek
  140 * 7	 02 04 05 00 01 05 00	// lampas, viragladas
  141 * 7	 02 04 06 00 01 06 00	// lampas, kukas
  142 * 7	 02 04 07 00 01 07 00	// pados, viragladas
  143 * 7	 02 04 08 00 01 08 00	// lampas, pados
  144 * 7	 02 04 09 00 01 09 00	// lampas, kukas, pados



// full kozepso lekerdezese....
//	138 * 18	 02 04 80 81 // check for crane
//	49 20 0F
//	\2- 49 04 0F
//	\b1
//	\wx40 00 01 // tile is in the middle of the platform, build crane
//	\wx8008 // no crane

// kisebb egyenlo mint 4 a paltform length
//	139 * 14	 02 04 80 81 // check for crane
//	49 10 0F // total platform length
//	\b1
//	\wx8008 00 04 // for platforms <= length 4, no crane
//	\wx80


// kozepso lekerdezesek.....
// minden harmadik mezore legyen igaz az eszaki vegetol szamitva, ez annak a feltetele, hogy harmadik-e...
	// sima randomizaciok
  145 * 15	 02 04 B2
			80 00						// 80 azaz random object, 00, azaz nincs random trigger
			10							// szerintem ez kotelezoen ennyi, azt irja, hogy "first random bit to use", 10 volt itt...
			04							// hany darab random lehetosegunk van
			03 00						// Action2 azonositoja minden egyes lehetosegnek kulon
			03 00			// 3 a nem kopott, ures
			03 00
			07 00			// pados, viragladas

	// lampas randomizaciok
  146 * 15	 02 04 B1
			80 00						// 80 azaz random object, 00, azaz nincs random trigger
			10							// szerintem ez kotelezoen ennyi
			04							// hany darab random lehetosegunk van
			05 00						// Action2 azonositoja minden egyes lehetosegnek kulon
			06 00
			08 00
			09 00

	// negyedik lekerdezes, ami mar nem a szelso elemeket randomizalja
	// itt konkretan szetvalasztom, hogy minden harmadik lampas elem, a tobbi meg nem :D
  147 * 16	 02 04 B0
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			80							// azaz shift & modulo
			F0							// azaz a felso ertekre szurunk, igy alulrol minden harmadikat keressuk...
			01							// hozzaadas, azert adok hozza 1-et, mert 00 a kezdo sorszam, es ugy 3. helyett 4.re adja...
			03							// harommal osztunk, vagy mi
			01							// 1 variacio van
			B1 00 00 00					// ha 0 az eredmeny, akkor lampas randomizacio
			B2 00						// egyebkent sima randmizacio lesz...



// ez a harmadik lekerdezes, ha a deli vege van, akkor betolti azt, egyebkent a kozepso lekerdezesekre ugrik...
  148 * 14	 02 04 A2
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			00							// shift eltolas, hany bittel arrebb szerenem lekerdezni, pl 0C az 12 bit, azaz Lc bitek
			F0							// maszkolas, ha F, akkor az erdekel minket
			01							// hany darab variacio van
			04 00 00 00					// 00 00 actione-re ugorjon, ha 00 es 00 range kozott van
			B0 00						// ha nincs egyezes, akkor ide ugorjon

// ez a masodik lekerdezes, ha az eszaki vege van, akkor egybol betolti a 00-s sprite-ot, egyebkent a harmadik lekerdezesre ugrik
  149 * 14	 02 04 A1
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			00							// shift eltolas
			0F							// maszkolas
			01							// hany darab variacio van
			02 00 00 00					// 91 00 actione-re ugorjon, ha 00 min es 00 max range kozott van
			A2 00						// ha nincs egyezes, akkor ide ugorjon

// ez az elso lekerdezes, ezzel kerdezem le
  150 * 14	 02 04 A0
			81 49						// 81 lower byte, 40 type, Platform info and relative position
			10							// shift eltolas, hany bittel arrebb szerenem lekerdezni, pl 0C az 12 bit, azaz Lc bitek
			0F							// maszkolas
			01							// hany darab variacio van
			01 00 01 01					// 01 00 actione-re ugorjon, ha 01 min es 01 max range kozott van
			A1 00						// ha nincs egyezes, akkor ide ugorjon



// ez meg nem lekerdezes, hanem calback elvalaszto
  151 * 17	 02 04 AA
			85							// get word
			0C							// check if callback
			00
			FF FF
			01							// hany range
			00							// ennyi legyen, ha 14-es callback van
			00							// elvalaszto, vagyis nem is, vagy nem tudom, 80 volt itt elotte, de igy most majdnem jo...
			14 00	14 00				// Set to use during callback 14, tehat ha 14-es min es 14-es max callback van.
			A0 00						// else graphics Set

////// make available from 1950
//  527 * 14    02 04
//         FA                   // setID
//         81                  // type
//         01 00 FF
//         01                  // numRanges
//          00 80 00 00            // XX - 1920. So for 1950 = 00 80 00 1E
//          01 80                  // allow

// callback handler for build menu
// switch between callback and graphics branches
  152 * 17	 02 04 C0					// Set-ID C0
			85 0C 00 FF FF				// get word, check if callback
			01							// one range
//			FA 00 13 00 13 00			// lekerdezzuk, hogy elerheto-e, tehat a 13 callback az elerhetoseg???
			00 80 14 00 14 00			// use layouts 06/07 during callback 14
			00 00						// menu grafika....

//   00 * 00	03 04 01 05 00 A0 00		// igy nincs cargo azonositas, hanem azonnal ugrunk a A0 action2-re
  153 * 10	 03 04 01 07
   01									// hany darab kulonbozo cargo
   FF C0 00								// FF elvileg a menu hivasa, ezt olvastam...
//   FE 00 00								// FE, ez a kozepe mezore vagy a kozepehez kepest eszakra levo mezore a grafikat hivja meg...
   AA 00								// ha nem menu, akkor AA action2-re




//**************************************//
//					Peron 2b			//
//**************************************//


  154 * 286	 00 04 04 01 08 08 "PKS1"
//			11 00 14 FF 15 FF
			0C FE
			0B 03	// custom sprite layout
//			13 01	// elvileg ilyenkor lehet kiszamitani a groundot

				09 12	// ez mar a konkret tile-okat jelenti, hogy hany darab van belole


		// 00
			// menu grafika
			F4 03 00 00
			00 0A 00	10 05 1F	2D 04 00 00
			80

			// menu grafika
			F3 03 00 00
			0A 00 00	05 10 1F	2E 04 00 00
			80

		// 01
			// egyeduli peron
			F4 03 00 00
			00 0A 00	10 05 1F	2D 04 00 00
			80

			// egyeduli peron
			F3 03 00 00
			0A 00 00	05 10 1F	2E 04 00 00
			80

		// 02
			// a hatulja, kopott (eszakrol)
			F4 03 00 00
			00 0A 00	10 05 1F	2D 04 00 00
			80

			// b hatulja
			F3 03 00 00
			0A 00 00	05 10 1F	2E 04 00 00
			80


		// 03
			// a nem kopott kozepe
			F4 03 00 00
			00 0A 00	10 05 1F	2D 04 00 00
			80

			// b sima kozepe
			F3 03 00 00
			0A 00 00	05 10 1F	2E 04 00 00
			80

		// 04
			// a eleje
			F4 03 00 00
			00 0A 00	10 05 1F	2D 04 00 00
			80

			// b eleje
			F3 03 00 00
			0A 00 00	05 10 1F	2E 04 00 00
			80


		// kozepso elemek
		// 05, lampas, viragladas
			F4 03 00 00
			00 0A 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			0A 00 00	05 10 1F	2E 04 00 00
			80

		// 06, lampas, kukas
			F4 03 00 00
			00 0A 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			0A 00 00	05 10 1F	2E 04 00 00
			80

		// 07, pados, viragladas
			F4 03 00 00
			00 0A 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			0A 00 00	05 10 1F	2E 04 00 00
			80

		// 08, lampas, pados
			F4 03 00 00
			00 0A 00	10 05 1F	2D 04 00 00
			80

			F3 03 00 00
			0A 00 00	05 10 1F	2E 04 00 00
			80


  155 * 4	 01 04 09 02

	// menu grafika
  156 sprites/peron2b.pcx 8bpp 0 0 44 39 -31 -17 normal chunked
  157 sprites/peron2b.pcx 8bpp 0 40 44 39 -11 -17 normal chunked

	// egyeduli peron
  158 sprites/peron2.pcx 8bpp 91 77 44 39 -33 -17 normal chunked
  159 sprites/peron2.pcx 8bpp 91 117 44 39 -11 -17 normal chunked

	// eszakrol az elso (hatulja)
  160 sprites/peron2.pcx 8bpp 46 1 44 37 -33 -15 normal chunked
  161 sprites/peron2.pcx 8bpp 46 39 44 37 -11 -15 normal chunked

	// ures kozepso
	// nem kopott
  162 sprites/peron2.pcx 8bpp 91 1 44 37 -33 -15 normal chunked
  163 sprites/peron2.pcx 8bpp 91 39 44 37 -11 -15 normal chunked

	// eleje (delro)
  164 sprites/peron2.pcx 8bpp 1 1 44 37 -33 -15 normal chunked
  165 sprites/peron2.pcx 8bpp 1 39 44 37 -11 -15 normal chunked

   // kozepso kozos spiretok
	// lampas, viragladas
  166 sprites/peron2.pcx 8bpp 1 77 44 39 -33 -17 normal chunked
  167 sprites/peron2.pcx 8bpp 1 117 44 39 -11 -17 normal chunked
	// lampas, kukas
  168 sprites/peron2.pcx 8bpp 46 77 44 39 -33 -17 normal chunked
  169 sprites/peron2.pcx 8bpp 46 117 44 39 -11 -17 normal chunked

   // kozepso sajat spiretok
	// pados, viragladas
  170 sprites/peron2b.pcx 8bpp 0 0 44 39 -33 -17 normal chunked
  171 sprites/peron2b.pcx 8bpp 0 40 44 39 -11 -17 normal chunked
	// lampas, pados
  172 sprites/peron2b.pcx 8bpp 45 0 44 39 -33 -17 normal chunked
  173 sprites/peron2b.pcx 8bpp 45 40 44 39 -11 -17 normal chunked


// betoltendo vegso spriteok, innen kell esetleg szurni cargo szerint...
  174 * 7	 02 04 00 00 01 00 00	// menu grafika
  175 * 7	 02 04 01 00 01 01 00	// egyeduli peron
  176 * 7	 02 04 02 00 01 02 00	// hatulja
  177 * 7	 02 04 03 00 01 03 00	// nem kopott kozepe
  178 * 7	 02 04 04 00 01 04 00	// eleje

   // objektumos kozepek
  179 * 7	 02 04 05 00 01 05 00	// lampas, viragladas
  180 * 7	 02 04 06 00 01 06 00	// lampas, kukas
  181 * 7	 02 04 07 00 01 07 00	// pados, viragladas
  182 * 7	 02 04 08 00 01 08 00	// lampas, pados



// full kozepso lekerdezese....
//	138 * 18	 02 04 80 81 // check for crane
//	49 20 0F
//	\2- 49 04 0F
//	\b1
//	\wx40 00 01 // tile is in the middle of the platform, build crane
//	\wx8008 // no crane

// kisebb egyenlo mint 4 a paltform length
//	139 * 14	 02 04 80 81 // check for crane
//	49 10 0F // total platform length
//	\b1
//	\wx8008 00 04 // for platforms <= length 4, no crane
//	\wx80


// kozepso lekerdezesek.....
// minden harmadik mezore legyen igaz az eszaki vegetol szamitva, ez annak a feltetele, hogy harmadik-e...
	// sima randomizaciok
  183 * 15	 02 04 B2
			80 00						// 80 azaz random object, 00, azaz nincs random trigger
			10							// szerintem ez kotelezoen ennyi, azt irja, hogy "first random bit to use", 10 volt itt...
			04							// hany darab random lehetosegunk van
			03 00						// Action2 azonositoja minden egyes lehetosegnek kulon
			03 00			// 3 a nem kopott, ures
			03 00
			07 00			// pados, viragladas

	// lampas randomizaciok
  184 * 15	 02 04 B1
			80 00						// 80 azaz random object, 00, azaz nincs random trigger
			10							// szerintem ez kotelezoen ennyi
			04							// hany darab random lehetosegunk van
			05 00						// Action2 azonositoja minden egyes lehetosegnek kulon
			08 00			// a pados itt direkt van ketszer
			06 00
			08 00

	// negyedik lekerdezes, ami mar nem a szelso elemeket randomizalja
	// itt konkretan szetvalasztom, hogy minden harmadik lampas elem, a tobbi meg nem :D
  185 * 16	 02 04 B0
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			80							// azaz shift & modulo
			F0							// azaz a felso ertekre szurunk, igy alulrol minden harmadikat keressuk...
			01							// hozzaadas, azert adok hozza 1-et, mert 00 a kezdo sorszam, es ugy 3. helyett 4.re adja...
			03							// harommal osztunk, vagy mi
			01							// 1 variacio van
			B1 00 00 00					// ha 0 az eredmeny, akkor lampas randomizacio
			B2 00						// egyebkent sima randmizacio lesz...



// ez a harmadik lekerdezes, ha a deli vege van, akkor betolti azt, egyebkent a kozepso lekerdezesekre ugrik...
  186 * 14	 02 04 A2
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			00							// shift eltolas, hany bittel arrebb szerenem lekerdezni, pl 0C az 12 bit, azaz Lc bitek
			F0							// maszkolas, ha F, akkor az erdekel minket
			01							// hany darab variacio van
			04 00 00 00					// 00 00 actione-re ugorjon, ha 00 es 00 range kozott van
			B0 00						// ha nincs egyezes, akkor ide ugorjon

// ez a masodik lekerdezes, ha az eszaki vege van, akkor egybol betolti a 00-s sprite-ot, egyebkent a harmadik lekerdezesre ugrik
  187 * 14	 02 04 A1
			81 49						// 81 lower byte, 49 type, azaz mekkora tavolsagra van.
			00							// shift eltolas
			0F							// maszkolas
			01							// hany darab variacio van
			02 00 00 00					// 91 00 actione-re ugorjon, ha 00 min es 00 max range kozott van
			A2 00						// ha nincs egyezes, akkor ide ugorjon


// ez az elso lekerdezes, ezzel kerdezem le
  188 * 14	 02 04 A0
			81 49						// 81 lower byte, 40 type, Platform info and relative position
			10								// shift eltolas, hany bittel arrebb szerenem lekerdezni, pl 0C az 12 bit, azaz Lc bitek
			0F							// maszkolas
			01							// hany darab variacio van
			01 00 01 01					// 01 00 actione-re ugorjon, ha 01 min es 01 max range kozott van
			A1 00						// ha nincs egyezes, akkor ide ugorjon



// ez meg nem lekerdezes, hanem calback elvalaszto
  189 * 17	 02 04 AA
			85							// get word
			0C							// check if callback
			00
			FF FF
			01							// hany range
			00							// ennyi legyen, ha 14-es callback van
			00							// elvalaszto, vagyis nem is, vagy nem tudom, 80 volt itt elotte, de igy most majdnem jo...
			14 00	14 00				// Set to use during callback 14, tehat ha 14-es min es 14-es max callback van.
			A0 00						// else graphics Set

////// make available from 1950
//  527 * 14    02 04
//         FA                   // setID
//         81                  // type
//         01 00 FF
//         01                  // numRanges
//          00 80 00 00            // XX - 1920. So for 1950 = 00 80 00 1E
//          01 80                  // allow

// callback handler for build menu
// switch between callback and graphics branches
  190 * 17	 02 04 C0					// Set-ID C0
			85 0C 00 FF FF				// get word, check if callback
			01							// one range
//			FA 00 13 00 13 00			// lekerdezzuk, hogy elerheto-e, tehat a 13 callback az elerhetoseg???
			00 80 14 00 14 00			// use layouts 06/07 during callback 14
			00 00						// menu grafika....

//   00 * 00	03 04 01 05 00 A0 00		// igy nincs cargo azonositas, hanem azonnal ugrunk a A0 action2-re
  191 * 10	 03 04 01 08
   01									// hany darab kulonbozo cargo
   FF C0 00								// FF elvileg a menu hivasa, ezt olvastam...
//   FE 00 00								// FE, ez a kozepe mezore vagy a kozepehez kepest eszakra levo mezore a grafikat hivja meg...
   AA 00								// ha nem menu, akkor AA action2-re

//**************************************//
//				Strings					//
//**************************************//

  192 * 21	 04 04 FF 01 05 C4 "Magyar peronok" 00
  193 * 15	 04 04 FF 01 05 C5 "Peron 1a" 00
  194 * 15	 04 04 FF 01 06 C5 "Peron 1b" 00
  195 * 15	 04 04 FF 01 07 C5 "Peron 2a" 00
  196 * 15	 04 04 FF 01 08 C5 "Peron 2b" 00
